; ModuleID = '/home/mozw/Exp2/src/b10.cu'
source_filename = "/home/mozw/Exp2/src/b10.cu"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%class.Benchmark10 = type { %struct.Benchmark.base, i32, i32, i32, i32, i32, i32, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.CUstream_st*, %struct.CUstream_st*, %struct.CUgraph_st*, %struct.CUgraphExec_st*, %"class.std::vector", %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams }
%struct.Benchmark.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%struct.CUstream_st = type opaque
%struct.CUgraph_st = type opaque
%struct.CUgraphExec_st = type opaque
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" }
%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" = type { %struct.CUgraphNode_st**, %struct.CUgraphNode_st**, %struct.CUgraphNode_st** }
%struct.CUgraphNode_st = type opaque
%struct.cudaKernelNodeParams = type { i8*, %struct.dim3, %struct.dim3, i32, i8**, i8** }
%struct.dim3 = type { i32, i32, i32 }
%struct.Benchmark = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%struct.CUevent_st = type opaque
%"class.__gnu_cxx::__normal_iterator" = type { %struct.CUgraphNode_st** }
%"class.std::allocator" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.std::allocator.0" = type { i8 }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %struct.CUgraphNode_st** }

$_ZN4dim3C2Ejjj = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_ = comdat any

$_ZNSt7__cxx119to_stringEf = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZN9BenchmarkD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_ = comdat any

$_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_ = comdat any

$_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m = comdat any

$_ZNSaIP14CUgraphNode_stED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E = comdat any

$_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv = comdat any

$_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_ = comdat any

$_ZTS9Benchmark = comdat any

$_ZTI9Benchmark = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV11Benchmark10 = dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI11Benchmark10 to i8*), i8* bitcast (void (%class.Benchmark10*)* @_ZN11Benchmark105allocEv to i8*), i8* bitcast (void (%class.Benchmark10*)* @_ZN11Benchmark104initEv to i8*), i8* bitcast (void (%class.Benchmark10*)* @_ZN11Benchmark105resetEv to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1013execute_asyncEi to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1012execute_syncEi to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1017execute_cudagraphEi to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1024execute_cudagraph_manualEi to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1024execute_cudagraph_singleEi to i8*), i8* bitcast (void (%class.Benchmark10*, i32)* @_ZN11Benchmark1016execute_AssOfKFCEi to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.Benchmark10*, i1)* @_ZN11Benchmark1012print_resultB5cxx11Eb to i8*), i8* bitcast (void (%class.Benchmark10*)* @_ZN11Benchmark10D1Ev to i8*), i8* bitcast (void (%class.Benchmark10*)* @_ZN11Benchmark10D0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS11Benchmark10 = dso_local constant [14 x i8] c"11Benchmark10\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS9Benchmark = linkonce_odr dso_local constant [11 x i8] c"9Benchmark\00", comdat, align 1
@_ZTI9Benchmark = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS9Benchmark, i32 0, i32 0) }, comdat, align 8
@_ZTI11Benchmark10 = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZTS11Benchmark10, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9Benchmark to i8*) }, align 8
@.str = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@0 = private unnamed_addr constant [23 x i8] c"_Z6conv2diPfS_S_iiiiii\00", align 1
@1 = private unnamed_addr constant [27 x i8] c"_Z12mean_poolingiPfS_iiiii\00", align 1
@2 = private unnamed_addr constant [15 x i8] c"_Z3gapiPfS_iii\00", align 1
@3 = private unnamed_addr constant [24 x i8] c"_Z11dot_productiPfS_S_i\00", align 1
@4 = private unnamed_addr constant [18 x i8] c"_Z6concatiPfS_S_i\00", align 1
@5 = private constant [42385 x i8] c"P\EDU\BA\01\00\10\00\80\A5\00\00\00\00\00\00\02\00\01\01@\00\00\00\B8\85\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00F\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00q\00\00\00\00\00\00\00\00\00\00\00\10\85\00\00\00\00\00\00\90}\00\00\00\00\00\00F\05F\00@\008\00\03\00@\00\1E\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text._Z6concatiPfS_S_i\00.nv.info._Z6concatiPfS_S_i\00.nv.shared._Z6concatiPfS_S_i\00.nv.global\00.nv.global.init\00.nv.constant0._Z6concatiPfS_S_i\00.text._Z11dot_productiPfS_S_i\00.nv.info._Z11dot_productiPfS_S_i\00.nv.shared._Z11dot_productiPfS_S_i\00.rela.text._Z11dot_productiPfS_S_i\00.rel.text._Z11dot_productiPfS_S_i\00.nv.constant0._Z11dot_productiPfS_S_i\00.text._Z3gapiPfS_iii\00.nv.info._Z3gapiPfS_iii\00.nv.shared._Z3gapiPfS_iii\00.rela.text._Z3gapiPfS_iii\00.rel.text._Z3gapiPfS_iii\00.nv.constant0._Z3gapiPfS_iii\00.text._Z12mean_poolingiPfS_iiiii\00.nv.info._Z12mean_poolingiPfS_iiiii\00.nv.shared._Z12mean_poolingiPfS_iiiii\00.nv.constant0._Z12mean_poolingiPfS_iiiii\00.text._Z6conv2diPfS_S_iiiiii\00.nv.info._Z6conv2diPfS_S_iiiiii\00.nv.shared._Z6conv2diPfS_S_iiiiii\00.nv.constant0._Z6conv2diPfS_S_iiiiii\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00_Z6concatiPfS_S_i\00.text._Z6concatiPfS_S_i\00.nv.info._Z6concatiPfS_S_i\00.nv.shared._Z6concatiPfS_S_i\00.nv.global\00threadIdx\00blockDim\00blockIdx\00gridDim\00.nv.global.init\00_$_str\00$_Z6concatiPfS_S_i$kernel_local\00$_Z6concatiPfS_S_i$out_local\00.nv.constant0._Z6concatiPfS_S_i\00_param\00_Z11dot_productiPfS_S_i\00.text._Z11dot_productiPfS_S_i\00.nv.info._Z11dot_productiPfS_S_i\00.nv.shared._Z11dot_productiPfS_S_i\00$_Z11dot_productiPfS_S_i$_Z11warp_reducef\00$_Z11dot_productiPfS_S_i$_Z16__shfl_down_syncjfji\00$_Z11dot_productiPfS_S_i$_ZL9atomicAddPff\00$_Z11dot_productiPfS_S_i$__cuda_sm70_shflsync_down\00.rela.text._Z11dot_productiPfS_S_i\00.rel.text._Z11dot_productiPfS_S_i\00$_Z11dot_productiPfS_S_i$kernel_local\00$_Z11dot_productiPfS_S_i$out_local\00.nv.constant0._Z11dot_productiPfS_S_i\00_Z3gapiPfS_iii\00.text._Z3gapiPfS_iii\00.nv.info._Z3gapiPfS_iii\00.nv.shared._Z3gapiPfS_iii\00$_Z3gapiPfS_iii$_ZL9atomicAddPff\00$_Z3gapiPfS_iii$__cuda_sm3x_div_rn_noftz_f32\00$_Z3gapiPfS_iii$__cuda_sm3x_div_rn_noftz_f32_slowpath\00.rela.text._Z3gapiPfS_iii\00.rel.text._Z3gapiPfS_iii\00$_Z3gapiPfS_iii$kernel_local\00$_Z3gapiPfS_iii$out_local\00.nv.constant0._Z3gapiPfS_iii\00_Z12mean_poolingiPfS_iiiii\00.text._Z12mean_poolingiPfS_iiiii\00.nv.info._Z12mean_poolingiPfS_iiiii\00.nv.shared._Z12mean_poolingiPfS_iiiii\00$_Z12mean_poolingiPfS_iiiii$__cuda_sm3x_div_rn_noftz_f32\00$_Z12mean_poolingiPfS_iiiii$__cuda_sm3x_div_rn_noftz_f32_slowpath\00$_Z12mean_poolingiPfS_iiiii$kernel_local\00$_Z12mean_poolingiPfS_iiiii$out_local\00.nv.constant0._Z12mean_poolingiPfS_iiiii\00_Z6conv2diPfS_S_iiiiii\00.text._Z6conv2diPfS_S_iiiiii\00.nv.info._Z6conv2diPfS_S_iiiiii\00.nv.shared._Z6conv2diPfS_S_iiiiii\00$_Z6conv2diPfS_S_iiiiii$_ZL3maxfd\00$_Z6conv2diPfS_S_iiiiii$__cuda_sm3x_div_rn_noftz_f32\00$_Z6conv2diPfS_S_iiiiii$__cuda_sm3x_div_rn_noftz_f32_slowpath\00$_Z6conv2diPfS_S_iiiiii$kernel_local\00$_Z6conv2diPfS_S_iiiiii$out_local\00.nv.constant0._Z6conv2diPfS_S_iiiiii\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.actionp\04\00\00\00\00\00\00@\02\00\00\00\00\00\00\E2\01\00\00\22\00\13\00\B0\06\00\00\00\00\00\00\80\01\00\00\00\00\00\00\14\02\00\00\02\00\13\000\08\00\00\00\00\00\00\F0\01\00\00\00\00\00\00>\02\00\00\22\00\13\00 \0A\00\00\00\00\00\00`\00\00\00\00\00\00\00\FF\02\00\00\03\00\0E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\004\03\00\00\03\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00{\03\00\00\02\00\14\00\00\0A\00\00\00\00\00\00\F0\01\00\00\00\00\00\00\9C\03\00\00\22\00\14\00\F0\0B\00\00\00\00\00\00`\01\00\00\00\00\00\00\C9\03\00\00\22\00\14\00P\0D\00\00\00\00\00\000\07\00\00\00\00\00\00i\04\00\00\03\00\0F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A1\04\00\00\03\00\15\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0C\05\00\00\22\00\15\00 \0D\00\00\00\00\00\00p\01\00\00\00\00\00\00E\05\00\00\22\00\15\00\90\0E\00\00\00\00\00\00p\07\00\00\00\00\00\00\D6\05\00\00\03\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\06\00\00\03\00\16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00u\06\00\00\02\00\16\00\10\14\00\00\00\00\00\00`\01\00\00\00\00\00\00\97\06\00\00\22\00\16\00p\15\00\00\00\00\00\00p\01\00\00\00\00\00\00\CC\06\00\00\22\00\16\00\E0\16\00\00\00\00\00\00\A0\07\00\00\00\00\00\00Q\07\00\00\03\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00v|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\03\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80((\04\CC\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\04\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(P\04\08\01\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\80\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\80\80\80(\16\81\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00p\04\00\00\00\00\00\000\02\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\8C\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\8C\80\80(\16\8D\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00H\01\00\00\00\00\00\00\B0\06\00\00\00\00\00\00p\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\8A\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\8A\80\80(\16\8B\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\B0\01\00\00\00\00\00\000\08\00\00\00\00\00\00\E0\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\89\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\89\80\80(\16\8A\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\18\02\00\00\00\00\00\00 \0A\00\00\00\00\00\00`\00\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\80\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\09\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(X\04l\02\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\8C\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\8C\80\80(\16\8D\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\F0\02\00\00\00\00\00\00\00\0A\00\00\00\00\00\00\E0\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\86\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\86\80\80(\16\87\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00X\03\00\00\00\00\00\00\F0\0B\00\00\00\00\00\00P\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\88\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\88\80\80(\16\89\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\C0\03\00\00\00\00\00\00P\0D\00\00\00\00\00\000\07\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00(\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\0D\00\00\00\00\00\00\04\04\00\00\00\04\08\00\00\00\0C\81\80\80(h\04$\03\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\84\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\84\80\80(\16\85\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\98\04\00\00\00\00\00\00 \0D\00\00\00\00\00\00`\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\86\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\86\80\80(\16\87\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\90\0E\00\00\00\00\00\00`\07\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00h\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\04\04\00\00\00\04\08\00\00\00\0C\81\80\80(\A8\01\04\E0\04\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\80\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\80\80\80(\16\81\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\D8\05\00\00\00\00\00\00\10\14\00\00\00\00\00\00P\01\00\00\00\00\00\00\044\00\00\00\09\84\80\80(\80\80\80(\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\84\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\84\80\80(\16\85\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00P\06\00\00\00\00\00\00p\15\00\00\00\00\00\00`\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\86\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\86\80\80(\16\87\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\B8\06\00\00\00\00\00\00\E0\16\00\00\00\00\00\00\90\07\00\00\00\00\00\00\04/\08\00$\00\00\00\16\00\00\00\04#\08\00\1C\00\00\00\00\00\00\00\04\12\08\00\1C\00\00\00\00\00\00\00\04\11\08\00\1C\00\00\00\00\00\00\00\04#\08\00\1B\00\00\00\00\00\00\00\04\12\08\00\1B\00\00\00\00\00\00\00\04\11\08\00\1B\00\00\00\00\00\00\00\04#\08\00\1A\00\00\00\00\00\00\00\04\12\08\00\1A\00\00\00\00\00\00\00\04\11\08\00\1A\00\00\00\00\00\00\00\04#\08\00$\00\00\00\00\00\00\00\04\12\08\00$\00\00\00\A8\00\00\00\04\11\08\00$\00\00\00\A8\00\00\00\04/\08\00#\00\00\00\14\00\00\00\04#\08\00\17\00\00\00\00\00\00\00\04\12\08\00\17\00\00\00\00\00\00\00\04\11\08\00\17\00\00\00\00\00\00\00\04#\08\00\16\00\00\00\00\00\00\00\04\12\08\00\16\00\00\00\00\00\00\00\04\11\08\00\16\00\00\00\00\00\00\00\04#\08\00#\00\00\00\00\00\00\00\04\12\08\00#\00\00\00h\00\00\00\04\11\08\00#\00\00\00hq\00\00\00\04\0A\08\00\09\00\00\00`\01$\00\03\19$\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00p\01\00\00p\03\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\0F\00\00\00`\01$\00\03\19$\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04(\08\00\A0\07\00\00\10\08\00\00\04\1C\08\00\E0\03\00\00`\04\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\14\00\00\00`\01$\00\03\19$\00\04\17\0C\00\00\00\00\00\05\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\04\00\1C\00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\0C\00\10\00\00\00\F0\0B\00\00P\0D\00\00\04\1C\08\00\B0\07\00\00\F0\09\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\18\00\00\00`q\00\00\00\04\0A\08\00\1D\00\00\00`\018\00\03\198\00\04\17\0C\00\00\00\00\00\09\004\00\00\F0\11\00\04\17\0C\00\00\00\00\00\08\000\00\00\F0\11\00\04\17\0C\00\00\00\00\00\07\00,\00\00\F0\11\00\04\17\0C\00\00\00\00\00\06\00(\00\00\F0\11\00\04\17\0C\00\00\00\00\00\05\00$\00\00\F0\11\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\0C\00\10\00\00\00pp\04\00\00\00\00\00\00\02\00\00\00#\00\00\00\18\04\00\00\00\00\00\00\02\00\00\00\22\00\00\00\B0\03\00\00\00\00\00\00\02\00\00\00\22\00\00\00H\03\00\00\00\00\00\00\02\00\00\00\22\00\00\00\C8\02\00\00\00\00\00\00\02\00\00\00\22\00\00\00pv\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\D8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0C\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$z\0D\00\00\00\00\00\03\02\8E\07\00\C8\1F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0C\EB\10\00\00\E8\01\00\80y\0E\02 \00\00\00\00\EB\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00\02z\06\00\00\\\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\02z\0B\00\00X\00\00\00\0F\00\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E4\0F\00$v\08\FF\00^\00\00\FF\00\8E\07\00\C4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E4\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\01\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0B\E9\10\00\00\E2\01\00\0Cr\00\0F\0E\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E2\0E\00\19x\07\FF\1F\00\00\00\00\14\01\00\00\E2O\00$x\0B\00\04\00\00\00\FF\00\8E\07\00\C6\0F\00\19x\0D\00\02\00\00\00\07\02\01\00\00\E4\0F\00\10r\08\04\0B\00\00\00\FF\E0\F1\07\00\E4\8F\00\80y\06\02\08\00\00\00\00\EB\10\00\00\A6\0E\00$x\09\05\01\00\00\00\0D\06\0E\00\00\D0\0F\00\80y\09\08\00\00\00\00\00\E9\10\00\00\E2\0E\00\10r\0A\06\0B\00\00\00\FF\E0\F1\07\00\CAO\00$x\0B\07\01\00\00\00\0D\06\0E\00\00\D0\0F\00\85s\00\0A\00\00\00\00\09\E9\10\00\00\E8\81\00\80y\0E\02 \00\00\00\00\EB\10\00\00\A8\0E\00\80y\04\02\18\00\00\00\00\EB\10\00\00\E8\0E\00\80y\06\02\08\00\00\00\00\EB\10\00\00\22\0F\00\19x\0D\FF\1F\00\00\00\0F\14\01\00\00\C4O\00\11r\04\0F\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\05\0F\05\00\00\00\0D\14\0F\00\00\D0\0F\00\80y\05\04\00\00\00\00\00\E9\10\00\00\A2\0E\00\10r\0D\0F\0E\00\00\00\FF\E0\FF\07\00\C8\0F\00\19x\00\FF\1F\00\00\00\0D\14\01\00\00\E4\0F\00\11r\06\0D\06\00\00\00\FF\10\80\07\00\C8\0F\01\11r\07\0D\07\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\06\00\00\00\00\05\E9\10\00\00\E8C\00\80y\00\02$\00\00\00\00\E9\10\00\00\A2\0E\00$v\09\FF\00\00\00\00\FF\00\8E\07\00\C8\1F\00$z\09\09\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02$\00\00\00\09\E9\10\00\00\E8\03\00\80y\0A\02 \00\00\00\00\EB\10\00\00\A4\0E\00\0Cr\00\0B\0A\00\00\00pb\F0\03\00\D8O\00G\89\00\00\10\FE\FF\FF\FF\FF\83\03\00\EA/\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\B0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$t\0F\FF \00\00\00\FF\00\8E\07\00\E4\0F\00$r\10\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00$z\11\00\00\00\00\00\03\02\8E\07\00\C4\1F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\01\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\02 \00\00\00\00\E9\10\00\00\A2\0E\00\02z\04\00\00Z\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\02z\09\00\00_\00\00\00\0F\00\00\00\E2\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E2\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E2\0F\00Ey\00\00\00\02\00\00\00\00\80\03\00\E2\0F\00$v\08\FF\00^\00\00\FF\00\8E\07\00\C4\0F\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\01\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00G\09\00\00p\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\06\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\08\02,\00\00\00\00\E9\10\00\00h\0F\00\80y\0D\02 \00\00\00\00\E9\10\00\00b\0F\00$x\0B\00\04\00\00\00\FF\00\8E\07\00\E2O\00\19x\09\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\09\00\02\00\00\00\09\02\01\00\00\E4\0F\00\10r\04\04\0B\00\00\00\FF\E0\F1\07\00\E2\8F\08\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00\10r\06\06\0B\00\00\00\FF\E0\F3\07\00\C6\0F\01$x\05\05\01\00\00\00\09\06\0E\00\00\E4\0F\10$x\07\07\01\00\00\00\09\06\8E\00\00\E2\0F\00\02z\0B\00\00\00\00\00\00\0F\00\00\00\CA\0F\00\80y\04\04\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\06\00\00\00\00\00\E9\10\00\00\A2\0E\00$z\0B\0B\00\03\00\00\08\02\8E\07\00\D0\0F\02\85s\00\02,\00\00\00\0B\E9\10\00\00\E8\01\00\80y\08\02,\00\00\00\00\E9\10\00\00\E2\0E\00#r\09\04\07\00\00\00\00\00\00\00\00\D0O\00\85s\00\02(\00\00\00\09\E9\10\00\00\E2\01\00\0Cr\00\08\0D\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\90\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\07\02(\00\00\00\00\E9\10\00\00b\01\00\02x\00\00\90\03\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\E0\00\00\00\00\00\C0\03\00\EA\1F\02\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\19y\07\00\00\00\00\00\00!\00\00\00(\0E\00\85s\00\02(\00\00\00\05\E9\10\00\00\E2\03\00\10x\00\00\FF\FF\FF\FF\FF\E0\FF\07\00\C8O\00\12r\FF\07\00\00\00\00\FF\C0\80\07\00\D8\1F\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\0D\02(\00\00\00\00\E9\10\00\00h!\00\80y\04\02\08\00\00\00\00\EB\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\000\00\00\00\00\00\80\03\00\E2\0F\00\02x\0A\00P\04\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\E0\03\00\00\00\00\C0\03\00\EA\1F\02Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\10x\04\010\00\00\00\FF\E0\FF\07\00\E2\0F\00$t\0B\FF \00\00\00\FF\00\8E\07\00\C6\0F\00\10z\04\04\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\05\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\04\04\00\00\00\0B\E9\10\00\00\E8\01\00\80y\06\04\04\00\00\00\00\E9\10\00\00\A4\0E\00\11r\06\06\06\00\00\00\FF\08\8F\07\00\C8O\00\19x\09\FF\01\00\00\00\06\14\01\00\00\D0\0F\00\85s\00\04\08\00\00\00\09\E9\10\00\00\E8\01\00\80y\06\04\08\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00@\01\00\00\00\00\80\03\00\E4\0F\00\85s\00\04\00\00\00\00\07\E9\10\00\00\E2\01\00\0Cx\00\06\01\00\00\00pb\F0\03\00\D8O\00G\89\00\00\00\01\00\00\00\00\80\03\00\EA\1F\00\80y\09\04\00\00\00\00\00\E9\10\00\00h\01\00\80y\0B\04\08\00\00\00\00\E9\10\00\00b\01\00\02x\0C\00\A0\05\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\10\01\00\00\00\00\C0\03\00\EA\1F\02\80y\07\04\08\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\04\00\00\00\00\00\E9\10\00\00\E2\0E\00\11r\07\07\07\00\00\00\FF\08\8F\07\00\C8O\00\19x\09\FF\01\00\00\00\07\14\01\00\00\D0\0F\00\85s\00\04\08\00\00\00\09\E9\10\00\00\E8\01\00\80y\08\04\08\00\00\00\00\E9\10\00\00\A2\0E\00!r\07\06\0B\00\00\00\00\00\00\00\00\D0\8F\00\85s\00\04\00\00\00\00\07\E9\10\00\00\E2\01\00\0Cx\00\08\01\00\00\00pb\F0\03\00\D8O\00F\09\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\09\00\00\00\FF\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\04\00\00\00\00\00\E9\10\00\00\22\00\00$r\06\FF\FF\00\00\00\00\00\8E\07\00\E4\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06P\F9\FF\FF\FF\FF\C3\03\00\EA\1F\00\10x\06\01<\00\00\00\FF\E0\FF\07\00\E4\0F\00\02x\11\00 \00\00\00\00\0F\00\00\00\E4\0F\00\10z\06\06\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\07\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\06\0C\00\00\00\11\E9\10\00\00\E8\01\00\80y\0A\06\0C\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\06\04\00\00\00\09\E9\10\00\00\E8\01\00\85s\00\06\08\00\00\00\0B\E9\10\00\00\E8\01\00\80y\08\06\04\00\00\00\00\E9\10\00\00h\01\00\80y\0D\06\08\00\00\00\00\E9\10\00\00b\01\00$t\0F\FF\FF\FF\FF\FF\FF\00\8E\07\00\D0\0F\00\85s\00\06\00\00\00\00\0F\E9\10\00\00\E2\01\00\10x\0A\0A \00\00\00\FF\E1\FF\07\00\C8O\00\11x\0A\0A\1F\00\00\00\FF@\8E\07\00\E2\0F\00Gy\00\00R\00\00\00\00\00\80\03\00\EE\0F\00\89s\08\08\0D\00\00\08\0A\00\0E\00\00d\10\02$r\06\FF\FF\00\00\00\0C\00\8E\07\00\E2\0F\00\02x\07\00\00\00\00\00\00\0F\00\00\00\E2\0F\00$r\0B\FF\FF\00\00\00\08\00\8E\07\00\CA/\00Py\00\06\10\F8\FF\FF\FF\FF\C3\03\00\EA\1F\00\80y\06\06\00\00\00\00\00\E9\10\00\00b\11\00\02x\09\00 \08\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\00\02\00\00\00\00\C0\03\00\EA\1F\02Gy\00\00\80\FF\FF\FF\FF\FF\83\03\00\EA\0F\00\10x\02\010\00\00\00\FF\E0\FF\07\00\C8\0F\00\10z\02\02\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\0F\00\85s\00\02\18\00\00\00\0D\E9\10\00\00\E8\0F\00\80y\06\02\10\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0F\02\18\00\00\00\00\E9\10\00\00\E8\0E\00\85s\00\02\00\00\00\00\06\EB\10\00\00\E8O\00\85s\00\02\08\00\00\00\0F\E9\10\00\00\E8\81\00\80y\11\02\08\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02\00\00\00\00\00\EB\10\00\00\A2\0E\00$t\0B\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\8As\FF\08\11\00\00\00\FFG\11\00\00&N\00P\09\00\0A\F0\F6\FF\FF\FF\FF\C3\03\00\EA\1F\00\AAs\FF\08\00\00\00\00\00\05\00\00\00$\0E\00G\89\00\00\90\00\00\00\00\00\80\03\00\EA\1F\00\12x\08\08\FF\FF\FF\00\FF\C0\8E\07\00\D0\0F\00\84y\02\08\00\00\00\00\00\18\00\00\00$\0E\00!r\03\11\02\00\00\00\00\00\00\00\00\D0\1F\00\8Ds\03\08\02\00\00\00\03\00\80\01\00$\0E\00\0Cx\00\03\01\00\00\00p \F0\03\00\D8\1F\00G\89\00\00\B0\FF\FF\FF\FF\FF\83\03\00\EA\0F\00$r\02\FF\FF\00\00\00\0A\00\8E\07\00\E4\0F\00$t\03\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\02@\F6\FF\FF\FF\FF\C3\03\00\EA\0F\00\80y\00\08\00\00\00\00\00\E9\10\00\00\A2\0E\00\02r\02\00\0A\00\00\00\00\0F\00\00\00\E2\0F\00$t\03\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\11\11\00\00\00\00\00\00\00\00\00\D0O\00\85s\00\08\00\00\00\00\11\E9\10\00\00\E4\01\00Py\00\02\E0\F5\FF\FF\FF\FF\C3\03\00\EA\1F\00Hs\00\00\06\00\00\00\00\00\80\03\00\E8\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\89s\08\08\0D\00\00\08\0A\00\0E\00\00\22\0E\00$r\06\FF\FF\00\00\00\09\00\8E\07\00\CC\0F\00Py\00\06\90\F5\FF\FF\FF\FF\C3\03\00\EA\1F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\0F\00\00\00\00\00\00!\00\00\00\22\0E\00\10x\01\01\A8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00`\00\00\FF\00\8E\07\00\C6\0F\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\11\00\80y\10\02 \00\00\00\00\EB\10\00\00\A2\0E\00$v\0C\FF\00^\00\00\FF\00\8E\07\00\E2\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00$v\0D\FF\00_\00\00\FF\00\8E\07\00\E2\0F\00\19y\09\00\00\00\00\00\00%\00\00\00b\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00Ey\00\00p\01\00\00\00\00\80\03\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\C4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\18\00\00\00\0C\EB\10\00\00\E2\01\00$v\0B\FF\00X\00\00\FF\00\8E\07\00\C6\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\01\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0B\E9\10\00\00\E2\01\00$z\09\09\00\00\00\00\0F\02\8E\07\00\E2/\00\0Cr\00\11\10\00\00\00pb\F0\03\00\D8O\00G\09\00\00\B0\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\02$\00\00\00\00\E9\10\00\00\A4\0E\00\19x\05\FF\1F\00\00\00\00\14\01\00\00\E4O\00\11z\04\00\00\06\00\00\FF\10\80\07\00\C8\0F\00\11z\05\00\00\07\00\00\05\14\0F\00\00\D0\0F\00\85s\00\04\00\00\00\00\FF\E9\10\00\00\E8\01\00\80y\00\02$\00\00\00\00\E9\10\00\00\A4\0E\00\10z\07\00\00\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02$\00\00\00\07\E9\10\00\00\E8\01\00\80y\0A\02 \00\00\00\00\EB\10\00\00\A4\0E\00\0Cr\00\0B\0A\00\00\00pb\F0\03\00\D8O\00G\89\00\00P\FF\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\E2\0F\00\1D{\00\00\00\00\00\00\00\00\00\00\00\EA\0F\00\85s\00\02(\00\00\00\09\E9\10\00\00\E8\01\00\80y\05\02\18\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00`\04\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\000\04\00\00\00\00\80\03\00\EA\1F\00\19y\05\00\00\00\00\00\00&\00\00\00(\0E\00\19y\00\00\00\00\00\00\00\22\00\00\00(\0E\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\A2\0E\00$z\05\05\00\01\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02,\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00\10\03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8O\00G\09\00\00\E0\02\00\00\00\00\80\03\00\EA\1F\00\85s\00\020\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\020\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00\F0\01\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\C0\01\00\00\00\00\80\03\00\EA\1F\00\80y\06\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02(\00\00\00\00\EB\10\00\00\A8\0E\00\80y\00\020\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\02 \00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\22\0F\00$r\06\06\08\00\00\00\09\02\8E\07\00\C8O\00$r\07\07\06\00\00\00\00\02\8E\07\00\CA\8F\00\19x\06\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\0F\01\11r\05\07\05\00\00\00\06\14\0F\00\00\D0\0F\00\80y\13\04\00\00\00\00\00\E9\10\00\00b\01\00\19x\07\FF\1F\00\00\00\00\14\01\00\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00\11z\06\00\00\06\00\00\FF\10\80\07\00\E2\0F\04Ey\03\00@\00\00\00\00\00\80\03\00\E2\0F\00\02x\0C\00 \05\00\00\00\0F\00\00\00\E4\0F\00\11z\07\00\00\07\00\00\07\14\0F\00\00\C8\0F\00Dy\00\00\E0\04\00\00\00\00\C0\03\00\EA\1F\02Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02 \00\00\00\00\E9\10\00\00\E2\0E\00\10x\05\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\020\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00F\89\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\89\00\00@\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\01\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\04\00\00\00\02\8E\07\00\D0O\00\85s\00\02,\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00F\89\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\89\00\00 \FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02\18\00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02(\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02(\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00F\89\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\89\00\00\D0\FB\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\19y\07\00\00\00\00\00\00!\00\00\00\22\0E\00Hy\00\00\FF\FF\FF\FF\00\00\80\03\00\E8\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\E2\0F\00\1D{\00\00\00\00\00\00\00\00\00\00\00\EA\0F\00\80y\05\02 \00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\024\00\00\00\07\E9\10\00\00\E8\11\00\80y\00\024\00\00\00\00\E9\10\00\00\A4\0E\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0A\02\18\00\00\00\00\EB\10\00\00\E8\0E\00\80y\04\02\08\00\00\00\00\EB\10\00\00\22\0F\00$x\0D\00\04\00\00\00\FF\00\8E\07\00\E2O\00\19x\07\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\0F\00\02\00\00\00\07\02\01\00\00\E4\0F\00\10z\08\0D\00\06\00\00\FF\E0\F1\07\00\C8\0F\00\10z\09\0F\00\07\00\00\FF\E4\7F\00\00\D0\0F\00\80y\08\08\00\00\00\00\00\E9\10\00\00b\01\00$r\07\0B\0A\00\00\00\FF\02\8E\07\00\CC\8F\00\06s\0B\00\07\00\00\00\00\14 \00\00b\00\00\10r\00\04\0D\00\00\00\FF\E0\F1\07\00\E2\0F\01Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00@\00\00\00\00\00\80\03\00\E2\0F\00\02x\06\00\D0\08\00\00\00\0F\00\00\00\E4\0F\00$x\04\05\01\00\00\00\0F\06\0E\00\00\C8\0F\00Dy\00\00 \03\00\00\00\00\C0\03\00\EA?\02Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00`\00\00\00\00\00\80\03\00\E2\0F\00$r\06\FF\FF\00\00\00\00\00\8E\07\00\E2\0F\00\02x\0C\00P\09\00\00\00\0F\00\00\00\E2\0F\00$r\07\FF\FF\00\00\00\04\00\8E\07\00\C4\0F\00$r\13\FF\FF\00\00\00\05\00\8E\07\00\C8\0F\00Dy\00\00\B0\00\00\00\00\00\C0\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02 \00\00\00\00\E9\10\00\00\E2\0E\00\10z\05\00\00\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\024\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00F\89\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\89\00\00\D0\FD\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\10x\04\018\00\00\00\FF\E0\FF\07\00\C8\0F\00\10z\04\04\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\05\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\04\10\00\00\00\06\EB\10\00\00\E8\0F\00\85s\00\04\18\00\00\00\13\E9\10\00\00\E8\0F\00\80y\08\04\10\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0F\04\18\00\00\00\00\E9\10\00\00\E8\0E\00\85s\00\04\00\00\00\00\08\EB\10\00\00\E8O\00\85s\00\04\08\00\00\00\0F\E9\10\00\00\E8\81\00\80y\11\04\08\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0A\04\00\00\00\00\00\EB\10\00\00\A2\0E\00$t\0D\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\8As\FF\0A\11\00\00\00\FFG\11\00\00&N\00P\09\00\0C \F5\FF\FF\FF\FF\C3\03\00\EA\1F\00\AAs\FF\0A\00\00\00\00\00\05\00\00\00$\0E\00G\89\00\00\90\00\00\00\00\00\80\03\00\EA\1F\00\12x\0A\0A\FF\FF\FF\00\FF\C0\8E\07\00\D0\0F\00\84y\04\0A\00\00\00\00\00\18\00\00\00$\0E\00!r\05\11\04\00\00\00\00\00\00\00\00\D0\1F\00\8Ds\05\0A\04\00\00\00\05\00\80\01\00$\0E\00\0Cx\00\05\01\00\00\00p \F0\03\00\D8\1F\00G\89\00\00\B0\FF\FF\FF\FF\FF\83\03\00\EA\0F\00$r\04\FF\FF\00\00\00\0C\00\8E\07\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04p\F4\FF\FF\FF\FF\C3\03\00\EA\0F\00\80y\00\0A\00\00\00\00\00\E9\10\00\00\A2\0E\00$r\04\FF\FF\00\00\00\0C\00\8E\07\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\11\11\00\00\00\00\00\00\00\00\00\D0O\00\85s\00\0A\00\00\00\00\11\E9\10\00\00\E4\01\00Py\00\04\10\F4\FF\FF\FF\FF\C3\03\00\EA\1F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\02s\00\08\0B\00\00\00\00\00\00\00\00$\0E\00G\09\00\00\B0\00\00\00\00\00\80\03\00\EA\1F\00\08s\05\00\0B\00\00\00\00\10\00\00\00\22\0E\00!r\07\0B\FF\00\00\80\00\01\01\00\00\C8\0F\00#t\0A\05\00\00\80?\07\00\00\00\00\C8\1F\00#r\05\05\0A\00\00\00\05\00\00\00\00\C8\0F\00#r\0A\08\05\00\00\00\FF\00\00\00\00\C8\0F\00#r\09\07\0A\00\00\00\08\00\00\00\00\C8\0F\00#r\0A\05\09\00\00\00\0A\00\00\00\00\C8\0F\00#r\07\07\0A\00\00\00\08\00\00\00\00\C8\0F\00#r\05\05\07\00\00\00\0A\00\00\00\00\E4\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\060\F3\FF\FF\FF\FF\C3\03\00\EA\0F\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00@\00\00\00\00\00\80\03\00\E2\0F\00$r\0A\FF\FF\00\00\00\08\00\8E\07\00\E2\0F\00\02x\08\00 \0D\00\00\00\0F\00\00\00\C8\0F\00Dy\00\000\00\00\00\00\00\C0\03\00\EA\0F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06\B0\F2\FF\FF\FF\FF\C3\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19x\07\FF\17\00\00\00\0B\16\01\00\00\E2\0F\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00\19x\05\FF\17\00\00\00\0A\16\01\00\00\E2\0F\00Ey\02\00P\02\00\00\00\00\80\03\00\E2\0F\00\12x\09\07\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\05\05\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\10x\0D\09\FF\FF\FF\FF\FF\E0\FF\07\00\E4\0F\00\10x\0C\05\FF\FF\FF\FF\FF\E0\FF\07\00\C4\0F\00\0Cx\00\0D\FD\00\00\00p@\F0\03\00\C8\0F\00\0Cx\00\0C\FD\00\00\00pDp\00\00\D8\0F\00$\82\07\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00G\89\00\00\C0\01\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\0A\00\00\80\7F\00\C2\F1\03\00\E4\0F\00\0Bx\00\0B\00\00\80\7F\00\C2\F3\03\00\C8\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\D8\0F\00B\09\02\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00\D0\05\00\00\00\00\80\03\00\EA\0F\00\12x\FF\0B\FF\FF\FF\7F\0A\C8\80\07\00\D8\0F\00B\89\02\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\89\00\00p\05\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\0A\00\00\80\7F\00\D2\F5\03\00\E4\0F\04\0Bx\00\0B\00\00\80\7F\00\D2\F3\03\00\E4\0F\00\0Bx\00\0A\00\00\80\7F\00\D2\F1\03\00\D4\0F\00B\99\02\00\00\00\00\00\00\00\00\05\00\E2\0F\00G\99\00\00 \05\00\00\00\00\00\05\00\EA\0F\00\12x\FF\0A\FF\FF\FF\7F\FF\C0\84\07\00\C8\0F\00\1Cx\00\00\00\00\00\00rE\F2\00\00\D8\0F\00B\19\02\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\19\00\00\B0\04\00\00\00\00\80\03\00\EA\0F\00\12x\FF\0B\FF\FF\FF\7F\FF\C0\82\07\00\C8\0F\00\1Cx\00\00\00\00\00\00r%p\00\00\D8\0F\00B\09\02\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\000\04\00\00\00\00\80\03\00\EA\0F\00\0Cr\00\0C\FF\00\00\00pb\F0\03\00\E4\0F\00\0Cr\00\0D\FF\00\00\00pb\F2\03\00\D4\0F\00$\02\07\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#\88\0A\0A\00\00\80_\FF\00\00\00\00\E4\0F\00$\84\07\FF\C0\FF\FF\FF\FF\00\8E\07\00\E4\0F\00#\98\0B\0B\00\00\80_\FF\00\00\00\00\C6\0F\00\10\98\07\07@\00\00\00\FF\E0\FF\07\00\C8\0F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\11x\0C\09\00\00\80\C0\FF\B8\8E\07\00\E2\0F\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00`\03\00\00\00\00\80\03\00\E6\0F\00$x\0C\0B\01\00\00\00\0C\0A\8E\07\00\E2\0F\00\10x\0B\05\81\FF\FF\FF\FF\E0\FF\07\00\C6\0F\00!r\0F\0C\FF\00\00\80\00\01\01\00\00\E4\0F\00\08s\0D\00\0C\00\00\00\00\10\00\00\00\22\0E\00$x\0A\0B\00\00\80\FF\0A\02\8E\07\00\E4\0F\00#t\0E\0D\00\00\80?\0F\00\00\00\00\C8\1F\00#r\0D\0D\0E\00\00\00\0D\00\00\00\00\C8\0F\00#r\05\0A\0D\00\00\00\FF\00\00\00\00\C8\0F\00#r\0E\0F\05\00\00\00\0A\00\00\00\00\C8\0F\00#r\0E\0D\0E\00\00\00\05\00\00\00\00\C8\0F\00#r\0F\0F\0E\00\00\00\0A\00\00\00\00\E2\0F\00\10x\0A\0B\7F\00\00\00\09\E8\FF\07\00\C6\0F\00#r\05\0D\0F\00\00\00\0E\00\00\00\00\E4\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\C6\0F\00\19x\09\FF\17\00\00\00\05\16\01\00\00\C8\0F\00\12x\09\09\FF\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0B\09\01\00\00\00\0A\02\8E\07\00\CA\0F\00\10x\07\0B\FF\FF\FF\FF\FF\E0\FF\07\00\C8\0F\00\0Cx\00\07\FE\00\00\00p`\F0\03\00\D8\0F\00G\89\00\00\00\02\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0B\FE\00\00\00pB\F0\03\00\D8\0F\00G\09\00\00\B0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0B\01\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\D0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0B\E8\FF\FF\FFpb\F0\03\00\E4\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\D4\0F\00G\89\00\00\A0\01\00\00\00\00\80\03\00\EA\0F\00#r\07\0D\0F\00\00\00\0E\C0\00\00\00\E2\0F\18\10x\0C\0B \00\00\00\FF\E0\FF\07\00\E2\0F\00#r\0A\0D\0F\00\00\00\0E@\00\00\00\E2\0F\18\0Cr\00\0B\FF\00\00\00pR\F4\03\00\E4\0F\00\12x\09\07\FF\FF\7F\00\FF\C0\8E\07\00\E2\0F\00#r\07\0D\0F\00\00\00\0E\80\00\00\00\E2\0F\00\0Cr\00\0B\FF\00\00\00pR\F2\03\00\E2\0F\00$r\0B\FF\FF\00\00\00\0B\0A\8E\07\00\E2\0F\00\12x\09\09\00\00\80\00\FF\FC\8E\07\00\E4\0F\00\0Br\00\07\0A\00\00\00\00\D0\F1\03\00\C4\0F\00\19r\0C\09\0C\00\00\00\FF\06\00\00\00\E4\0F\00\07r\0A\0B\FF\00\00\00\00\00\00\01\00\E4\0F\00\0Cr\00\0C\FF\00\00\00pR\F2\00\00\E4\0F\00\19r\0A\FF\0A\00\00\00\09\16\01\00\00\E4\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\E4\0F\00\19x\0C\FF\01\00\00\00\0A\16\01\00\00\C4\0F\00\07x\07\FF\01\00\00\00\00\00\00\04\00\C8\0F\00\12x\07\07\01\00\00\00\0C\F8\8E\07\00\C8\0F\00\12r\07\07\0A\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0C\0C\01\00\00\00\07\02\8E\07\00\CA\0F\00\12r\05\0C\05\00\00\00\FF\FC\8E\07\00\E2\0F\00Gy\00\00@\00\00\00\00\00\80\03\00\EA\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Gy\00\00\10\00\00\00\00\00\80\03\00\EA\0F\00$x\05\0A\00\00\80\00\05\02\8E\07\00\C8\0F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\08`\EC\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\0A\0B\00\00\00\80\0AH\8E\07\00\C8\0F\00\12x\05\0A\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Py\00\08 \EC\FF\FF\FF\FF\C3\03\00\F0\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\0B\00\00\00\80\0AH\8E\07\00\CA\0F\00Py\00\08\F0\EB\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$t\05\FF\FF\FF\FF\7F\FF\00\8E\07\00\C8\0F\00Py\00\08\C0\EB\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\05\0A\0B\00\00\00\00\00\01\00\00\C8\0F\00Py\00\08\90\EB\FF\FF\FF\FF\C3\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\CA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\10x\01\01\98\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\10\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00$v\11\FF\00a\00\00\FF\00\8E\07\00\E2\0F\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\19y\0B\00\00\00\00\00\00%\00\00\00b\0E\00$v\0E\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00$v\0F\FF\00_\00\00\FF\00\8E\07\00\E2\0F\00\19y\08\00\00\00\00\00\00!\00\00\00b\0E\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\C4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E2\07\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\E4\0F\00$v\11\FF\00b\00\00\FF\00\8E\07\00\E2\1F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\07\00\85s\00\02\18\00\00\00\06\EB\10\00\00\E8\07\00\85s\00\02\08\00\00\00\0D\E9\10\00\00\E8\07\00\85s\00\020\00\00\00\11\E9\10\00\00\E2\07\00$z\0B\0B\00\00\00\00\08\02\8E\07\00\D0/\00\85s\00\028\00\00\00\0B\E9\10\00\00\E2\07\00\11r\00\00\00\00\00\00\FF\08\8F\07\00\C8O\00\19x\09\FF\01\00\00\00\00\14\01\00\00\D0\0F\00\85s\00\024\00\00\00\09\E9\10\00\00\E4\07\00\80y\05\02 \00\00\00\00\E9\10\00\00\A8\9E\00\80y\06\020\00\00\00\00\E9\10\00\00\E8\0E\00\80y\00\028\00\00\00\00\E9\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\04\00`\02\00\00\00\0F\00\00\00\E2\0F\00\06s\09\00\05\00\00\00\00\14 \00\00p@\00\06s\0A\00\06\00\00\00\00\14 \00\00\A4\80\00Dy\00\00\C0\0A\00\00\00\00\C0\03\00\EA\7F\02Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\06\02\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\020\00\00\00\00\EB\10\00\00\E2\0E\00\05s\06\00\06\00\00\00\00\B1 \00\00\E4N\00$x\05\06\01\00\00\00\05\0A\8E\07\00\CA\8F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8\0F\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\08\02$\00\00\00\00\E9\10\00\00\A8\1E\00\80y\0B\028\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\028\00\00\00\00\E9\10\00\00\E8\0E\00\80y\06\020\00\00\00\00\EB\10\00\00\E2\0E\00\13r\05\00\04\00\00\00\00\00\00\00\00\E2\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\80\09\00\00\00\00\80\03\00\E8\0F\00\06s\0A\00\05\00\00\00\00\94 \00\000\0E\00\08s\0A\00\0A\00\00\00\00\10\00\00\00$\1E\00\10x\0C\0A\FE\FF\FF\0F\FF\E0\FF\07\00\CC\1F\00\05s\09\00\0C\00\00\00\00\F0!\00\00$\0E\00$r\0E\FF\FF\00\00\00\09\0A\8E\07\00\C8\1F\00$r\0D\0E\05\00\00\00\FF\02\8E\07\00\E2\0F\00\13r\0E\00\04\00\00\00\00\00\00\00\00\CA\0F\00$r\0C\FF\FF\00\00\00\0E\0A\8E\07\00\E4\0F\00$r\0B\08\0B\00\00\00\FF\02\8E\07\00\E4O\00$r\08\FF\FF\00\00\00\FF\00\8E\07\00\C6\0F\00\13r\0A\00\0B\00\00\00\00\00\00\00\00\E2\0F\00%r\08\09\0D\00\00\00\08\00\8E\07\00\E2\0F\00\12r\0B\0B\04\00\00\00\FF<\8E\07\00\E2\0F\00\19y\0D\00\00\00\00\00\00\22\00\00\00&\0E\00\0Cr\00\0B\FF\00\00\00pb\F2\03\00\C6\0F\00%r\08\09\0A\00\00\00\FF\00\8E\07\00\CC\0F\00$r\08\09\0C\00\00\00\0A\02\8E\07\00\E4\0F\00\19y\0A\00\00\00\00\00\00&\00\00\00&\0E\00\0Cr\00\05\08\00\00\00p@\F4\03\00\D8\0F\00$\A8\08\08\01\00\00\00\05\0A\8E\07\00\E2\0F\00\10\A8\09\09\01\00\00\00\FF\E0\FF\07\00\E4\0F\00\0Cr\00\04\FF\00\00\00pR\F4\03\00\E4\0F\00\0Cr\00\08\05\00\00\00p`\F0\03\00\E2\0F\00$z\0B\0A\00\01\00\00\0D\02\8E\07\00\E4\1F\00$r\0A\00\06\00\00\00\07\02\8E\07\00\D2\8F\00\10\08\09\09\01\00\00\00\FF\E0\FF\07\00\E2\0F\00\85s\00\02@\00\00\00\0A\EB\10\00\00\E8\01\00$\92\09\FF\FF\00\00\00\09\0A\8E\07\00\CA\0F\00\12\A2\09\FF\04\00\00\00\FF3\8E\07\00\D0\0F\00\85s\00\02<\00\00\00\09\E9\10\00\00\E4\01\00\80y\05\02$\00\00\00\00\E9\10\00\00\A8\1E\00\80y\06\020\00\00\00\00\E9\10\00\00\E8\0E\00\80y\00\02D\00\00\00\00\E9\10\00\00b\03\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\04\00\C0\05\00\00\00\0F\00\00\00\E2\0F\00\06s\09\00\05\00\00\00\00\14 \00\000R\00\06s\0A\00\06\00\00\00\00\14 \00\00\A4\82\00Dy\00\00`\07\00\00\00\00\C0\03\00\EA\7F\02Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02\04\00\00\00\0B\E9\10\00\00\E8\01\00\80y\04\02\04\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\020\00\00\00\00\EB\10\00\00\E2\0E\00\05s\04\00\04\00\00\00\00\B1 \00\00\E4N\00$x\05\04\01\00\00\00\07\0A\8E\07\00\CA\8F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\80\06\00\00\00\00\80\03\00\EA\0F\00\80y\00\02D\00\00\00\00\E9\10\00\00\A8\1E\00\19y\05\00\00\00\00\00\00'\00\00\00(\0E\00\19y\04\00\00\00\00\00\00#\00\00\00$\0E\00$z\05\05\00\02\00\00\04\02\8E\07\00\C4\1F\00$r\04\00\06\00\00\00\07\02\8E\07\00\E4O\00\80y\07\02(\00\00\00\00\E9\10\00\00\AC\0E\00\85s\00\02H\00\00\00\04\EB\10\00\00\E8\01\00\80y\00\02L\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00\90\05\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8O\00G\09\00\00`\05\00\00\00\00\80\03\00\EA\1F\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\024\00\00\00\00\E9\10\00\00\E2\0E\00$r\07\FF\FF\00\00\00\00\0A\8E\07\00\D0O\00\85s\00\02T\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02T\00\00\00\00\E9\10\00\00\E8\0E\00\85s\00\02P\00\00\00\FF\E9\10\00\00\E2\01\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00 \03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pB\F0\03\00\D8\8F\00G\09\00\00\F0\02\00\00\00\00\80\03\00\EA\1F\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02@\00\00\00\00\E9\10\00\00\E8\0E\00\80y\05\02T\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\024\00\00\00\00\E9\10\00\00(\0F\00\80y\08\02T\00\00\00\00\E9\10\00\00\22\0F\00$r\09\FF\FF\00\00\00\00\0A\8E\07\00\C6O\00\80y\00\024\00\00\00\00\E9\10\00\00j\01\00\85s\00\02\\\00\00\00\09\E9\10\00\00\E8\01\00\80y\06\02\\\00\00\00\00\E9\10\00\00\A2\0E\00$x\05\04\01\00\00\00\05\02\8E\07\00\D0\8F\00\85s\00\02X\00\00\00\05\E9\10\00\00\E2\01\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00\E0\01\00\00\00\00\80\03\00\E2\0F\00\10x\0D\08\01\00\00\00\FF\E0\FF\07\00\E4\0F\01\0Cr\00\06\07\00\00\00pB\F0\03\00\D8O\00G\09\00\00\A0\01\00\00\00\00\80\03\00\EA\1F\00\80y\04\02H\00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\02\\\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02X\00\00\00\00\E9\10\00\00\E8\0E\00\80y\09\02$\00\00\00\00\E9\10\00\00\E8\0E\00\80y\0B\02(\00\00\00\00\E9\10\00\00(\0F\00\80y\0A\02L\00\00\00\00\E9\10\00\00(\0F\00\80y\0C\02\\\00\00\00\00\E9\10\00\00\E2\0E\00$x\07\04\01\00\00\00\05\02\8E\07\00\C6O\00\80y\04\02\18\00\00\00\00\EB\10\00\00\AA\0E\00\85s\00\02`\00\00\00\07\E9\10\00\00\E8\01\00\80y\08\02`\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\02P\00\00\00\00\E9\10\00\00\A2\1E\00$r\06\06\09\00\00\00\08\02\8E\07\00\C8\8F\00$r\0B\06\0B\00\00\00\0A\02\8E\07\00\CA\0F\01\19x\06\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\04\0B\04\00\00\00\FF\10\80\07\00\C8O\00\11r\05\0B\05\00\00\00\06\14\0F\00\00\E4\0F\00\10x\09\0C\01\00\00\00\FF\E0\FF\07\00\E2\0F\00\80y\0B\024\00\00\00\00\E9\10\00\00\AA\0E\00\80y\04\04\00\00\00\00\00\E9\10\00\00\E8\0E\00\85s\00\02\\\00\00\00\09\E9\10\00\00\E8\01\00\80y\06\02\\\00\00\00\00\E9\10\00\00\A2\0E\00!r\07\04\07\00\00\00\00\00\00\00\00\D0\8F\00\85s\00\02P\00\00\00\07\E9\10\00\00\E2\01\00\0Cr\00\06\0B\00\00\00pB\F0\03\00\D8O\00G\89\00\00`\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02T\00\00\00\0D\E9\10\00\00\E8\01\00\80y\05\02T\00\00\00\00\E9\10\00\00\A4\0E\00\0Cr\00\05\00\00\00\00pB\F0\03\00\D8O\02G\89\00\00\10\FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02P\00\00\00\00\E9\10\00\00b\01\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\04\00 \0B\00\00\00\0F\00\00\00\E2\0F\00$r\00\00\00\00\00\00\FF\02\8E\07\00\CCO\00\06s\0A\00\00\00\00\00\00\14 \00\00f\00\00Dy\00\00\00\02\00\00\00\00\C0\03\00\EA?\02Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\06\02D\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02<\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02L\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\02(\00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\22\0F\00$x\06\06\01\00\00\00\09\02\8E\07\00\C8O\00$r\07\07\06\00\00\00\00\02\8E\07\00\CA\8F\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\0F\01\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\04\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\02L\00\00\00\00\E9\10\00\00\A2\0E\00$v\07\FF\00\02\00\00\FF\00\8E\07\00\C6\0F\00\80y\09\02(\00\00\00\00\E9\10\00\00\E2\0E\00$z\07\07\00\05\00\00\00\02\8E\07\00\D0O\00\85s\00\02L\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02L\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\09\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\A0\FA\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02D\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\01\00\00\FF\00\8E\07\00\C8\0F\00$z\05\05\00\04\00\00\00\02\8E\07\00\D0O\00\85s\00\02D\00\00\00\05\E9\10\00\00\E2\01\00Gy\00\00p\F8\FF\FF\FF\FF\83\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\028\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C8\0F\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\028\00\00\00\05\E9\10\00\00\E2\01\00Gy\00\00\B0\F4\FF\FF\FF\FF\83\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\02s\00\09\0A\00\00\00\00\00\00\00\00$\0E\00G\09\00\00\B0\00\00\00\00\00\80\03\00\EA\1F\00\08s\05\00\0A\00\00\00\00\10\00\00\00\22\0E\00!r\06\0A\FF\00\00\80\00\01\01\00\00\C8\0F\00#t\08\05\00\00\80?\06\00\00\00\00\C8\1F\00#r\08\05\08\00\00\00\05\00\00\00\00\C8\0F\00#r\05\09\08\00\00\00\FF\00\00\00\00\C8\0F\00#r\07\06\05\00\00\00\09\00\00\00\00\C8\0F\00#r\07\08\07\00\00\00\05\00\00\00\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00#r\06\06\07\00\00\00\09\00\00\00\00\C8\0F\00#r\0B\08\06\00\00\00\07\00\00\00\00\E2\0F\00Py\00\04\00\F2\FF\FF\FF\FF\C3\03\00\F0\0F\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00@\00\00\00\00\00\80\03\00\E2\0F\00$r\08\FF\FF\00\00\00\0A\00\8E\07\00\E2\0F\00\02x\06\00P\0E\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00@\00\00\00\00\00\C0\03\00\EA\0F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00$r\0B\FF\FF\00\00\00\05\00\8E\07\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04p\F1\FF\FF\FF\FF\C3\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19x\07\FF\17\00\00\00\08\16\01\00\00\E2\0F\00Us\FF\04\00\00\00\00\00\00\10\00\00\E2\0F\00\19x\05\FF\17\00\00\00\09\16\01\00\00\E2\0F\10Ey\04\00`\02\00\00\00\00\80\03\00\E2\0F\00\12x\0D\07\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\0B\05\FF\00\00\00\FF\C0\8E\07\00\E2\0F\00$r\05\FF\FF\00\00\00\09\00\8E\07\00\E2\0F\00\10x\0C\0D\FF\FF\FF\FF\FF\E0\FF\07\00\E4\0F\00\10x\0A\0B\FF\FF\FF\FF\FF\E0\FF\07\00\C4\0F\00\0Cx\00\0C\FD\00\00\00p@\F0\03\00\C8\0F\00\0Cx\00\0A\FD\00\00\00pDp\00\00\D8\0F\00$\82\07\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00G\89\00\00\C0\01\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\C2\F1\03\00\E4\0F\00\0Bx\00\08\00\00\80\7F\00\C2\F3\03\00\C8\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\D8\0F\00B\09\04\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00\D0\05\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\05\C8\80\07\00\D8\0F\00B\89\04\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\89\00\00p\05\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F5\03\00\E4\0F\04\0Bx\00\08\00\00\80\7F\00\D2\F3\03\00\E4\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F1\03\00\D4\0F\00B\99\04\00\00\00\00\00\00\00\00\05\00\E2\0F\00G\99\00\00 \05\00\00\00\00\00\05\00\EA\0F\00\12x\FF\05\FF\FF\FF\7F\FF\C0\84\07\00\C8\0F\00\1Cx\00\00\00\00\00\00rE\F2\00\00\D8\0F\00B\19\04\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\19\00\00\B0\04\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\FF\C0\82\07\00\C8\0F\00\1Cx\00\00\00\00\00\00r%p\00\00\D8\0F\00B\09\04\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\000\04\00\00\00\00\80\03\00\EA\0F\00\0Cr\00\0A\FF\00\00\00pb\F0\03\00\E4\0F\00\0Cr\00\0C\FF\00\00\00pb\F2\03\00\D4\0F\00$\02\07\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#\88\05\09\00\00\80_\FF\00\00\00\00\E4\0F\00$\84\07\FF\C0\FF\FF\FF\FF\00\8E\07\00\E4\0F\00#\98\08\08\00\00\80_\FF\00\00\00\00\C6\0F\00\10\98\07\07@\00\00\00\FF\E0\FF\07\00\C8\0F\00Ay\04\00\00\00\00\00\00\00\80\03\00\EA\0F\00\11x\09\0D\00\00\80\C0\FF\B8\8E\07\00\E2\0F\00Us\FF\04\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\04\00`\03\00\00\00\00\80\03\00\E6\0F\00$x\09\08\01\00\00\00\09\0A\8E\07\00\E2\0F\00\10x\08\0B\81\FF\FF\FF\FF\E0\FF\07\00\C6\0F\00!r\0C\09\FF\00\00\80\00\01\01\00\00\E4\0F\00\08s\0A\00\09\00\00\00\00\10\00\00\00\22\0E\00$x\05\08\00\00\80\FF\05\02\8E\07\00\E4\0F\00#t\0B\0A\00\00\80?\0C\00\00\00\00\C8\1F\00#r\0E\0A\0B\00\00\00\0A\00\00\00\00\C8\0F\00#r\0A\05\0E\00\00\00\FF\00\00\00\00\C8\0F\00#r\0B\0C\0A\00\00\00\05\00\00\00\00\C8\0F\00#r\0B\0E\0B\00\00\00\0A\00\00\00\00\E2\0F\00\10x\0A\08\7F\00\00\00\0D\E8\FF\07\00\C6\0F\00#r\0C\0C\0B\00\00\00\05\00\00\00\00\E4\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\E4\0F\00#r\05\0E\0C\00\00\00\0B\00\00\00\00\CA\0F\00\19x\08\FF\17\00\00\00\05\16\01\00\00\C8\0F\00\12x\08\08\FF\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0D\08\01\00\00\00\0A\02\8E\07\00\CA\0F\00\10x\07\0D\FF\FF\FF\FF\FF\E0\FF\07\00\C8\0F\00\0Cx\00\07\FE\00\00\00p`\F0\03\00\D8\0F\00G\89\00\00\00\02\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\FE\00\00\00pB\F0\03\00\D8\0F\00G\09\00\00\B0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\01\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\D0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\E8\FF\FF\FFpb\F0\03\00\E4\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\D4\0F\00G\89\00\00\A0\01\00\00\00\00\80\03\00\EA\0F\00#r\07\0E\0C\00\00\00\0B\C0\00\00\00\E2\0F\1C\10x\0A\0D \00\00\00\FF\E0\FF\07\00\E2\0F\04#r\08\0E\0C\00\00\00\0B@\00\00\00\E2\0F\1C\0Cr\00\0D\FF\00\00\00pR\F4\03\00\E4\0F\00\12x\09\07\FF\FF\7F\00\FF\C0\8E\07\00\E2\0F\00#r\07\0E\0C\00\00\00\0B\80\00\00\00\E2\0F\00\0Cr\00\0D\FF\00\00\00pR\F2\03\00\E2\0F\00$r\0B\FF\FF\00\00\00\0D\0A\8E\07\00\E2\0F\00\12x\09\09\00\00\80\00\FF\FC\8E\07\00\E4\0F\00\0Br\00\07\08\00\00\00\00\D0\F1\03\00\C4\0F\00\19r\0A\09\0A\00\00\00\FF\06\00\00\00\E4\0F\00\07r\08\0B\FF\00\00\00\00\00\00\01\00\E4\0F\00\0Cr\00\0A\FF\00\00\00pR\F2\00\00\E4\0F\00\19r\08\FF\08\00\00\00\09\16\01\00\00\E4\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\E4\0F\00\19x\0A\FF\01\00\00\00\08\16\01\00\00\C4\0F\00\07x\07\FF\01\00\00\00\00\00\00\04\00\C8\0F\00\12x\07\07\01\00\00\00\0A\F8\8E\07\00\C8\0F\00\12r\07\07\08\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\CA\0F\00\12r\05\0A\05\00\00\00\FF\FC\8E\07\00\E2\0F\00Gy\00\00@\00\00\00\00\00\80\03\00\EA\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Gy\00\00\10\00\00\00\00\00\80\03\00\EA\0F\00$x\05\0A\00\00\80\00\05\02\8E\07\00\C8\0F\00Ay\04\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06\10\EB\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\08\00\00\00\80\05H\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Py\00\06\D0\EA\FF\FF\FF\FF\C3\03\00\F0\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\08\00\00\00\80\05H\8E\07\00\CA\0F\00Py\00\06\A0\EA\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$t\05\FF\FF\FF\FF\7F\FF\00\8E\07\00\C8\0F\00Py\00\06p\EA\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\05\09\08\00\00\00\00\00\01\00\00\C8\0F\00Py\00\06@\EA\FF\FF\FF\FF\C3\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\CA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\10x\01\01X\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\04\FF\00b\00\00\FF\00\8E\07\00\E4\0F\00$v\05\FF\00c\00\00\FF\00\8E\07\00\E2\0F\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\020\00\00\00\04\EB\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\A2\0E\00$v\12\FF\00d\00\00\FF\00\8E\07\00\E4\0F\00$v\13\FF\00e\00\00\FF\00\8E\07\00\E4\0F\00$r\0B\FF\FF\00\00\00\FF\00\8E\07\00\CC\0F\00\85s\00\028\00\00\00\12\EB\10\00\00\E8\03\00\80y\0D\028\00\00\00\00\E9\10\00\00\E2\0E\00\11r\00\00\00\00\00\00\FF\08\8F\07\00\C8O\00\19x\0A\FF\01\00\00\00\00\14\01\00\00\D0\0F\00\85s\00\02@\00\00\00\0A\EB\10\00\00\E8\03\00\80y\00\02D\00\00\00\00\E9\10\00\00\E2\0E\00$v\10\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00$v\11\FF\00a\00\00\FF\00\8E\07\00\E4\0F\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E4\1F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\C4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E4\0F\00$v\08\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E4\0F\00$v\0F\FF\00X\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\03\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\18\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02 \00\00\00\08\EB\10\00\00\E8\03\00\85s\00\02\08\00\00\00\0F\E9\10\00\00\E2\03\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\A0\04\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8\8F\00G\09\00\00p\04\00\00\00\00\80\03\00\EA/\00\19y\07\00\00\00\00\00\00!\00\00\00(\0E\00\80y\05\024\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\02H\00\00\00\07\E9\10\00\00\E8\11\00\80y\00\02H\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00\A0\03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00p\03\00\00\00\00\80\03\00\EA\1F\00\19y\07\00\00\00\00\00\00\22\00\00\00(\0E\00\80y\05\024\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\02L\00\00\00\07\E9\10\00\00\E8\11\00\80y\00\02L\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00\A0\02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00p\02\00\00\00\00\80\03\00\EA\1F\00\85s\00\02P\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02P\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00\B0\01\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\80\01\00\00\00\00\80\03\00\EA\1F\00\80y\08\02D\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\020\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0A\02H\00\00\00\00\EB\10\00\00\A8\0E\00\80y\00\02P\00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\02 \00\00\00\00\EB\10\00\00\22\0F\00$r\08\08\07\00\00\00\0A\02\8E\07\00\C8O\00$r\07\08\07\00\00\00\0B\02\8E\07\00\C8\0F\00$r\00\06\07\00\00\00\00\02\8E\07\00\C8\8F\00$x\09\00\04\00\00\00\FF\00\8E\07\00\E2\0F\00\19x\07\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\07\00\02\00\00\00\07\02\01\00\00\E4\0F\00\10r\04\04\09\00\00\00\FF\E0\F1\07\00\CA\0F\01$x\05\05\01\00\00\00\07\06\0E\00\00\D0\0F\00\80y\05\04\00\00\00\00\00\E9\10\00\00\A2\0E\00\10z\06\09\00\06\00\00\FF\E0\F1\07\00\C8\0F\00\10z\07\07\00\07\00\00\FF\E4\7F\00\00\D0\0F\00\85s\00\06\00\00\00\00\05\E9\10\00\00\E8A\00\80y\00\02P\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\020\00\00\00\00\E9\10\00\00\E2\0E\00\10x\09\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02P\00\00\00\09\E9\10\00\00\E8\01\00\80y\00\02P\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\80\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02L\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\024\00\00\00\00\E9\10\00\00\E2\0E\00\10z\05\00\00\01\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02L\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02L\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\90\FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\02H\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\024\00\00\00\00\E9\10\00\00\E2\0E\00\10z\05\05\00\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02H\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02H\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\90\FC\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02D\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\028\00\00\00\00\E9\10\00\00\E2\0E\00\10x\05\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02D\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02D\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\90\FB\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\19y\05\00\00\00\00\00\00%\00\00\00(\0E\00\19y\00\00\00\00\00\00\00!\00\00\00(\0E\00\18y\00\00\00\00\00\00\00\00\00\00\00\E2\0F\00\1D{\00\00\00\00\00\00\00\00\00\00\00\EA\0F\00$z\05\05\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02T\00\00\00\05\E9\10\00\00\E4\01\00\80y\05\02(\00\00\00\00\E9\10\00\00\A8\1E\00\80y\06\02<\00\00\00\00\E9\10\00\00\E8\0E\00\80y\00\02T\00\00\00\00\E9\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\04\00\B0\07\00\00\00\0F\00\00\00\E2\0F\00\06s\09\00\05\00\00\00\00\14 \00\00p@\00\06s\0A\00\06\00\00\00\00\14 \00\00\A4\80\00Dy\00\00\C0\0D\00\00\00\00\C0\03\00\EA\7F\02Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02\00\00\00\00\07\E9\10\00\00\E8\01\00\80y\04\02\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\02@\00\00\00\00\E9\10\00\00\E2\0E\00\05s\04\00\04\00\00\00\00\B1 \00\00\E4N\00$x\05\04\01\00\00\00\05\0A\8E\07\00\CA\8F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8\0F\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02<\00\00\00\00\E9\10\00\00\A8\1E\00\80y\04\02,\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\02T\00\00\00\00\E9\10\00\00\E2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00@\0B\00\00\00\00\80\03\00\E2\0F\00\13r\09\00\00\00\00\00\00\00\00\00\00\CCO\00\06s\06\00\09\00\00\00\00\94 \00\00\22\0E\00$r\07\04\07\00\00\00\FF\02\8E\07\00\E4\8F\00$r\04\FF\FF\00\00\00\FF\00\8E\07\00\CA\0F\00\08s\06\00\06\00\00\00\00\10\00\00\00$\1E\00\10x\08\06\FE\FF\FF\0F\FF\E0\FF\07\00\E4\1F\00\13r\06\00\07\00\00\00\00\00\00\00\00\E4\0F\00\12r\07\07\00\00\00\00\FF<\8E\07\00\E4\0F\00\05s\05\00\08\00\00\00\00\F0!\00\00$\0E\00\0Cr\00\07\FF\00\00\00pb\F2\03\00\E2\0F\00$r\0A\FF\FF\00\00\00\05\0A\8E\07\00\C8\1F\00$r\0B\0A\09\00\00\00\FF\02\8E\07\00\E2\0F\00\13r\0A\00\00\00\00\00\00\00\00\00\00\C6\0F\00%r\04\05\0B\00\00\00\04\00\8E\07\00\C8\0F\00$r\08\FF\FF\00\00\00\0A\0A\8E\07\00\E2\0F\00\19y\0B\00\00\00\00\00\00\22\00\00\00&\0E\00%r\04\05\06\00\00\00\FF\00\8E\07\00\CC\0F\00$r\04\05\08\00\00\00\06\02\8E\07\00\E4\0F\00\19y\06\00\00\00\00\00\00&\00\00\00&\0E\00\0Cr\00\09\04\00\00\00p@\F4\03\00\D8\0F\00$\A8\04\04\01\00\00\00\09\0A\8E\07\00\E2\0F\00\10\A8\05\05\01\00\00\00\FF\E0\FF\07\00\E4\0F\00\0Cr\00\00\FF\00\00\00pR\F4\03\00\E4\0F\00\0Cr\00\04\09\00\00\00p`\F0\03\00\D8\0F\00\10\08\05\05\01\00\00\00\FF\E0\FF\07\00\CA\0F\00$r\04\FF\FF\00\00\00\05\00\8E\07\00\E4\0F\00$z\05\06\00\01\00\00\0B\02\8E\07\00\E4\1F\00$\92\04\FF\FF\00\00\00\04\0A\8E\07\00\CA\0F\00\12\A2\04\FF\00\00\00\00\FF3\8E\07\00\D0\0F\00\85s\00\02X\00\00\00\04\EB\10\00\00\E4\01\00\80y\05\02,\00\00\00\00\E9\10\00\00\A8\1E\00\80y\06\02<\00\00\00\00\E9\10\00\00\E8\0E\00\80y\00\02\\\00\00\00\00\E9\10\00\00b\01\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\04\00\F0\0A\00\00\00\0F\00\00\00\E2\0F\00\06s\09\00\05\00\00\00\00\14 \00\00p@\00\06s\0A\00\06\00\00\00\00\14 \00\00\A4\80\00Dy\00\00\80\0A\00\00\00\00\C0\03\00\EA\7F\02Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02\04\00\00\00\07\E9\10\00\00\E8\01\00\80y\04\02\04\00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\02@\00\00\00\00\E9\10\00\00\E2\0E\00\05s\04\00\04\00\00\00\00\B1 \00\00\E4N\00$x\05\04\01\00\00\00\05\0A\8E\07\00\CA\8F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00@\08\00\00\00\00\80\03\00\EA\0F\00\85s\00\02`\00\00\00\FF\E9\10\00\00\E8\11\00\80y\05\028\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02`\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00\A0\07\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00p\07\00\00\00\00\80\03\00\EA\1F\00\80y\09\02@\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02T\00\00\00\00\E9\10\00\00\E8\0E\00\80y\05\02<\00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\02@\00\00\00\00\E9\10\00\00\E8\0E\00\80y\06\02\\\00\00\00\00\E9\10\00\00(\0F\00\80y\07\02<\00\00\00\00\E9\10\00\00(\0F\00\80y\08\02@\00\00\00\00\E9\10\00\00(\0F\00\80y\0A\02@\00\00\00\00\E9\10\00\00b\0F\00$r\0B\FF\FF\00\00\00\09\0A\8E\07\00\D0O\00\85s\00\02p\00\00\00\0B\E9\10\00\00\E8\01\00\80y\09\02p\00\00\00\00\E9\10\00\00b\0F\00$r\05\00\05\00\00\00\04\02\8E\07\00\C6\8F\00\85s\00\02d\00\00\00\FF\E9\10\00\00\E2\01\00$r\07\06\07\00\00\00\08\02\8E\07\00\C8\0F\01\85s\00\02h\00\00\00\05\E9\10\00\00\E8\01\00\85s\00\02l\00\00\00\07\E9\10\00\00\E2\01\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00\E0\04\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\09\0A\00\00\00pB\F0\03\00\D8\0F\02G\09\00\00\B0\04\00\00\00\00\80\03\00\EA\1F\00\80y\00\02@\00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\02@\00\00\00\00\E9\10\00\00\E2\0E\00$r\07\FF\FF\00\00\00\00\0A\8E\07\00\D0O\00\85s\00\02t\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02t\00\00\00\00\E9\10\00\00\E2\0E\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00\D0\03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pB\F0\03\00\D8\8F\00G\09\00\00\A0\03\00\00\00\00\80\03\00\EA\1F\00\80y\00\02@\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02p\00\00\00\00\EB\10\00\00\A8\0E\00\80y\05\024\00\00\00\00\E9\10\00\00\E8\0E\00\80y\06\02`\00\00\00\00\E9\10\00\00\E2\0E\00$r\07\FF\FF\00\00\00\FF\00\8E\07\00\C4\0F\00$x\04\00\01\00\00\00\08\02\8E\07\00\E4O\00$x\00\09\01\00\00\00\00\02\8E\07\00\E2\0F\00\80y\08\02t\00\00\00\00\E9\10\00\00\A2\0E\00$r\04\05\06\00\00\00\04\02\8E\07\00\C8\8F\00$r\06\05\04\00\00\00\00\02\8E\07\00\E4\0F\00\80y\05\020\00\00\00\00\E9\10\00\00\E8\0E\00\80y\00\02@\00\00\00\00\E9\10\00\00h\01\00\85s\00\02x\00\00\00\06\EB\10\00\00\E8\01\00\80y\04\02|\00\00\00\00\E9\10\00\00\E2\0E\00Us\FF\04\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\04\00`\02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\04\05\00\00\00pb\F0\03\00\C4\8F\00\10x\05\08\01\00\00\00\FF\E0\FF\07\00\D4O\00G\09\00\00 \02\00\00\00\00\80\03\00\EA\1F\00\80y\04\02h\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02p\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02l\00\00\00\00\E9\10\00\00\E8\0E\00\80y\0B\02t\00\00\00\00\E9\10\00\00\E8\0E\00\80y\08\02,\00\00\00\00\E9\10\00\00(\0F\00\80y\10\02x\00\00\00\00\EB\10\00\00(\0F\00\80y\0E\02|\00\00\00\00\E9\10\00\00\22\0F\00$x\09\04\01\00\00\00\07\02\8E\07\00\C6O\00\80y\04\020\00\00\00\00\E9\10\00\00\22\0F\00$x\0B\06\01\00\00\00\0B\02\8E\07\00\C8\8F\00\85s\00\02\80\00\00\00\09\E9\10\00\00\E8\01\00\80y\06\02\18\00\00\00\00\EB\10\00\00\A8\0E\00\85s\00\02\84\00\00\00\0B\E9\10\00\00\E8\03\00\80y\0C\02\80\00\00\00\00\EB\10\00\00\E2\0E\00$r\0A\04\10\00\00\00\11\02\8E\07\00\CA\0F\01\19x\0F\FF\1F\00\00\00\0A\14\01\00\00\E2\0F\00$r\0D\0C\08\00\00\00\0D\02\8E\07\00\C8\8F\00$r\0D\04\0D\00\00\00\11\02\8E\07\00\E2\0F\00\11z\08\0A\00\06\00\00\FF\10\80\07\00\C8\0F\00\19x\04\FF\1F\00\00\00\0D\14\01\00\00\E4\0F\00\11r\06\0D\06\00\00\00\FF\10\82\07\00\E4O\04\11z\09\0A\00\07\00\00\0F\14\0F\00\00\E4\1F\00\11r\07\0D\07\00\00\00\04\14\8F\00\00\E2\0F\00\80y\0F\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02d\00\00\00\00\E9\10\00\00h\0E\00\80y\08\08\00\00\00\00\00\E9\10\00\00h\0E\00\80y\07\06\00\00\00\00\00\E9\10\00\00b\0E\00\10x\0D\0E\01\00\00\00\FF\E0\FF\07\00\D0\0F\00\85s\00\02|\00\00\00\0D\E9\10\00\00\E8\01\00\80y\0A\02|\00\00\00\00\E9\10\00\00\A2\0E\00#r\0B\08\07\00\00\00\04\00\00\00\00\D0/\00\85s\00\02d\00\00\00\0B\E9\10\00\00\E2\01\00\0Cr\00\0A\0F\00\00\00pb\F0\03\00\D8O\00G\89\00\00\E0\FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\04\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02t\00\00\00\05\E9\10\00\00\E8\01\00\80y\07\02t\00\00\00\00\E9\10\00\00\A4\0E\00\0Cr\00\07\00\00\00\00pB\F0\03\00\D8O\02G\89\00\00`\FC\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\02p\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02@\00\00\00\00\E9\10\00\00\E2\0E\00\10x\05\05\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02p\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02p\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pB\F0\03\00\D8\8F\00G\89\00\00P\FB\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\0F\02d\00\00\00\00\E9\10\00\00b\01\00\02x\00\00\10\12\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\00\02\00\00\00\00\C0\03\00\EA\1F\02\80y\04\02X\00\00\00\00\EB\10\00\00\A8\0E\00\80y\00\02`\00\00\00\00\E9\10\00\00\E8\0E\00\80y\09\028\00\00\00\00\E9\10\00\00\E8\0E\00\80y\06\02\10\00\00\00\00\EB\10\00\00\22\0F\00$x\08\05\01\00\00\00\04\02\8E\07\00\C4O\00$r\04\FF\FF\00\00\00\0A\00\8E\07\00\E4\0F\00$r\05\FF\FF\00\00\00\0B\00\8E\07\00\E4\0F\00$r\09\09\08\00\00\00\00\02\8E\07\00\C8\8F\00\10s\05\00\04\00\00\00\00\100\00\00\22\0E\00\19x\00\FF\1F\00\00\00\09\14\01\00\00\E4\0F\00\11r\06\09\06\00\00\00\FF\10\80\07\00\C8\0F\01\11r\07\09\07\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\06\00\00\00\00\05\E9\10\00\00\E8\11\00\80y\00\02`\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\028\00\00\00\00\E9\10\00\00\E2\0E\00\10x\09\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02`\00\00\00\09\E9\10\00\00\E8\01\00\80y\00\02`\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\90\F8\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02\\\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\01\00\00\FF\00\8E\07\00\C8\0F\00$z\05\05\00\04\00\00\00\02\8E\07\00\D0O\00\85s\00\02\\\00\00\00\05\E9\10\00\00\E2\01\00Gy\00\00\B0\F6\FF\FF\FF\FF\83\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\02T\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C8\0F\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02T\00\00\00\05\E9\10\00\00\E2\01\00Gy\00\00\10\F3\FF\FF\FF\FF\83\03\00\EA\0F\00\10x\04\01\88\00\00\00\FF\E0\FF\07\00\C8\0F\00\10z\04\04\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\05\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\04\10\00\00\00\0F\E9\10\00\00\E8\0F\00\80y\06\04\10\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\04\18\00\00\00\FF\EB\10\00\00\E8\0F\00\80y\08\04\18\00\00\00\00\EB\10\00\00\E2\0E\00\10s\06\00\06\00\00\00\00\18 \00\00&N\00\85s\00\04\08\00\00\00\08\EB\10\00\00\E8\8F\00\80y\0C\04\08\00\00\00\00\EB\10\00\00\A8\02\00\85s\00\04\00\00\00\00\06\EB\10\00\00\E8\13\00\80y\0A\04\00\00\00\00\00\EB\10\00\00\E4\02\00$r\04\FF\FF\00\00\00\00\00\8E\07\00\C4/\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$r\11\FF\FF\00\00\00\0D\00\8E\07\00\E2O\00*r\00\0A\0C\00\00\00\00\F0\90\03\00\22\8E\00$r\0E\FF\FF\00\00\00\0B\00\8E\07\00\D0\0F\00\08r\0F\0E\11\00\00\00\00\00\00\00\00\CC\1F\00\12\18\0F\11\00\00\08\00\FF\FC\8E\07\00\E4\0F\00\07r\0A\0A\0C\00\00\00\00\00\00\00\00\C6\0F\00$r\0B\FF\FF\00\00\00\0F\00\8E\07\00\E2\0F\00Py\00\04\90\EA\FF\FF\FF\FF\C3\03\00\F0\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\02s\00\09\0A\00\00\00\00\00\00\00\00$\0E\00G\09\00\00\B0\00\00\00\00\00\80\03\00\EA\1F\00\08s\05\00\0A\00\00\00\00\10\00\00\00\22\0E\00!r\06\0A\FF\00\00\80\00\01\01\00\00\C8\0F\00#t\08\05\00\00\80?\06\00\00\00\00\C8\1F\00#r\08\05\08\00\00\00\05\00\00\00\00\C8\0F\00#r\05\09\08\00\00\00\FF\00\00\00\00\C8\0F\00#r\07\06\05\00\00\00\09\00\00\00\00\C8\0F\00#r\07\08\07\00\00\00\05\00\00\00\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00#r\06\06\07\00\00\00\09\00\00\00\00\C8\0F\00#r\07\08\06\00\00\00\07\00\00\00\00\E2\0F\00Py\00\04\B0\E9\FF\FF\FF\FF\C3\03\00\F0\0F\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00@\00\00\00\00\00\80\03\00\E2\0F\00$r\08\FF\FF\00\00\00\0A\00\8E\07\00\E2\0F\00\02x\06\00\A0\16\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00@\00\00\00\00\00\C0\03\00\EA\0F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00$r\07\FF\FF\00\00\00\05\00\8E\07\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04 \E9\FF\FF\FF\FF\C3\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19x\07\FF\17\00\00\00\08\16\01\00\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00\19x\05\FF\17\00\00\00\09\16\01\00\00\E2\0F\10Ey\03\00`\02\00\00\00\00\80\03\00\E2\0F\00\12x\0D\07\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\0B\05\FF\00\00\00\FF\C0\8E\07\00\E2\0F\00$r\05\FF\FF\00\00\00\09\00\8E\07\00\E2\0F\00\10x\0C\0D\FF\FF\FF\FF\FF\E0\FF\07\00\E4\0F\00\10x\0A\0B\FF\FF\FF\FF\FF\E0\FF\07\00\C4\0F\00\0Cx\00\0C\FD\00\00\00p@\F0\03\00\C8\0F\00\0Cx\00\0A\FD\00\00\00pDp\00\00\D8\0F\00$\82\07\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00G\89\00\00\C0\01\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\C2\F1\03\00\E4\0F\00\0Bx\00\08\00\00\80\7F\00\C2\F3\03\00\C8\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00\D0\05\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\05\C8\80\07\00\D8\0F\00B\89\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\89\00\00p\05\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F5\03\00\E4\0F\04\0Bx\00\08\00\00\80\7F\00\D2\F3\03\00\E4\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F1\03\00\D4\0F\00B\99\03\00\00\00\00\00\00\00\00\05\00\E2\0F\00G\99\00\00 \05\00\00\00\00\00\05\00\EA\0F\00\12x\FF\05\FF\FF\FF\7F\FF\C0\84\07\00\C8\0F\00\1Cx\00\00\00\00\00\00rE\F2\00\00\D8\0F\00B\19\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\19\00\00\B0\04\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\FF\C0\82\07\00\C8\0F\00\1Cx\00\00\00\00\00\00r%p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\000\04\00\00\00\00\80\03\00\EA\0F\00\0Cr\00\0A\FF\00\00\00pb\F0\03\00\E4\0F\00\0Cr\00\0C\FF\00\00\00pb\F2\03\00\D4\0F\00$\02\07\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#\88\05\09\00\00\80_\FF\00\00\00\00\E4\0F\00$\84\07\FF\C0\FF\FF\FF\FF\00\8E\07\00\E4\0F\00#\98\08\08\00\00\80_\FF\00\00\00\00\C6\0F\00\10\98\07\07@\00\00\00\FF\E0\FF\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\11x\09\0D\00\00\80\C0\FF\B8\8E\07\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00`\03\00\00\00\00\80\03\00\E6\0F\00$x\09\08\01\00\00\00\09\0A\8E\07\00\E2\0F\00\10x\08\0B\81\FF\FF\FF\FF\E0\FF\07\00\C6\0F\00!r\0C\09\FF\00\00\80\00\01\01\00\00\E4\0F\00\08s\0A\00\09\00\00\00\00\10\00\00\00\22\0E\00$x\05\08\00\00\80\FF\05\02\8E\07\00\E4\0F\00#t\0B\0A\00\00\80?\0C\00\00\00\00\C8\1F\00#r\0E\0A\0B\00\00\00\0A\00\00\00\00\C8\0F\00#r\0A\05\0E\00\00\00\FF\00\00\00\00\C8\0F\00#r\0B\0C\0A\00\00\00\05\00\00\00\00\C8\0F\00#r\0B\0E\0B\00\00\00\0A\00\00\00\00\E2\0F\00\10x\0A\08\7F\00\00\00\0D\E8\FF\07\00\C6\0F\00#r\0C\0C\0B\00\00\00\05\00\00\00\00\E4\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\E4\0F\00#r\05\0E\0C\00\00\00\0B\00\00\00\00\CA\0F\00\19x\08\FF\17\00\00\00\05\16\01\00\00\C8\0F\00\12x\08\08\FF\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0D\08\01\00\00\00\0A\02\8E\07\00\CA\0F\00\10x\07\0D\FF\FF\FF\FF\FF\E0\FF\07\00\C8\0F\00\0Cx\00\07\FE\00\00\00p`\F0\03\00\D8\0F\00G\89\00\00\00\02\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\FE\00\00\00pB\F0\03\00\D8\0F\00G\09\00\00\B0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\01\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\D0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\E8\FF\FF\FFpb\F0\03\00\E4\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\D4\0F\00G\89\00\00\A0\01\00\00\00\00\80\03\00\EA\0F\00#r\07\0E\0C\00\00\00\0B\C0\00\00\00\E2\0F\1C\10x\0A\0D \00\00\00\FF\E0\FF\07\00\E2\0F\04#r\08\0E\0C\00\00\00\0B@\00\00\00\E2\0F\1C\0Cr\00\0D\FF\00\00\00pR\F4\03\00\E4\0F\00\12x\09\07\FF\FF\7F\00\FF\C0\8E\07\00\E2\0F\00#r\07\0E\0C\00\00\00\0B\80\00\00\00\E2\0F\00\0Cr\00\0D\FF\00\00\00pR\F2\03\00\E2\0F\00$r\0B\FF\FF\00\00\00\0D\0A\8E\07\00\E2\0F\00\12x\09\09\00\00\80\00\FF\FC\8E\07\00\E4\0F\00\0Br\00\07\08\00\00\00\00\D0\F1\03\00\C4\0F\00\19r\0A\09\0A\00\00\00\FF\06\00\00\00\E4\0F\00\07r\08\0B\FF\00\00\00\00\00\00\01\00\E4\0F\00\0Cr\00\0A\FF\00\00\00pR\F2\00\00\E4\0F\00\19r\08\FF\08\00\00\00\09\16\01\00\00\E4\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\E4\0F\00\19x\0A\FF\01\00\00\00\08\16\01\00\00\C4\0F\00\07x\07\FF\01\00\00\00\00\00\00\04\00\C8\0F\00\12x\07\07\01\00\00\00\0A\F8\8E\07\00\C8\0F\00\12r\07\07\08\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\CA\0F\00\12r\05\0A\05\00\00\00\FF\FC\8E\07\00\E2\0F\00Gy\00\00@\00\00\00\00\00\80\03\00\EA\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Gy\00\00\10\00\00\00\00\00\80\03\00\EA\0F\00$x\05\0A\00\00\80\00\05\02\8E\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06\C0\E2\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\08\00\00\00\80\05H\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Py\00\06\80\E2\FF\FF\FF\FF\C3\03\00\F0\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\08\00\00\00\80\05H\8E\07\00\CA\0F\00Py\00\06P\E2\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$t\05\FF\FF\FF\FF\7F\FF\00\8E\07\00\C8\0F\00Py\00\06 \E2\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\05\09\08\00\00\00\00\00\01\00\00\C8\0F\00Py\00\06\F0\E1\FF\FF\FF\FF\C3\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00__CUDA_FTZ\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00x\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0B\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\B8\03\00\00\00\00\00\00\B5\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\0B\00\00\00\00\00\00x\03\00\00\00\00\00\00\02\00\00\00\1F\00\00\00\08\00\00\00\00\00\00\00\18\00\00\00\00\00\00\009\03\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E8\0E\00\00\00\00\00\00 \07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\16\00\00\00\00\00\00\A0\02\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A8\18\00\00\00\00\00\00\90\00\00\00\00\00\00\00\03\00\00\00\12\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\DB\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\008\19\00\00\00\00\00\00\9C\00\00\00\00\00\00\00\03\00\00\00\13\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\9F\01\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\D4\19\00\00\00\00\00\00\A8\00\00\00\00\00\00\00\03\00\00\00\14\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00B\02\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00|\1A\00\00\00\00\00\00\C8\00\00\00\00\00\00\00\03\00\00\00\15\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\D2\02\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00D\1B\00\00\00\00\00\00\E4\00\00\00\00\00\00\00\03\00\00\00\16\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00i\03\00\00\0B\00\00pd}\00\00\00\00\00\00\0B\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00e\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\82\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FC\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\B7\01\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00f\02\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F2\02\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\90}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\05\00\00\00\10\85\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A8\00\00\00\00\00\00\00\A8\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00\10\1E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p_\00\00\00\00\00\00p_\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00\80}\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\01\01H\00\00\00@\1F\00\00\00\00\00\009\1F\00\00@\00\00\00\02\00\07\00P\00\00\00\00\00\00\00\00\00\00\00\11 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\C0l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0 \0A\0A\0A\0A.version 7.2\0A.target sm_70\0A.address_size 64.\00\F0\03func (.param .b64 \12\00\F5\07_retval0) _ZL3maxfd\0A(\0A&\00&32\18\00\11_\15\00H_0,\0AE\00\0C\1F\00]1\0A)\0A;n\00.32n\00\FC\009atomicAddPff\0A(V\00\09\1F\00\0F|\00\00/32&\00\05\03\83\00_weak \89\00\10\D911warp_reduce\89\00-32\1F\00\04\89\00\0Fc\00\1C\FE\066__shfl_down_syncjfjik\00\0F'\00\02\0E\FC\00\0F.\00\10\1F1.\00\1A\1F2.\00\1A\123\FD\00\F4\22global .align 1 .b8 threadIdx[1];\0A.extern .shared+\00\114+\00\EFkernel_local[]P\00\04\AFblockDim[1\22\00\0A\05q\00\0F\22\00\01EgridC\00\0F\92\00\09?out\8F\00\0C\F0\03_$_str[11] = {95, \04\00P67, 8\08\00C8, 6\14\00\F0\0070, 84, 90, 0};\AE\03\F1\10isible .entry _Z6conv2diPfS_S_i\01\00\06\12\02?u32$\00\04\0E\10\02?u64,\00\0B\1F1,\00\18\1F2,\00\18/3,\B0\00\17\1F4,\00\18\1F5,\00\18\1F6,\00\18\1F7,\00\18\1F8,\00\18q9\0A)\0A{\0A.=\02\042\02\1282\02\02R\02\B0_depot0[136\\\022reg\E8\04;%SP\0F\00\14L\10\00\10p\A0\02d%p<11>\13\00\95f32 %f<18\12\00\00\AE\03f%r<152%\00\00H\00Yfd<4>Z\00\E3rd<30>;\0A\0Amov.ul\00\1B,\A0\00b;\0Acvta\C8\00\04%\00\13,\96\00\22ld\0F\01\01\0E\01o%r7, [\14\01\0B\1D]4\00\1F64\00\0D\1E84\00\1F54\00\0D\1E74\00\1F44\00\0D\1E64\00\1F34\00\0D\1E54\00\1F24\00\0D\1944\00\02\87\01\0Fi\00\0E\1F35\00\00\0Fj\00\0E\1F25\00\00\1F15\00\0D\1E1\D3\00\0F4\00\0E#0]%\02#to#\05\04o\00 4,\06\00\133\1F\00\0A\1C\00\115\1C\00\1F4;\00\05\116\1F\00\1F2;\00\02\117\1C\00\1F6;\00\05\118\1F\00\1F1;\00\02\119\1C\00Q8;\0Ast\DF\00p[%SP+8]\16\00\121\15\00\2264\15\00!16\16\00*d9\17\00\2224\17\00\1A7\17\00\2232\17\00\1A5Z\00!40\17\00\1B2\16\00\02D\00\1B3\16\00\02\87\00\1A4\16\00\125Y\00\0BX\00\125\9D\00\1A6\16\00\126n\00\117\C3\01\02\BD\01%8,G\00S;\0Ashr\17\00\229,\1C\00\9131;\0Aadd.s\16\00#10\17\002%r9.\00\03\18\00#1,\1E\00\03$\01\05q\00\02\C9\00211;D\04\01\\\00[12, 0(\00\03b\01\F2\042;\0Abra.uni LBB0_1;\0A\08\00\16:\B2\00513,5\00\07\C9\00514,\FB\00\92;\0Asetp.ge\A0\003p1,8\00\00'\00\A3;\0A@%p1 brad\00\1B6u\00\132u\00)2:\B5\00\00E\00Ztid.x\BB\00#72\BB\00\1B1G\00\133G\00\183\BC\00522,7\00\08\BD\00)23\88\01\09\BE\00$8,:\00\01)\00\01\C0\00\178\C0\00\1B4y\00\134y\00\1A4\C0\00\136\C0\00\1By\C0\00\02*\02,12\07\01\135G\00\195\C0\00%7,7\00\09\C0\00\1F8\C0\00\07$9,:\00\01)\00\01\C0\00\179\C0\00\0C\F5\01\136y\00\196\C0\00\1E36\02\128\CF\02,13B\00\137B\00\187\BB\00533,7\00\08\BB\00534,`\03\0C\BB\00\02\F1\02\2213;\02\133<\02\170\BD\00\1B0{\00\138{\00\128{\00\02U\04\05\DE\01*32{\00\1F8\93\00\04\189\93\00\07\E3\02\1F0~\01\03(41~\01\07\18\00\0Fn\02\04\194C\03\83mul.lo.s\1C\00\01\94\05\01S\00\01*\00\09\00\04445,X\00\00\07\00\1D4=\00\196=\00\1A5=\00$7,\C5\00\00\07\00\1D6=\00$8,\FD\00\00\0E\00\1A7=\00$9,2\01\00\0E\00\118\BD\05C.s64!\00#d2\B8\00\01\99\04\14l\C1\08425,\1D\00\132P\00\03\19\00$6,\9A\01\00\07\00\115\1F\01\02-\09\111\E4\02\00#\00\22];\82\02\03\C6\01)7,\82\0C\03@\06\02\17\0C\05%\00\228,,\00\0An\00(9,\1D\00\02\AD\05\00n\00\01h\0019],w\00\0BK\02\139K\02\189\C6\02(503\02\07!\01\125t\01\1E5\85\05\04'\03/51'\03\04:10:\19\00$11\1A\00\1A1\84\03\00N\01\13nE\04\06O\02(36\97\02\07\94\00437, \00\00\07\00\0B\A4\06\04z\04/37z\04\04,12\98\00\04T\05)13\98\00$29\98\00\19x\98\00\180\FF\02\08\98\00$1, \00\01>\00\0B\98\00\03\D2\05\1F3\D2\05\05,14\98\00\05\B2\00\0A-\05\184g\03\07\80\00\02\96\02\01 \00\0C1\07\04\09\07\1F5\0A\07\05p6:\0Abar.`\0F) 0W\07\00U\002cta\06\01\07\18\00\176\1D\01\0Ar\03$7,8\009r164\00\168\ED\06\07\B8\00&9,6\00\0C#\09\03\EA\07\1C9\B8\00\05e\02\08\8D\05\152\C6\02\03\EF\0A\03\17\00%1,\17\09\02\E1\03 rn'\03\02\80\00\11f\B6\01(211\00\04\E1\04\1F61\00\02\01\A7\04s22;\0Adiv\1A\00S %f3,L\00'f2\88\031SP+(\03'f3\0B\04\04\C1\01\05^\00 pi\1A\00\03\1E\00\009\01#f4\1A\00Dzi.s\1A\00\11rW\04(f5\AA\00\05\0C\02\00\F2\002sub\A3\00\12r\0B\02\010\00<r24\80\06#2,-\01\00)\00\01}\06\162|\06\1C4|\06$18l\01'8:z\00\04\9E\03\1A4l\01\187\83\01\09\18\02328,8\00\00'\00\084\00\189o\01\00U\01\021\00\02I\03\037\00\0BN\03\128\D2\02\193\AC\02%31\AC\02\19y\18\00\172a\04\09\94\00\02\83\07\018\009r324\00\164\D9\08\06\AC\02\01\AB\04\046\00\0B3\0B\129\E1\03,35@\01\04r\05\181s\05\05\DE\04\199E\07(37W\01\0D{\02\01=\01(371\00\1F8\AC\02\0A\01V\03+38\AC\02#8,L\00*f7\AC\02\01o\03'f8\AC\02\054\08\0F\AC\02\02\01\CA\08/f9\AD\02\01\01q\077f10\AC\00/40\AE\02\03\02\D9\07\011\00<r40\AE\02#3,/\01\00)\00\01\AE\02\163\AE\02+38n\01#20n\01(20\CD\05-47\E8\09\129)\06,47B\00\04\15\05\182 \0C548,7\00\08\D3\00\1F9 \0C\07#4,8\00\00'\00\01\B9\00\174\B9\00\0D \0C\05!\0C\09\22\0C-55\B9\00\2210{\07\185\0A\04/56\FC\04\02(57\1F\02\09\90\03358,8\00\00'\00\084\00\189\A7\01\06\FD\02660,7\00\1C9\94\00\02\AA\05\186\F0\01/61\E4\02\02/62\94\00\06363,8\00\00'\00\084\00\1F4\94\00\04&5,7\00\1C4\94\00\02%\04\186(\01(66I\004negI\00\01*\03\1B6\DB\0E\2211\D5\03\1D6%\02\04\B6\07\182\89\0D\00x\15\058\00\08u\00\09R\01\02&\02\12ty\003p5,9\00\00'\00\01&\02\175&\02\0C\86\0D$24x\00\174x\00/79\D5\00\03\118\B2\01\1C7\AC\01\03d\10\1C8\EA\05$25]\00\08q\08681,8\00\07\FB\02/82\D5\00\07#6,9\00\00'\00\01\D5\00\176\D5\00\0CY\0D$26x\00\186x\00\1F5x\00\04\1F6\0B\02\03387,6\00\00$\00\081\00\1F8\C8\0C\02)89\AD\01\06I\00\00*\17\02\1F\00\0BI\00(91\04\04\09\B9\02392,j\00\00'\00\09N\00%3,T\00,927\00\1747\00\09\15\0D\00\BB\17\04\D4\00\1C9\D9\02\122\01\04(95\B2\06.96*\04\037\12\1D9m\04\147r\01\08@\09697,8\00\08\F8\00\1F8\CC\0E\07#7,9\00\00'\00\01\EA\01\177\EA\01\0Db\02\04L\08\182L\08%10c\02\190y\00?102\A4\01\04!10W\01\01:\00\01(\00\0C\F9\00\02\FB\039103O\00&4,\1B\04\09\19\00\0Al\02\08h\00\01\CB\02\01:\00\01(\00\0Bh\00\03\81\13(10(\02/10I\01\04)10J\01\07\18\00\05\8C\02\1D2\14\05\131/\10\2208\07\00\199\A0\00\04%\13\227,+\00\0D\C2\0E\2214\1A\00\191\C2\0E\02\9F\0B\01\1D\00\192\8F\0E/16\8F\0E\10\02\AD\0B9d16\8F\0E\01\DF\0B\06\1D\00\175F\08\02^\13\00#\00\03\F7\00\03H\00\04\F7\00\0B'\01\00\CC\13\05\C8\01\09\19\00\183\1F\09\0B'\01$4,<\00\00\07\00\09\F9\01\00\EF\00\05\B1\01\0A@\01(6,=\00\1D5V\00'7,'\00*08=\00'8,$\00-07}\01\02e\0B:118?\10$1,\1D\00\0B?\10$2,\17\01\00\0E\00\181B\01\124B\01822]\16\00&5,\14\08V;\0Afma\E5\09\01\B3\00\01z\01\02>\00\00.\00\0A\EE\09\03I\08-f1\1F\04\149\A7\03\09&\10)19\D7\02\07\09\01\04\E8\00\1D9{\0E\04\83\04?120\84\04\05\1C3)\10$31\1A\00\08\82\09/99\A4\03\06\01~\00\1F9}\00\00\03\EA\06/10\EB\06\06\1C3\0E\10\143\DA\07\183\DA\07/83\89\04\04\00[\1D\02\1F\00\0D|\00\02\1B\04/84;\08\05734:\CA\01\191\CA\01\00\92\03\03@\1Bk1, 0d0\01\00f;\0A{ \0A\09{\1BCtemp\18\19Ereg;1\1C\00\1C\00\01\0B\00\02\1A\06\01\0B\00\02\01\02\02\16\00\03\9E\0E'113\00\22643\00\1813\00#643\00\1313\00\1Bd3\00\03e a;\0Acall\EE\00\14(x 5, \0A\9D!Q, \0A(\0A7\0020, \09\0071\0A)\FE\19\03\F6\00\00\02\04\03@\00\01(\0FG} \0A\09\DE\0C\02&\00\01\EC\039fd2T\04%0,J\19\16;\C1\01/70\C0\0B\02(71\C0\0B\06\17\00\1F2\BA\0A\02573,\7F\0E\08\05\02374,5\00\00$\00\0BC\04375,i\00\00)\00\097\00#6,\9A\00\00&\00\0D=\04\02\DB\05*76\B9\05$2,\1C\00\0A<\04\01\E9\03\02\FF\00\00\07\00\08\85\10\00\1D\00\02\E7\01\0Cz\09$35\8C\02\08\F2\09(77,\01\07\B0\00#8,\1E\00\0B\EC\02\03K\0D/78K\0D\05;36:y\00\05\FD\03\197\EE\0C\180\AA\0F\06\17\00\00\0A\01\16n\DA\0F\08_\01452,9\007r51\AD\01(53\C4\01\06\C6\00354,\1E\00\00=\00\0B\C9\00\02\B4\03/54\C4\0F\05,38\C9\00\05\1A\00\189\C9\00(42\1F\13\06\17\00\163\C9\00\0C8\13\02#\17\019\007r43\C9\00(45\DB\0D\06\C9\00\02\17\17\114_\02\1B4#\0A\039\13/469\13\05\BF40:\0Aret;\0A\0A}\92%\18\0C($\0F\91%\1E\0F\9C \10!1[\A4\07\072 \0F\9B \07\02<\05-<3t \1F7a \0C\1F1a \12\06\82\05\1D[\CD\00\08\B2\1E\02\87\00\0F'\00\01+0]s\07\126\89\03\02\16\00\0A\DE\1D\01S\05\05\11\06\182\C7\04!cv.\00\03\1B\00\00\1D\05\01g\14\00-\00\02\A3\00\183I\09\08[\00\03\AD\05\1A2\16\00\128\16\00\183C\00\08\96\14\06\16\00\05|\02\00\95\06$ax\17\00\00{\02\013\00\00#\00\0C(\06\08=\02\04\81\00%6;o\02\0F\82$\00\E112mean_pooling\EE\1F\0E\86$\0F(\00\08\0F\8A$\02\0F0\00\0F\1F10\00\1C/2,\90\00\1B\1F30\00\1C\1F40\00\1C\1F50\00\1C\1F60\00\1C\1F7\B2\03\13\222[\B8\0D\0FN$\1A\166\B4\03\03M$\157\12\00\13bM$907>G\00_rd<15\DA\03\0C\1F2;$\18\00J\10\0F\05\01\0F\0F\0B$\00\0F8\00\11\1F6\0F$\00\0F8\00\11\1F5\13$\00\0F8\00\11\1F4\17$\00\0F8\00\05\0F\E6#\13\0F9\00\00\0F\EA#\13\0F9\00\00\0F\EE#\12\0F8\00\00\0F\F2#\13\01\CD\07\1Ed\B7#\0E\0E$\0D;\00\1F5\B7#\08\1F6]#\01\0F\B7#\0A\1A6\17\00\03\FD\0C\1Bd\9E\07\036\10\0B}\08/36\A0#\02\1F0\A0#\01/44\A0#\01$48\A0#'ld\1E'\031\00\08\8A#\02\CA\09\0C\8A#\139\16\009%r8\89#\01]\09\1D9\F7\09\03%$(10\E3\08/111\1C\04\09\12\09\08\F9\08\02\BA\0A\018\00\01\AC#\074\00\1F41\1C\02)5,y#\09\93\00\02D\01)15\F8\08\132\E9\1C\1A2\F3#\1F6\FC\0B\02(17W!\1CcR\19\02\A7\00\080\17(18\D5\11\0D1\00!2,$\00\0F/\1C_\00\8E\0F\0B/\1C\04!\1D*52/\1C%1,\89\1D/20\E8$\03\146'\1D\08\E8$\112p\19\09j\01\02\C7\18\102\E8$\0EQ\1D\01u*\06\8F\00\183\81\01\09\14\02\00\D9\1C\028\00\00'\00\084\00\185m\01\06-\1C\03X\1C\144\D5\1C\08\15\02\03\A1&.26\A9\1C\0C\FD\01\192\CC\01\0A\93\00#9,8\00\00'\00\074\00(30V\01\06\A8\02\02W\1C\027\00+30\93\00\02\C0\03-31\A8\1C\0F\C0\1C\01\143;\03\0C\FD\0C\01\A6\1C\028\009r334\00\1F5\C0\1C\02&6,6\00\1F5% \02\0B\99\1A\132\A0 \192r&\05\A7\1C\01\84 \0E\8D\1C/36\BE\1C\07\09;\01\189o\01\0F\BE\1C\04\1F9\BE\1C`\01O$\0B\BE\1C\1F1=\03\03\03\B2\0D\140\A1\1C\0Fl\1F\00!37\1D\00\1A2l\1F\112[\1F\09l\01\02\DE\19>2_4z\1C\0Cl\01/49\AA\02\06*50z\1C'ldH\0F\0E\AA\02\0ED\0F\0F\B8\22\00(52^\02%53\AA\02\19z\18\00\144\AA\02\1Cz\94\00\00\90\02\04v\0F\1944\00\136\AA\02\19z\93\00&7,6\00\03V\07\0B\E3#+57>\01\135>\01\08\CC\10\00\AF\1C\0E\DD&\06\E4\1C\01\14\22\0Fq\1E\00\06\E7\1C\08q\1E\1C2\D8)\132X(\1A2X(\1E6\B6\1D\030%\0F\8D\1C\03/52\8D\1C\10/84\8C\1C\01\132q%?2_7\8A\1C\01\0A\0F\1E(69q\00\0A\B4\1B\1D4\89\1C\05\AF\1E\1C2\0F*\132\92(72_8u\00(84\9A\1B\0E\C9\1B\0B\C0\10\00\C9\1B\025\00\00$\00\0F\E0!\02\0A\C8\1B\1F7.\01\03\02?\1B/87\CB\11\02\1C8c\03\139\B9\00/9:\0B\1C\00\0A\EF\13/90.\01\07\165$\1C*90\B7\1D\1C2}*\112\D1)\03\09\00\07w\00\00\1B\1C\0FI)\00(94\8E\00\060\01\02\13\1C.93\13\1C\05\82\13\2295H\00$64%\14\06\16\10'ld)\1C\06\C6\14\0E\FE\1B,36Q\04\00\01\1C\028\00\00'\00\1F;\94\17\00\0B*\14\04\93\17\028\00\08\83\04\06\EC\1B,40g\00\01\EF\1B\05=\00(10\CE\13\01\F1\1B\06\C9\03\08k\00\01A\02\05<\00\1E3H\15\03\1A\00\1A4I\15$3,\1D\00\0BI\15\154b\15\00\07\00\1F3\85\19\00?14]\85\19\01\05=)\0C\84\19\115\06\00\1A4\AE\06\02\11\04\0C}\19\142')\00\09\00\07,\02\06\A3\1C\0B\16\02\05\A2\1C\1E5\97\15\02\03\03\01\9D\1C\0F\04\03\02\0B\0B)\142\0B)\00\09\00\1E:\F8\1E\0C\C1\03\02\F5\1E\00\1E\00\0By\00\03\AA\04/92\AA\04\04\00\EB(\0E\FA\18\01?\01\05u\00(70\BA\0C\09(\02'718\17\1F08\08\00\02\F2\01+719\08\01\F3\01\01p\00\02\0B\17'ld\DB1\06m\13\0E\06\18\0A<\06(73\C2\02\06\17\00\1F4\A8\07\02(75\EE\22\06=\01\03\FD\17\144\FD\17\0A\E2\00#7,i\00\02\01\18\0D\84\17\02\E1\00\0Eq\1C\148\88\17\07\EA\02\03}2\0D\E8\02#0,\FB\00\05o2\05/\18\03\9B\02\1B3\C0\01$15\C1\01\185\EE\06(79\F6\07\05\17\00\01~\22\03\ED\16\0C\0F\08\02\1C\22\019\00\01\88\22\05/\01/82\E7\03\03\00b\1B\02\1E\00\00=\00\0Ao\02\03\10\08/83\10\08\04\01\DE*\09\C8\00\05\89\02\09~\18(60h\0B\06\17\00\161\C8\00\0C\81\0B\00\CC$\039\00(r6\B0\04(63\0E\02\06\C8\00'64\B1$\0B\01\10\03\82\0B/64\82\0B\04,18\C8\00\05\C9\03-9:f\18\04k\0F\06\17\00\164\C8\00\0C\84\0F\03F\18\143L\18\05\C8\00(46(\0D\06\90\01\02w/\134\83\18\0A\C8\00\1F5Z'\02\06\85\0F\00\9B'\0F\0D\16\08D3gap\FC\11\0C\01\16\08\1C\00\0F\F5\15\05\0F$\00\00\1F1$\00\10\0D\DD\15\0F$\00\00\1F3$\00\10\1F4$\00\10\1F5Y\15\13!3[v\01\07\02\15\0FX\15 \1C9W\15959>E\00_rd<28V\15\0C\1F3V\15\18\00\08\05\0E\F6\00\0F\DA\14\09\0E,\00\0F\CE\14\07\0E,\00\0F\C2\14\08\0E-\00\0F\B6\14\08\0E-\00\0F\AA\14\07\0E,\00\0F\9E\14t\1F0\9E\14\01\1F8\9D\14\02/16\9D\14\02/24\9D\14\01\03Q%\1F3\C9\14\02\0A\D0\0D\03\CF\0D\0B\D26\03\DE\14\195\14\04\133\14\04\193\99\13\186\89\0A\05\16\00\09\97\13\0F\A2\12\00\136\858\08\A0\12;3_4p\00\02\9F\12\133\9F\12\02\CC\04\07J5\00r\00\07;\07\02P\12\01 \00\04\00\0F\06\024\05\A6?\0F\B33\03\156\963\07u\07\02?\12\05\1D\00\0A9\01\0B5\0E\00.\00\05\E9+\095\01\133\C5\00,3:H\0F\04\F6\05\056\01\05\01,\1A3\C0\05\03\E0\0E\1F7`\0F\01\04\AB\01\1F8\AC\01\04\1F4-2\05\158\16\10\09y\06\05\1F\08\0Cv\06\02\83\08\01\8C\16\1D9D\16\031\00\06\B3\00\02\D6\09\024\00*11\B3\00\03&\17\00?\16\09\B3\00\135\B3\00\08\13\10\1F1\C0\09\03(14.\0D\0F\C6\11\00\01?\0A\04\EB9\05\C6\11\1C3\13\10\133\13\10\1A3\13\10%24\1D\01\09^\08$25\1E\01\0C\\\08\0C\D3\14\074\00\137 \01\09\DD\13928,a1\09 \01\03\D5\03\1B8\AB\00\137\AB\00\08<\10(29z\0B\0E\E7\14/28\EB.\03\06\EA\14\08<\10\1C3<\10\133<\1083_8 \01-363\11\1F4\92\14\02\133\BF\0C?3_9\92\14\01.48\92\14\0F6\04\03#5,8\00\02\95\14\08\C3\0F\1C3\C3\0F\143\C3\0F\1A3\C3\0F(44w\00\1Bcy\0E\144O\09\07:\04\1F1:\04\0E\02k\17\01A)\07\8B\04\02e(\01T\00\1F2w)\02\036\00\03\9F\0F\0Ba)\0A\D9\0C(45\16\01\0E\EC\09\0A\F9\01(47\F9\01\0E\98\14\01G\03\09\BA\02\00\9C\14\028\00\00'\00\08\A4\02'507\0A\1B97\00\01\E7#\03\8B\0A.50\A1\14\01\C1\0A\01\A1\14\0Bi\01$20\A3\14\0Ff),&6,e)\0Fa'\14.64a'\00\15\00\09a'\00\A6\01\074\00/32b'\00+32b'\1A62\00\0Fa'\0E\09\82H\0Fh'\0F\04b\17\0Dg'\0A\F7\02\05\A1\07\08\8E\10(53\F7\02\07\A8\01\144\E6\15\0B\12\10\03\CB\03/54\CB\03\04\0B\8A\10\143\8A\10\1B3\959(39.\05\05\17\00\01\AF\17\0F\A3\0D\04\0C^4\06\C1\02\182\EF\02\06\C5\00\03\06\0D\02\D7\17\0C\C8\00\02H\05/43H\05\04\0B\C59\1433\0F\1B33\0F(31\14\07\0A\02\1A\0F\A3\0D\04\03v6\01U\1A'32\C8\00(34\89\03\06\C8\00'35\ED\19\0FV\1E\03/350\07\04\0F\11:\0C\03\B9\00\09\F5\0D\1F2z\1D\01\143l\0F\1A3\AB9(16[\15\0F|\1D\01\0F\97\17\03$16\7F\1D\08\97\17\1C3\87\1C\143\B68\153\B68\0A\E9\11\03\CA\04\02)\01(d8\8D\00\0F:\11\1F\01\1D\01\06s\15\0F\DE\05\0C\222,)\00\0F\BE)\02\142T\00\06\1F\13\02\93\04>13]s\1E\0C\93\05(19\C3\08\09>\02\02#\05\02,\06/19\A7\1E\05/20\A7\1E\07\0F\12\05>\1F0\12\05\1E\1F3\12\05P\1F4\12\05\0E\05\B4\04\09u\11\182\D2\03\0E\FA\1E\01[\02\06\9C\03'23\E0\1E\0Bd\04\03J\03/23J\03\05\1F2\BC)\08\0F\F4M\00\0A\07\01\19(\A9\01\0F\DFN.\0F\C6\10\10\1F4\D1)\1F)5>!\00\12rEJ\0F\A1\10\09\1F4\A1\10\12\06S\03\0F\D3\00\05\1E]\1E\10\0F/\00\08\220]\BB\01*64S\0F\1A1\EB\17\02S\0F\00\F6)\06\8A\04\1B2\9A\09\14f\86\03\06\C1\03\08Z\00\035\03\1A2Y\00#8]\9B\03'ldm\10\031\00\07W\00\173\F7\04\00\C7\00\00\97Q\08^\224rd3a\03\0A\7F\03\0F\CB)\00\1F4\CA)\0B\C41dot_product\B7I\0C\C6\13\0F%\00\02\0F\CF\13\02\0F-\00\0C\1F1-\00\19\1F2-\00\19\0E\BB)\0F-\00\08\1F4\09\03\13!5[/\09\07\D9\02\0F\CF\13\0F\07\DB,\03')\06\86M\11bK\04I<21>F\00\00&)\1F7/\03\0C\1F5/\03\12\18uF(\0F\00\01\09\0F6\03\00\1F36\00\06\0Fy(\10\0F6\00\00\0Fv(\10\0F6\00\00\0F\C9\13\08\0F5\00\0F.0]\97\13\0F\B6\13\00\0F\B3\13\02\1F4;\00\05\146\C8\03\0F;\00\00\147\A7\13\0F;\00\03\1F8\0D\14\08\0FbL\02\0F\0D\14\09\1F9\BA\04\03\1A7\17\00\03\0D\14\0Cf\14\06\C1(\06\19\0A_3, 32\D2(\05\06'\00\1E4\E7\0F\02\8C\0A\0DE\14\0FJ\12\00\1866\0B\08\1D\0B#7,5\00,r6\91\12\03/\00\06|\07(9,\E6(\0E\DD\0B\0AmD\135\F7\12\1A5<(\09\9E\1C'ld\B9\12\0F\A5\14\0A\06\BE\12\08\A7\14\1B5\A7\14\135\A7\14\145F'\06]\0A\094\06\02\D0\00\016\0A\06\8D\00\07\C0\0A\07V\0A\0B\C2\0A$4,Q\00\0C\E4\1E\1A7\E3\1E\07\B6\10\06\99\06\08J\00\04\AD\10\0EJ\00\138J\00/6]\92%\01\00]\03\0A\B08\220,\7F\00\03\E2%\08\93\1C\05&\02\01\93%\09*\01\133*\01\09'\0E\191)\02'ov_\0C\0F_\0D\05\03\1B\0B\1E6\DF)\189^\01\01\FB\00\08R\0B\129X\0B\0FJ\02\02/20K\02\04\09\00\1F\08\12\01\0Fu\10\14.32c\0B\01*\01\08c\0B/f1/\0B\1B\0A`X\07/\0B\0F&\0B\00\1F2&\0B\00\0F\AE\01\00\09!\04&12\8E\03\0E\8D\15\0B\A0\16$14s\15\10-*\0DHnd.b\FD+\142\8B\15\01d\03\1An\A8\15\02H\17\08\A5\15;5_6\8A\01\02\E9\0E95_5a\03\170(\09\19l\22\09\0F\A1\01\1C\0F\04\0DG\1F4\04\0DP\1F5\04\0D\0B\01N\01\02\08\00\08\C9\1D\0F\E7Z#\19(\CF\00\0F\E6Z\08\0Ca\09\1E4a\09Y6[12]\0C\09\0Fa\09\0F\07\B0V\01\FC\00\1E<\D4V\0F|\0C\0D\1F6|\0C\1E\0F\E5\00\03\1A]\F2\04\05\C5\03\07C\03\0Ed\07\144\E4\07'ld\B0\09\02\1A\00\08\F2/\02q\0E\0C\F2/\134\16\00\02\DA\1B\05\F2/\01e\03\1E4\D8#\0F\C3\1B\00\136\D5\04\1F6\C3\1B\02\148\07\07+lt\AC\1B\0B\03\07\1B6\03\07\136\03\07\136\03\07\0A\C8\0C'0]\F0\00\08\D4\11\09\FB\07+-1\86\1A/32b\05*\1Cbb\05/r8\C3\10-\01\0B\00\1F2d\00\02%2+XU\0D2\00\1F32\00\02\1332\00\1F9\F8\05\1C\0Fc]\02\0F+\04\01\04\09\00\142\09\00\1F3=\04\00\1F4=\04\00\0Aa\17\03\C1\01\09*'\227,\1E\00\01\E1\04\0E\06\03\1B7\1D\02\133\1D\02\1F3\94\09\01\198\F9\02\151y\09\0A\FB\02$12\18\00\02\91\09\06\FE\02$13d\06\0F\00\03\02/13\01\03\04.4:\C9\0F/0]S\0F\10\1F2S\0F\0A\00\04Y/caM\0F\06\0B\1F\00\0FG\0F\02\0F'\00\06\1F1'\00\13\1F2'\00\13\0D5\0F\0E'\00\0F/\0F\18!7[r\07\0F\CE\05+\06@\0F\13b\CE\05)8>E\00\00\FE\22\0F\E1\05\0D\1F7.\0F\1E\0E\F9\00\0F(\0F\0B\0E0\00\0F\22\0F\0B\0E0\00\0F\1C\0F\0B\0E0\00\0F\16\0F\0A\0E/\00\0F\10\0F\FF#\0F\C3\0E\01\1F4\C3\0E\05\01(\01\1D3\0A\0F\1F6\C3\0E\01'7,\EF\0E\0Fr\0F\00\0A/\05\137\A2\04\197\A3\07\188y\0B&ld&\07\0F\C1\0E\0A\138a\06\08\BC\07\1B7\BC\07\137\BC\07\1B7\BF\0E\1F0\BF\0E\04\181\8A\00\08\BF\0E$2, \00\0B\BF\0E$3,Q\00\03\ECB\0AN\0D\07/\19\06\F0\0E\05\1B\06\08I\00$5,\1F\00\03I\00\05{\06\00\1D\00\04\81\09\07I\00\186\08\0F\056\01(10\C3\00\1Bc\07 \127i\06\0A\DC\00\06-I\0B\DC\00$9,i\00\037\1E\0AT\06\00\22\00\09\DC\00'20\DC\00\0F\8A\10\04/ad\F6\06\05\0B\AC\00\025\1F)12\AC\00\02\A7\18-d2\88\01\02\C6\18\01\82\00\01'\00\09?\01$23\DC\06\09\1B\02\133\1B\02\0A\B0\0F\1F3\B0\0F\03\1F4\B0\0F\08$5,9\00\01\09\0E'ld\FC\0F\06\8C\01\07\FA\00#7,\1E\00\02\A6\1C\0F7\03\00/178\03\04\1F4\E8\0C\22\0FX\09\02\0D\F0\0C\0F\E1f\09/0,.\00\19\1F1.\00\1A\1F2kg\1E\0F\82\0D\10!8[\DD\03\07`\07\0F\B4\07\07\02\D5\025<4>!\00\03\A2\07\1F1\8F\07\0C\1F8\8F\07\18\02_\07\0F\DB\00\0B\1E]\C5\07\0F6\00\0F.2]\DC\0D\0F6\00\0F\0F\88\16\00\0F6\00\10/0]\C8\06\07\19f\09\0E*f1*\00\02\DD\06\1C2\94K\04\97\15&ld\96\06\03Z\00\0Cp\04\03I\0E\05*\00\1F5n\04\01%6,Z\00\08\C0\03\137\AF\0E\05,9$8,\BD\06\136b\04\04u\06\01\1C\00S8;\0Aor\14\00\02\A3\04\129\B6\0B\00\1A\01\01\8C \10.\1F\01\00\22\00\11\09\0D\0E\01\A4\00\03\0A\07#10<\07\0Fo\0B\0E\C03;\0Aret;\0A\0A}\0A\00\00\00\00\00\00\00\00\00", section ".nv_fatbin", align 8
@__cuda_fatbin_wrapper = internal constant { i32, i32, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([42385 x i8], [42385 x i8]* @5, i64 0, i64 0), i8* null }, section ".nvFatBinSegment", align 8
@__cuda_gpubin_handle = internal global i8** null, align 8
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_b10.cu, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor to void ()*), i8* null }]

@_ZN11Benchmark10D1Ev = dso_local unnamed_addr alias void (%class.Benchmark10*), void (%class.Benchmark10*)* @_ZN11Benchmark10D2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 %0, float* %1, float* %2, float* %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9) #4 {
  %11 = alloca i32, align 4
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.dim3, align 8
  %22 = alloca %struct.dim3, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca { i64, i32 }, align 8
  %26 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %11, align 4
  store float* %1, float** %12, align 8
  store float* %2, float** %13, align 8
  store float* %3, float** %14, align 8
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32 %6, i32* %17, align 4
  store i32 %7, i32* %18, align 4
  store i32 %8, i32* %19, align 4
  store i32 %9, i32* %20, align 4
  %27 = alloca i8*, i64 10, align 16
  %28 = bitcast i32* %11 to i8*
  %29 = getelementptr i8*, i8** %27, i32 0
  store i8* %28, i8** %29, align 8
  %30 = bitcast float** %12 to i8*
  %31 = getelementptr i8*, i8** %27, i32 1
  store i8* %30, i8** %31, align 8
  %32 = bitcast float** %13 to i8*
  %33 = getelementptr i8*, i8** %27, i32 2
  store i8* %32, i8** %33, align 8
  %34 = bitcast float** %14 to i8*
  %35 = getelementptr i8*, i8** %27, i32 3
  store i8* %34, i8** %35, align 8
  %36 = bitcast i32* %15 to i8*
  %37 = getelementptr i8*, i8** %27, i32 4
  store i8* %36, i8** %37, align 8
  %38 = bitcast i32* %16 to i8*
  %39 = getelementptr i8*, i8** %27, i32 5
  store i8* %38, i8** %39, align 8
  %40 = bitcast i32* %17 to i8*
  %41 = getelementptr i8*, i8** %27, i32 6
  store i8* %40, i8** %41, align 8
  %42 = bitcast i32* %18 to i8*
  %43 = getelementptr i8*, i8** %27, i32 7
  store i8* %42, i8** %43, align 8
  %44 = bitcast i32* %19 to i8*
  %45 = getelementptr i8*, i8** %27, i32 8
  store i8* %44, i8** %45, align 8
  %46 = bitcast i32* %20 to i8*
  %47 = getelementptr i8*, i8** %27, i32 9
  store i8* %46, i8** %47, align 8
  %48 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %21, %struct.dim3* %22, i64* %23, i8** %24)
  %49 = load i64, i64* %23, align 8
  %50 = load i8*, i8** %24, align 8
  %51 = bitcast { i64, i32 }* %25 to i8*
  %52 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 12, i1 false)
  %53 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = bitcast { i64, i32 }* %26 to i8*
  %58 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 12, i1 false)
  %59 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast i8* %50 to %struct.CUstream_st*
  %64 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i64 %54, i32 %56, i64 %60, i32 %62, i8** %27, i64 %49, %struct.CUstream_st* %63)
  br label %65

65:                                               ; preds = %10
  ret void
}

declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**)

declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*)

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 %0, float* %1, float* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7) #4 {
  %9 = alloca i32, align 4
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.dim3, align 8
  %18 = alloca %struct.dim3, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca { i64, i32 }, align 8
  %22 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %9, align 4
  store float* %1, float** %10, align 8
  store float* %2, float** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 %7, i32* %16, align 4
  %23 = alloca i8*, i64 8, align 16
  %24 = bitcast i32* %9 to i8*
  %25 = getelementptr i8*, i8** %23, i32 0
  store i8* %24, i8** %25, align 8
  %26 = bitcast float** %10 to i8*
  %27 = getelementptr i8*, i8** %23, i32 1
  store i8* %26, i8** %27, align 8
  %28 = bitcast float** %11 to i8*
  %29 = getelementptr i8*, i8** %23, i32 2
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %23, i32 3
  store i8* %30, i8** %31, align 8
  %32 = bitcast i32* %13 to i8*
  %33 = getelementptr i8*, i8** %23, i32 4
  store i8* %32, i8** %33, align 8
  %34 = bitcast i32* %14 to i8*
  %35 = getelementptr i8*, i8** %23, i32 5
  store i8* %34, i8** %35, align 8
  %36 = bitcast i32* %15 to i8*
  %37 = getelementptr i8*, i8** %23, i32 6
  store i8* %36, i8** %37, align 8
  %38 = bitcast i32* %16 to i8*
  %39 = getelementptr i8*, i8** %23, i32 7
  store i8* %38, i8** %39, align 8
  %40 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %17, %struct.dim3* %18, i64* %19, i8** %20)
  %41 = load i64, i64* %19, align 8
  %42 = load i8*, i8** %20, align 8
  %43 = bitcast { i64, i32 }* %21 to i8*
  %44 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false)
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = bitcast { i64, i32 }* %22 to i8*
  %50 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 12, i1 false)
  %51 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %22, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %22, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = bitcast i8* %42 to %struct.CUstream_st*
  %56 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32, i32, i32, i32, i32)* @_Z27__device_stub__mean_poolingiPfS_iiiii to i8*), i64 %46, i32 %48, i64 %52, i32 %54, i8** %23, i64 %41, %struct.CUstream_st* %55)
  br label %57

57:                                               ; preds = %8
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z18__device_stub__gapiPfS_iii(i32 %0, float* %1, float* %2, i32 %3, i32 %4, i32 %5) #4 {
  %7 = alloca i32, align 4
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.dim3, align 8
  %14 = alloca %struct.dim3, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca { i64, i32 }, align 8
  %18 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %7, align 4
  store float* %1, float** %8, align 8
  store float* %2, float** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %19 = alloca i8*, i64 6, align 16
  %20 = bitcast i32* %7 to i8*
  %21 = getelementptr i8*, i8** %19, i32 0
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %19, i32 1
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %19, i32 2
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %19, i32 3
  store i8* %26, i8** %27, align 8
  %28 = bitcast i32* %11 to i8*
  %29 = getelementptr i8*, i8** %19, i32 4
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %19, i32 5
  store i8* %30, i8** %31, align 8
  %32 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %13, %struct.dim3* %14, i64* %15, i8** %16)
  %33 = load i64, i64* %15, align 8
  %34 = load i8*, i8** %16, align 8
  %35 = bitcast { i64, i32 }* %17 to i8*
  %36 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 12, i1 false)
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = bitcast { i64, i32 }* %18 to i8*
  %42 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 12, i1 false)
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = bitcast i8* %34 to %struct.CUstream_st*
  %48 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32, i32, i32)* @_Z18__device_stub__gapiPfS_iii to i8*), i64 %38, i32 %40, i64 %44, i32 %46, i8** %19, i64 %33, %struct.CUstream_st* %47)
  br label %49

49:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z26__device_stub__dot_productiPfS_S_i(i32 %0, float* %1, float* %2, float* %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store float* %3, float** %9, align 8
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z26__device_stub__dot_productiPfS_S_i to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z21__device_stub__concatiPfS_S_i(i32 %0, float* %1, float* %2, float* %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store float* %3, float** %9, align 8
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__concatiPfS_S_i to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark105allocEv(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0) unnamed_addr #6 align 2 {
  %2 = alloca %class.Benchmark10*, align 8
  store %class.Benchmark10* %0, %class.Benchmark10** %2, align 8
  %3 = load %class.Benchmark10*, %class.Benchmark10** %2, align 8
  %4 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %5 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %4, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = mul i64 4, %7
  %9 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %10 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = mul i64 %8, %12
  %14 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = mul i64 %13, %16
  %18 = call noalias align 16 i8* @malloc(i64 %17) #3
  %19 = bitcast i8* %18 to float*
  %20 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 24
  store float* %19, float** %20, align 8
  %21 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %22 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %21, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = mul i64 4, %24
  %26 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %27 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = mul i64 %25, %29
  %31 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = mul i64 %30, %33
  %35 = call noalias align 16 i8* @malloc(i64 %34) #3
  %36 = bitcast i8* %35 to float*
  %37 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 25
  store float* %36, float** %37, align 8
  %38 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %39 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %38, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %42 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %41, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = mul nsw i32 %40, %43
  %45 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = mul nsw i32 %44, %46
  %48 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 26
  store i32 %47, i32* %48, align 8
  %49 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = sdiv i32 %51, %53
  %55 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = sdiv i32 %57, %59
  %61 = mul nsw i32 %54, %60
  %62 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = mul nsw i32 %61, %63
  %65 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 27
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 27
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = mul nsw i32 %69, %71
  %73 = sdiv i32 %67, %72
  %74 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 28
  store i32 %73, i32* %74, align 8
  %75 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %76 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %75, i32 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = sdiv i32 %77, %79
  %81 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 6
  %82 = load i32, i32* %81, align 8
  %83 = sdiv i32 %80, %82
  %84 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = sdiv i32 %83, %85
  %87 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %88 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %87, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = sdiv i32 %89, %91
  %93 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 6
  %94 = load i32, i32* %93, align 8
  %95 = sdiv i32 %92, %94
  %96 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = sdiv i32 %95, %97
  %99 = mul nsw i32 %86, %98
  %100 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = mul nsw i32 %99, %101
  %103 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 29
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 5
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 30
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 7
  %108 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 26
  %109 = load i32, i32* %108, align 8
  %110 = sext i32 %109 to i64
  %111 = mul i64 4, %110
  %112 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %107, i64 %111, i32 1)
  %113 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %114 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %113, i32 0, i32 14
  store i32 %112, i32* %114, align 4
  %115 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 8
  %116 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 27
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = mul i64 4, %118
  %120 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %115, i64 %119, i32 1)
  %121 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %122 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %121, i32 0, i32 14
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 9
  %124 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 29
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = mul i64 4, %126
  %128 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %123, i64 %127, i32 1)
  %129 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %130 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %129, i32 0, i32 14
  store i32 %128, i32* %130, align 4
  %131 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 10
  %132 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 30
  %133 = load i32, i32* %132, align 8
  %134 = sext i32 %133 to i64
  %135 = mul i64 4, %134
  %136 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %131, i64 %135, i32 1)
  %137 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %138 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %137, i32 0, i32 14
  store i32 %136, i32* %138, align 4
  %139 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 11
  %140 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 26
  %141 = load i32, i32* %140, align 8
  %142 = sext i32 %141 to i64
  %143 = mul i64 4, %142
  %144 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %139, i64 %143, i32 1)
  %145 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %146 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %145, i32 0, i32 14
  store i32 %144, i32* %146, align 4
  %147 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 12
  %148 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 27
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = mul i64 4, %150
  %152 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %147, i64 %151, i32 1)
  %153 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %154 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %153, i32 0, i32 14
  store i32 %152, i32* %154, align 4
  %155 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 13
  %156 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 29
  %157 = load i32, i32* %156, align 4
  %158 = sext i32 %157 to i64
  %159 = mul i64 4, %158
  %160 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %155, i64 %159, i32 1)
  %161 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %162 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %161, i32 0, i32 14
  store i32 %160, i32* %162, align 4
  %163 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 14
  %164 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 30
  %165 = load i32, i32* %164, align 8
  %166 = sext i32 %165 to i64
  %167 = mul i64 4, %166
  %168 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %163, i64 %167, i32 1)
  %169 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %170 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %169, i32 0, i32 14
  store i32 %168, i32* %170, align 4
  %171 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = mul nsw i32 %172, %174
  %176 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = mul nsw i32 %175, %177
  %179 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 4
  %180 = load i32, i32* %179, align 8
  %181 = mul nsw i32 %178, %180
  %182 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 31
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 4
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = mul nsw i32 %184, %186
  %188 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = mul nsw i32 %187, %189
  %191 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 5
  %192 = load i32, i32* %191, align 4
  %193 = mul nsw i32 %190, %192
  %194 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 32
  store i32 %193, i32* %194, align 8
  %195 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 15
  %196 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 31
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = mul i64 4, %198
  %200 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %195, i64 %199, i32 1)
  %201 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %202 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %201, i32 0, i32 14
  store i32 %200, i32* %202, align 4
  %203 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 16
  %204 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 32
  %205 = load i32, i32* %204, align 8
  %206 = sext i32 %205 to i64
  %207 = mul i64 4, %206
  %208 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %203, i64 %207, i32 1)
  %209 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %210 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %209, i32 0, i32 14
  store i32 %208, i32* %210, align 4
  %211 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 17
  %212 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 31
  %213 = load i32, i32* %212, align 4
  %214 = sext i32 %213 to i64
  %215 = mul i64 4, %214
  %216 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %211, i64 %215, i32 1)
  %217 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %218 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %217, i32 0, i32 14
  store i32 %216, i32* %218, align 4
  %219 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 18
  %220 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 32
  %221 = load i32, i32* %220, align 8
  %222 = sext i32 %221 to i64
  %223 = mul i64 4, %222
  %224 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %219, i64 %223, i32 1)
  %225 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %226 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %225, i32 0, i32 14
  store i32 %224, i32* %226, align 4
  %227 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 29
  %228 = load i32, i32* %227, align 4
  %229 = mul nsw i32 2, %228
  %230 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 33
  store i32 %229, i32* %230, align 4
  %231 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 19
  %232 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 33
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = mul i64 4, %234
  %236 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %231, i64 %235, i32 1)
  %237 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %238 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %237, i32 0, i32 14
  store i32 %236, i32* %238, align 4
  %239 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 20
  %240 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 33
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = mul i64 4, %242
  %244 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %239, i64 %243, i32 1)
  %245 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %246 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %245, i32 0, i32 14
  store i32 %244, i32* %246, align 4
  %247 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 21
  %248 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %247, i64 4, i32 1)
  %249 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %250 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %249, i32 0, i32 14
  store i32 %248, i32* %250, align 4
  %251 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 22
  %252 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 28
  %253 = load i32, i32* %252, align 8
  %254 = sext i32 %253 to i64
  %255 = mul i64 4, %254
  %256 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %251, i64 %255, i32 1)
  %257 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %258 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %257, i32 0, i32 14
  store i32 %256, i32* %258, align 4
  %259 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 23
  %260 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 28
  %261 = load i32, i32* %260, align 8
  %262 = sext i32 %261 to i64
  %263 = mul i64 4, %262
  %264 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %259, i64 %263, i32 1)
  %265 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %266 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %265, i32 0, i32 14
  store i32 %264, i32* %266, align 4
  %267 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 34
  %268 = call i32 @cudaStreamCreate(%struct.CUstream_st** %267)
  %269 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %270 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %269, i32 0, i32 14
  store i32 %268, i32* %270, align 4
  %271 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %3, i32 0, i32 35
  %272 = call i32 @cudaStreamCreate(%struct.CUstream_st** %271)
  %273 = bitcast %class.Benchmark10* %3 to %struct.Benchmark*
  %274 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %273, i32 0, i32 14
  store i32 %272, i32* %274, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias align 16 i8* @malloc(i64) #2

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %0, i64 %1, i32 %2) #6 {
  %4 = alloca float**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store float** %0, float*** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load float**, float*** %4, align 8
  %8 = bitcast float** %7 to i8*
  %9 = bitcast i8* %8 to i8**
  %10 = load i64, i64* %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @cudaMallocManaged(i8** %9, i64 %10, i32 %11)
  ret i32 %12
}

declare dso_local i32 @cudaStreamCreate(%struct.CUstream_st**) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN11Benchmark104initEv(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark10*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %2, align 8
  %7 = load %class.Benchmark10*, %class.Benchmark10** %2, align 8
  store i32 0, i32* %3, align 4
  br label %8

8:                                                ; preds = %30, %1
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 26
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %8
  %14 = call i32 @rand() #3
  %15 = sitofp i32 %14 to float
  %16 = fdiv contract float %15, 0x41E0000000000000
  %17 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 24
  %18 = load float*, float** %17, align 8
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %18, i64 %20
  store float %16, float* %21, align 4
  %22 = call i32 @rand() #3
  %23 = sitofp i32 %22 to float
  %24 = fdiv contract float %23, 0x41E0000000000000
  %25 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 25
  %26 = load float*, float** %25, align 8
  %27 = load i32, i32* %3, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, float* %26, i64 %28
  store float %24, float* %29, align 4
  br label %30

30:                                               ; preds = %13
  %31 = load i32, i32* %3, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %3, align 4
  br label %8, !llvm.loop !5

33:                                               ; preds = %8
  store i32 0, i32* %4, align 4
  br label %34

34:                                               ; preds = %60, %33
  %35 = load i32, i32* %4, align 4
  %36 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 31
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %63

39:                                               ; preds = %34
  %40 = call i32 @rand() #3
  %41 = sitofp i32 %40 to float
  %42 = fdiv contract float %41, 0x41E0000000000000
  %43 = fmul contract float %42, 2.000000e+00
  %44 = fsub contract float %43, 1.000000e+00
  %45 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 15
  %46 = load float*, float** %45, align 8
  %47 = load i32, i32* %4, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds float, float* %46, i64 %48
  store float %44, float* %49, align 4
  %50 = call i32 @rand() #3
  %51 = sitofp i32 %50 to float
  %52 = fdiv contract float %51, 0x41E0000000000000
  %53 = fmul contract float %52, 2.000000e+00
  %54 = fsub contract float %53, 1.000000e+00
  %55 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 17
  %56 = load float*, float** %55, align 8
  %57 = load i32, i32* %4, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %56, i64 %58
  store float %54, float* %59, align 4
  br label %60

60:                                               ; preds = %39
  %61 = load i32, i32* %4, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %4, align 4
  br label %34, !llvm.loop !7

63:                                               ; preds = %34
  store i32 0, i32* %5, align 4
  br label %64

64:                                               ; preds = %90, %63
  %65 = load i32, i32* %5, align 4
  %66 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 32
  %67 = load i32, i32* %66, align 8
  %68 = icmp slt i32 %65, %67
  br i1 %68, label %69, label %93

69:                                               ; preds = %64
  %70 = call i32 @rand() #3
  %71 = sitofp i32 %70 to float
  %72 = fdiv contract float %71, 0x41E0000000000000
  %73 = fmul contract float %72, 2.000000e+00
  %74 = fsub contract float %73, 1.000000e+00
  %75 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 16
  %76 = load float*, float** %75, align 8
  %77 = load i32, i32* %5, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float, float* %76, i64 %78
  store float %74, float* %79, align 4
  %80 = call i32 @rand() #3
  %81 = sitofp i32 %80 to float
  %82 = fdiv contract float %81, 0x41E0000000000000
  %83 = fmul contract float %82, 2.000000e+00
  %84 = fsub contract float %83, 1.000000e+00
  %85 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 18
  %86 = load float*, float** %85, align 8
  %87 = load i32, i32* %5, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds float, float* %86, i64 %88
  store float %84, float* %89, align 4
  br label %90

90:                                               ; preds = %69
  %91 = load i32, i32* %5, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %5, align 4
  br label %64, !llvm.loop !8

93:                                               ; preds = %64
  store i32 0, i32* %6, align 4
  br label %94

94:                                               ; preds = %114, %93
  %95 = load i32, i32* %6, align 4
  %96 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 33
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %95, %97
  br i1 %98, label %99, label %117

99:                                               ; preds = %94
  %100 = call i32 @rand() #3
  %101 = sitofp i32 %100 to float
  %102 = fdiv contract float %101, 0x41E0000000000000
  %103 = fmul contract float %102, 2.000000e+00
  %104 = fsub contract float %103, 1.000000e+00
  %105 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 33
  %106 = load i32, i32* %105, align 4
  %107 = sitofp i32 %106 to float
  %108 = fdiv contract float %104, %107
  %109 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %7, i32 0, i32 20
  %110 = load float*, float** %109, align 8
  %111 = load i32, i32* %6, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds float, float* %110, i64 %112
  store float %108, float* %113, align 4
  br label %114

114:                                              ; preds = %99
  %115 = load i32, i32* %6, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %6, align 4
  br label %94, !llvm.loop !9

117:                                              ; preds = %94
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN11Benchmark105resetEv(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark10*, align 8
  %3 = alloca i32, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %2, align 8
  %4 = load %class.Benchmark10*, %class.Benchmark10** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %33, %1
  %6 = load i32, i32* %3, align 4
  %7 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 26
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %36

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 24
  %12 = load float*, float** %11, align 8
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds float, float* %12, i64 %14
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 7
  %18 = load float*, float** %17, align 8
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %18, i64 %20
  store float %16, float* %21, align 4
  %22 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 25
  %23 = load float*, float** %22, align 8
  %24 = load i32, i32* %3, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, float* %23, i64 %25
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 11
  %29 = load float*, float** %28, align 8
  %30 = load i32, i32* %3, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float, float* %29, i64 %31
  store float %27, float* %32, align 4
  br label %33

33:                                               ; preds = %10
  %34 = load i32, i32* %3, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %3, align 4
  br label %5, !llvm.loop !10

36:                                               ; preds = %5
  %37 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %4, i32 0, i32 21
  %38 = load float*, float** %37, align 8
  store float 0.000000e+00, float* %38, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1012execute_syncEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca %struct.dim3, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca { i64, i32 }, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca %struct.dim3, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca { i64, i32 }, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %42 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %43 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %44 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %43, i32 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %47 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 8
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %45, i32 %48, i32 1)
  %49 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 6
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %53 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %52, i32 0, i32 6
  %54 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %51, i32 %54, i32 1)
  %55 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 4
  %58 = sdiv i32 %57, 2
  %59 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %60 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %59, i32 0, i32 6
  %61 = load i32, i32* %60, align 4
  %62 = sdiv i32 %61, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %58, i32 %62, i32 1)
  %63 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = sdiv i32 %65, 2
  %67 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %68 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %67, i32 0, i32 5
  %69 = load i32, i32* %68, align 8
  %70 = sdiv i32 %69, 2
  %71 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %72 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %71, i32 0, i32 5
  %73 = load i32, i32* %72, align 8
  %74 = sdiv i32 %73, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %8, i32 %66, i32 %70, i32 %74)
  %75 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %76 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %75, i32 0, i32 6
  %77 = load i32, i32* %76, align 4
  %78 = sdiv i32 %77, 2
  %79 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %80 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %79, i32 0, i32 6
  %81 = load i32, i32* %80, align 4
  %82 = sdiv i32 %81, 2
  %83 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %84 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %83, i32 0, i32 6
  %85 = load i32, i32* %84, align 4
  %86 = sdiv i32 %85, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %78, i32 %82, i32 %86)
  %87 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %88 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %87, i32 0, i32 8
  %89 = load i8, i8* %88, align 4
  %90 = trunc i8 %89 to i1
  br i1 %90, label %91, label %121

91:                                               ; preds = %2
  %92 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %93 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %92, i32 0, i32 11
  %94 = load i32, i32* %93, align 8
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %121

96:                                               ; preds = %91
  %97 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 7
  %98 = load float*, float** %97, align 8
  %99 = bitcast float* %98 to i8*
  %100 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 26
  %101 = load i32, i32* %100, align 8
  %102 = sext i32 %101 to i64
  %103 = mul i64 4, %102
  %104 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %105 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %104, i32 0, i32 15
  %106 = load i32, i32* %105, align 8
  %107 = call i32 @cudaMemPrefetchAsync(i8* %99, i64 %103, i32 %106, %struct.CUstream_st* null)
  %108 = call i32 @cudaDeviceSynchronize()
  %109 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 11
  %110 = load float*, float** %109, align 8
  %111 = bitcast float* %110 to i8*
  %112 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 26
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = mul i64 4, %114
  %116 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %117 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %116, i32 0, i32 15
  %118 = load i32, i32* %117, align 8
  %119 = call i32 @cudaMemPrefetchAsync(i8* %111, i64 %115, i32 %118, %struct.CUstream_st* null)
  %120 = call i32 @cudaDeviceSynchronize()
  br label %121

121:                                              ; preds = %96, %91, %2
  %122 = bitcast %struct.dim3* %10 to i8*
  %123 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 12, i1 false)
  %124 = bitcast %struct.dim3* %11 to i8*
  %125 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 12, i1 false)
  %126 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = mul nsw i32 %127, %129
  %131 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = mul nsw i32 %130, %132
  %134 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = mul nsw i32 %133, %135
  %137 = sext i32 %136 to i64
  %138 = mul i64 %137, 4
  %139 = bitcast { i64, i32 }* %12 to i8*
  %140 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 12, i1 false)
  %141 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %142 = load i64, i64* %141, align 4
  %143 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = bitcast { i64, i32 }* %13 to i8*
  %146 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 12, i1 false)
  %147 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %148 = load i64, i64* %147, align 4
  %149 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = call i32 @__cudaPushCallConfiguration(i64 %142, i32 %144, i64 %148, i32 %150, i64 %138, i8* null)
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %174, label %153

153:                                              ; preds = %121
  %154 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 8
  %155 = load float*, float** %154, align 8
  %156 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 7
  %157 = load float*, float** %156, align 8
  %158 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 15
  %159 = load float*, float** %158, align 8
  %160 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %161 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %160, i32 0, i32 3
  %162 = load i32, i32* %161, align 8
  %163 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %164 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %163, i32 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %171 = load i32, i32* %170, align 8
  %172 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %155, float* %157, float* %159, i32 %162, i32 %165, i32 %167, i32 %169, i32 %171, i32 %173)
  br label %174

174:                                              ; preds = %153, %121
  %175 = call i32 @cudaDeviceSynchronize()
  %176 = bitcast %struct.dim3* %14 to i8*
  %177 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 12, i1 false)
  %178 = bitcast %struct.dim3* %15 to i8*
  %179 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 12, i1 false)
  %180 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = mul nsw i32 %181, %183
  %185 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %186 = load i32, i32* %185, align 8
  %187 = mul nsw i32 %184, %186
  %188 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %189 = load i32, i32* %188, align 8
  %190 = mul nsw i32 %187, %189
  %191 = sext i32 %190 to i64
  %192 = mul i64 %191, 4
  %193 = bitcast { i64, i32 }* %16 to i8*
  %194 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 12, i1 false)
  %195 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %196 = load i64, i64* %195, align 4
  %197 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = bitcast { i64, i32 }* %17 to i8*
  %200 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %200, i64 12, i1 false)
  %201 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %202 = load i64, i64* %201, align 4
  %203 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = call i32 @__cudaPushCallConfiguration(i64 %196, i32 %198, i64 %202, i32 %204, i64 %192, i8* null)
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %228, label %207

207:                                              ; preds = %174
  %208 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 12
  %209 = load float*, float** %208, align 8
  %210 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 11
  %211 = load float*, float** %210, align 8
  %212 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 17
  %213 = load float*, float** %212, align 8
  %214 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %215 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %214, i32 0, i32 3
  %216 = load i32, i32* %215, align 8
  %217 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %218 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %217, i32 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %221 = load i32, i32* %220, align 8
  %222 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %225 = load i32, i32* %224, align 8
  %226 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %209, float* %211, float* %213, i32 %216, i32 %219, i32 %221, i32 %223, i32 %225, i32 %227)
  br label %228

228:                                              ; preds = %207, %174
  %229 = call i32 @cudaDeviceSynchronize()
  %230 = bitcast %struct.dim3* %18 to i8*
  %231 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %231, i64 12, i1 false)
  %232 = bitcast %struct.dim3* %19 to i8*
  %233 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 12, i1 false)
  %234 = bitcast { i64, i32 }* %20 to i8*
  %235 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 12, i1 false)
  %236 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %237 = load i64, i64* %236, align 4
  %238 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = bitcast { i64, i32 }* %21 to i8*
  %241 = bitcast %struct.dim3* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %240, i8* align 4 %241, i64 12, i1 false)
  %242 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %243 = load i64, i64* %242, align 4
  %244 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = call i32 @__cudaPushCallConfiguration(i64 %237, i32 %239, i64 %243, i32 %245, i64 0, i8* null)
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %271, label %248

248:                                              ; preds = %228
  %249 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 22
  %250 = load float*, float** %249, align 8
  %251 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 8
  %252 = load float*, float** %251, align 8
  %253 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %254 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %253, i32 0, i32 3
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = sdiv i32 %255, %257
  %259 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %260 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %259, i32 0, i32 3
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = sdiv i32 %261, %263
  %265 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %266 = load i32, i32* %265, align 8
  %267 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %270 = load i32, i32* %269, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %250, float* %252, i32 %258, i32 %264, i32 %266, i32 %268, i32 %270)
  br label %271

271:                                              ; preds = %248, %228
  %272 = call i32 @cudaDeviceSynchronize()
  %273 = bitcast %struct.dim3* %22 to i8*
  %274 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %273, i8* align 4 %274, i64 12, i1 false)
  %275 = bitcast %struct.dim3* %23 to i8*
  %276 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* align 4 %276, i64 12, i1 false)
  %277 = bitcast { i64, i32 }* %24 to i8*
  %278 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* align 4 %278, i64 12, i1 false)
  %279 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %280 = load i64, i64* %279, align 4
  %281 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = bitcast { i64, i32 }* %25 to i8*
  %284 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* align 4 %284, i64 12, i1 false)
  %285 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %286 = load i64, i64* %285, align 4
  %287 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = call i32 @__cudaPushCallConfiguration(i64 %280, i32 %282, i64 %286, i32 %288, i64 0, i8* null)
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %314, label %291

291:                                              ; preds = %271
  %292 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 23
  %293 = load float*, float** %292, align 8
  %294 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 12
  %295 = load float*, float** %294, align 8
  %296 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %297 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %296, i32 0, i32 3
  %298 = load i32, i32* %297, align 8
  %299 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %300 = load i32, i32* %299, align 4
  %301 = sdiv i32 %298, %300
  %302 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %303 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %302, i32 0, i32 3
  %304 = load i32, i32* %303, align 8
  %305 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %306 = load i32, i32* %305, align 4
  %307 = sdiv i32 %304, %306
  %308 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %309 = load i32, i32* %308, align 8
  %310 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %311 = load i32, i32* %310, align 8
  %312 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %313 = load i32, i32* %312, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %293, float* %295, i32 %301, i32 %307, i32 %309, i32 %311, i32 %313)
  br label %314

314:                                              ; preds = %291, %271
  %315 = call i32 @cudaDeviceSynchronize()
  %316 = bitcast %struct.dim3* %26 to i8*
  %317 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %317, i64 12, i1 false)
  %318 = bitcast %struct.dim3* %27 to i8*
  %319 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %319, i64 12, i1 false)
  %320 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %323 = load i32, i32* %322, align 4
  %324 = mul nsw i32 %321, %323
  %325 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %326 = load i32, i32* %325, align 8
  %327 = mul nsw i32 %324, %326
  %328 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %329 = load i32, i32* %328, align 4
  %330 = mul nsw i32 %327, %329
  %331 = sext i32 %330 to i64
  %332 = mul i64 %331, 4
  %333 = bitcast { i64, i32 }* %28 to i8*
  %334 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %333, i8* align 4 %334, i64 12, i1 false)
  %335 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %336 = load i64, i64* %335, align 4
  %337 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = bitcast { i64, i32 }* %29 to i8*
  %340 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %339, i8* align 4 %340, i64 12, i1 false)
  %341 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %342 = load i64, i64* %341, align 4
  %343 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = call i32 @__cudaPushCallConfiguration(i64 %336, i32 %338, i64 %342, i32 %344, i64 %332, i8* null)
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %380, label %347

347:                                              ; preds = %314
  %348 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 9
  %349 = load float*, float** %348, align 8
  %350 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 22
  %351 = load float*, float** %350, align 8
  %352 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 16
  %353 = load float*, float** %352, align 8
  %354 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %355 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %354, i32 0, i32 3
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %358 = load i32, i32* %357, align 4
  %359 = sdiv i32 %356, %358
  %360 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %361 = load i32, i32* %360, align 8
  %362 = sdiv i32 %359, %361
  %363 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %364 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %363, i32 0, i32 3
  %365 = load i32, i32* %364, align 8
  %366 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = sdiv i32 %365, %367
  %369 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %370 = load i32, i32* %369, align 8
  %371 = sdiv i32 %368, %370
  %372 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %373 = load i32, i32* %372, align 8
  %374 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %349, float* %351, float* %353, i32 %362, i32 %371, i32 %373, i32 %375, i32 %377, i32 %379)
  br label %380

380:                                              ; preds = %347, %314
  %381 = call i32 @cudaDeviceSynchronize()
  %382 = bitcast %struct.dim3* %30 to i8*
  %383 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %382, i8* align 4 %383, i64 12, i1 false)
  %384 = bitcast %struct.dim3* %31 to i8*
  %385 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %384, i8* align 4 %385, i64 12, i1 false)
  %386 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = mul nsw i32 %387, %389
  %391 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %392 = load i32, i32* %391, align 8
  %393 = mul nsw i32 %390, %392
  %394 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %395 = load i32, i32* %394, align 4
  %396 = mul nsw i32 %393, %395
  %397 = sext i32 %396 to i64
  %398 = mul i64 %397, 4
  %399 = bitcast { i64, i32 }* %32 to i8*
  %400 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 12, i1 false)
  %401 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %402 = load i64, i64* %401, align 4
  %403 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = bitcast { i64, i32 }* %33 to i8*
  %406 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %405, i8* align 4 %406, i64 12, i1 false)
  %407 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %408 = load i64, i64* %407, align 4
  %409 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = call i32 @__cudaPushCallConfiguration(i64 %402, i32 %404, i64 %408, i32 %410, i64 %398, i8* null)
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %446, label %413

413:                                              ; preds = %380
  %414 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 13
  %415 = load float*, float** %414, align 8
  %416 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 23
  %417 = load float*, float** %416, align 8
  %418 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 18
  %419 = load float*, float** %418, align 8
  %420 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %421 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %420, i32 0, i32 3
  %422 = load i32, i32* %421, align 8
  %423 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %424 = load i32, i32* %423, align 4
  %425 = sdiv i32 %422, %424
  %426 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %427 = load i32, i32* %426, align 8
  %428 = sdiv i32 %425, %427
  %429 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %430 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %429, i32 0, i32 3
  %431 = load i32, i32* %430, align 8
  %432 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %433 = load i32, i32* %432, align 4
  %434 = sdiv i32 %431, %433
  %435 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %436 = load i32, i32* %435, align 8
  %437 = sdiv i32 %434, %436
  %438 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %439 = load i32, i32* %438, align 8
  %440 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %441 = load i32, i32* %440, align 4
  %442 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %443 = load i32, i32* %442, align 4
  %444 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %445 = load i32, i32* %444, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %415, float* %417, float* %419, i32 %428, i32 %437, i32 %439, i32 %441, i32 %443, i32 %445)
  br label %446

446:                                              ; preds = %413, %380
  %447 = call i32 @cudaDeviceSynchronize()
  %448 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %449 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %448, i32 0, i32 6
  %450 = load i32, i32* %449, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %450, i32 1, i32 1)
  %451 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %452 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %451, i32 0, i32 4
  %453 = load i32, i32* %452, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %35, i32 %453, i32 1, i32 1)
  %454 = bitcast { i64, i32 }* %36 to i8*
  %455 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %454, i8* align 4 %455, i64 12, i1 false)
  %456 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %457 = load i64, i64* %456, align 4
  %458 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %459 = load i32, i32* %458, align 4
  %460 = bitcast { i64, i32 }* %37 to i8*
  %461 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %460, i8* align 4 %461, i64 12, i1 false)
  %462 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %463 = load i64, i64* %462, align 4
  %464 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = call i32 @__cudaPushCallConfiguration(i64 %457, i32 %459, i64 %463, i32 %465, i64 0, i8* null)
  %467 = icmp ne i32 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %446
  %469 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 19
  %470 = load float*, float** %469, align 8
  %471 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 9
  %472 = load float*, float** %471, align 8
  %473 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 13
  %474 = load float*, float** %473, align 8
  %475 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 29
  %476 = load i32, i32* %475, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %470, float* %472, float* %474, i32 %476)
  br label %477

477:                                              ; preds = %468, %446
  %478 = call i32 @cudaDeviceSynchronize()
  %479 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %480 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %479, i32 0, i32 6
  %481 = load i32, i32* %480, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %481, i32 1, i32 1)
  %482 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %483 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %482, i32 0, i32 4
  %484 = load i32, i32* %483, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %39, i32 %484, i32 1, i32 1)
  %485 = bitcast { i64, i32 }* %40 to i8*
  %486 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %485, i8* align 4 %486, i64 12, i1 false)
  %487 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %488 = load i64, i64* %487, align 4
  %489 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = bitcast { i64, i32 }* %41 to i8*
  %492 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %491, i8* align 4 %492, i64 12, i1 false)
  %493 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %494 = load i64, i64* %493, align 4
  %495 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = call i32 @__cudaPushCallConfiguration(i64 %488, i32 %490, i64 %494, i32 %496, i64 0, i8* null)
  %498 = icmp ne i32 %497, 0
  br i1 %498, label %508, label %499

499:                                              ; preds = %477
  %500 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 21
  %501 = load float*, float** %500, align 8
  %502 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 19
  %503 = load float*, float** %502, align 8
  %504 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 20
  %505 = load float*, float** %504, align 8
  %506 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 29
  %507 = load i32, i32* %506, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %501, float* %503, float* %505, i32 %507)
  br label %508

508:                                              ; preds = %499, %477
  %509 = call i32 @cudaDeviceSynchronize()
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %0, i32 %1, i32 %2, i32 %3) unnamed_addr #8 comdat align 2 {
  %5 = alloca %struct.dim3*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.dim3* %0, %struct.dim3** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.dim3*, %struct.dim3** %5, align 8
  %10 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 1
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 2
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  ret void
}

declare dso_local i32 @cudaMemPrefetchAsync(i8*, i64, i32, %struct.CUstream_st*) #1

declare dso_local i32 @cudaDeviceSynchronize() #1

declare dso_local i32 @__cudaPushCallConfiguration(i64, i32, i64, i32, i64, i8*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z7FUNCb10PfS_S_iiiiiS_S_S_S_iS_S_S_iS_S_S_iS_S_iiii(float* %0, float* %1, float* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, float* %8, float* %9, float* %10, float* %11, i32 %12, float* %13, float* %14, float* %15, i32 %16, float* %17, float* %18, float* %19, i32 %20, float* %21, float* %22, i32 %23, i32 %24, i32 %25, i32 %26) #6 {
  %28 = alloca float*, align 8
  %29 = alloca float*, align 8
  %30 = alloca float*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca float*, align 8
  %37 = alloca float*, align 8
  %38 = alloca float*, align 8
  %39 = alloca float*, align 8
  %40 = alloca i32, align 4
  %41 = alloca float*, align 8
  %42 = alloca float*, align 8
  %43 = alloca float*, align 8
  %44 = alloca i32, align 4
  %45 = alloca float*, align 8
  %46 = alloca float*, align 8
  %47 = alloca float*, align 8
  %48 = alloca i32, align 4
  %49 = alloca float*, align 8
  %50 = alloca float*, align 8
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca %struct.dim3, align 4
  %56 = alloca %struct.dim3, align 4
  %57 = alloca %struct.dim3, align 4
  %58 = alloca %struct.dim3, align 4
  %59 = alloca { i64, i32 }, align 4
  %60 = alloca { i64, i32 }, align 4
  %61 = alloca %struct.dim3, align 4
  %62 = alloca %struct.dim3, align 4
  %63 = alloca %struct.dim3, align 4
  %64 = alloca %struct.dim3, align 4
  %65 = alloca { i64, i32 }, align 4
  %66 = alloca { i64, i32 }, align 4
  %67 = alloca %struct.dim3, align 4
  %68 = alloca %struct.dim3, align 4
  %69 = alloca %struct.dim3, align 4
  %70 = alloca %struct.dim3, align 4
  %71 = alloca { i64, i32 }, align 4
  %72 = alloca { i64, i32 }, align 4
  %73 = alloca %struct.dim3, align 4
  %74 = alloca %struct.dim3, align 4
  %75 = alloca %struct.dim3, align 4
  %76 = alloca %struct.dim3, align 4
  %77 = alloca { i64, i32 }, align 4
  %78 = alloca { i64, i32 }, align 4
  %79 = alloca %struct.dim3, align 4
  %80 = alloca %struct.dim3, align 4
  %81 = alloca %struct.dim3, align 4
  %82 = alloca %struct.dim3, align 4
  %83 = alloca { i64, i32 }, align 4
  %84 = alloca { i64, i32 }, align 4
  %85 = alloca %struct.dim3, align 4
  %86 = alloca %struct.dim3, align 4
  %87 = alloca %struct.dim3, align 4
  %88 = alloca %struct.dim3, align 4
  %89 = alloca { i64, i32 }, align 4
  %90 = alloca { i64, i32 }, align 4
  %91 = alloca %struct.dim3, align 4
  %92 = alloca %struct.dim3, align 4
  %93 = alloca { i64, i32 }, align 4
  %94 = alloca { i64, i32 }, align 4
  %95 = alloca %struct.dim3, align 4
  %96 = alloca %struct.dim3, align 4
  %97 = alloca { i64, i32 }, align 4
  %98 = alloca { i64, i32 }, align 4
  store float* %0, float** %28, align 8
  store float* %1, float** %29, align 8
  store float* %2, float** %30, align 8
  store i32 %3, i32* %31, align 4
  store i32 %4, i32* %32, align 4
  store i32 %5, i32* %33, align 4
  store i32 %6, i32* %34, align 4
  store i32 %7, i32* %35, align 4
  store float* %8, float** %36, align 8
  store float* %9, float** %37, align 8
  store float* %10, float** %38, align 8
  store float* %11, float** %39, align 8
  store i32 %12, i32* %40, align 4
  store float* %13, float** %41, align 8
  store float* %14, float** %42, align 8
  store float* %15, float** %43, align 8
  store i32 %16, i32* %44, align 4
  store float* %17, float** %45, align 8
  store float* %18, float** %46, align 8
  store float* %19, float** %47, align 8
  store i32 %20, i32* %48, align 4
  store float* %21, float** %49, align 8
  store float* %22, float** %50, align 8
  store i32 %23, i32* %51, align 4
  store i32 %24, i32* %52, align 4
  store i32 %25, i32* %53, align 4
  store i32 %26, i32* %54, align 4
  %99 = load i32, i32* %54, align 4
  %100 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %55, i32 %99, i32 %100, i32 1)
  %101 = load i32, i32* %51, align 4
  %102 = load i32, i32* %51, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %56, i32 %101, i32 %102, i32 1)
  %103 = bitcast %struct.dim3* %57 to i8*
  %104 = bitcast %struct.dim3* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false)
  %105 = bitcast %struct.dim3* %58 to i8*
  %106 = bitcast %struct.dim3* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 12, i1 false)
  %107 = load i32, i32* %33, align 4
  %108 = load i32, i32* %33, align 4
  %109 = mul nsw i32 %107, %108
  %110 = load i32, i32* %34, align 4
  %111 = mul nsw i32 %109, %110
  %112 = load i32, i32* %32, align 4
  %113 = mul nsw i32 %111, %112
  %114 = sext i32 %113 to i64
  %115 = mul i64 %114, 4
  %116 = bitcast { i64, i32 }* %59 to i8*
  %117 = bitcast %struct.dim3* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 12, i1 false)
  %118 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %59, i32 0, i32 0
  %119 = load i64, i64* %118, align 4
  %120 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %59, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = bitcast { i64, i32 }* %60 to i8*
  %123 = bitcast %struct.dim3* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 12, i1 false)
  %124 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %60, i32 0, i32 0
  %125 = load i64, i64* %124, align 4
  %126 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %60, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = call i32 @__cudaPushCallConfiguration(i64 %119, i32 %121, i64 %125, i32 %127, i64 %115, i8* null)
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %27
  %131 = load float*, float** %28, align 8
  %132 = load float*, float** %29, align 8
  %133 = load float*, float** %30, align 8
  %134 = load i32, i32* %31, align 4
  %135 = load i32, i32* %31, align 4
  %136 = load i32, i32* %32, align 4
  %137 = load i32, i32* %33, align 4
  %138 = load i32, i32* %34, align 4
  %139 = load i32, i32* %35, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %131, float* %132, float* %133, i32 %134, i32 %135, i32 %136, i32 %137, i32 %138, i32 %139)
  br label %140

140:                                              ; preds = %130, %27
  %141 = load i32, i32* %54, align 4
  %142 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %61, i32 %141, i32 %142, i32 1)
  %143 = load i32, i32* %51, align 4
  %144 = load i32, i32* %51, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %62, i32 %143, i32 %144, i32 1)
  %145 = bitcast %struct.dim3* %63 to i8*
  %146 = bitcast %struct.dim3* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 12, i1 false)
  %147 = bitcast %struct.dim3* %64 to i8*
  %148 = bitcast %struct.dim3* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 12, i1 false)
  %149 = load i32, i32* %33, align 4
  %150 = load i32, i32* %33, align 4
  %151 = mul nsw i32 %149, %150
  %152 = load i32, i32* %34, align 4
  %153 = mul nsw i32 %151, %152
  %154 = load i32, i32* %32, align 4
  %155 = mul nsw i32 %153, %154
  %156 = sext i32 %155 to i64
  %157 = mul i64 %156, 4
  %158 = bitcast { i64, i32 }* %65 to i8*
  %159 = bitcast %struct.dim3* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %158, i8* align 4 %159, i64 12, i1 false)
  %160 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %65, i32 0, i32 0
  %161 = load i64, i64* %160, align 4
  %162 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %65, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = bitcast { i64, i32 }* %66 to i8*
  %165 = bitcast %struct.dim3* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 12, i1 false)
  %166 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 0
  %167 = load i64, i64* %166, align 4
  %168 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = call i32 @__cudaPushCallConfiguration(i64 %161, i32 %163, i64 %167, i32 %169, i64 %157, i8* null)
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %182, label %172

172:                                              ; preds = %140
  %173 = load float*, float** %36, align 8
  %174 = load float*, float** %37, align 8
  %175 = load float*, float** %38, align 8
  %176 = load i32, i32* %31, align 4
  %177 = load i32, i32* %31, align 4
  %178 = load i32, i32* %32, align 4
  %179 = load i32, i32* %33, align 4
  %180 = load i32, i32* %34, align 4
  %181 = load i32, i32* %35, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %173, float* %174, float* %175, i32 %176, i32 %177, i32 %178, i32 %179, i32 %180, i32 %181)
  br label %182

182:                                              ; preds = %172, %140
  %183 = load i32, i32* %54, align 4
  %184 = load i32, i32* %54, align 4
  %185 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %67, i32 %183, i32 %184, i32 %185)
  %186 = load i32, i32* %51, align 4
  %187 = sdiv i32 %186, 2
  %188 = load i32, i32* %51, align 4
  %189 = sdiv i32 %188, 2
  %190 = load i32, i32* %51, align 4
  %191 = sdiv i32 %190, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %68, i32 %187, i32 %189, i32 %191)
  %192 = bitcast %struct.dim3* %69 to i8*
  %193 = bitcast %struct.dim3* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* align 4 %193, i64 12, i1 false)
  %194 = bitcast %struct.dim3* %70 to i8*
  %195 = bitcast %struct.dim3* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 12, i1 false)
  %196 = bitcast { i64, i32 }* %71 to i8*
  %197 = bitcast %struct.dim3* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 12, i1 false)
  %198 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %71, i32 0, i32 0
  %199 = load i64, i64* %198, align 4
  %200 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %71, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = bitcast { i64, i32 }* %72 to i8*
  %203 = bitcast %struct.dim3* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 %203, i64 12, i1 false)
  %204 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %72, i32 0, i32 0
  %205 = load i64, i64* %204, align 4
  %206 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %72, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = call i32 @__cudaPushCallConfiguration(i64 %199, i32 %201, i64 %205, i32 %207, i64 0, i8* null)
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %182
  %211 = load float*, float** %39, align 8
  %212 = load float*, float** %28, align 8
  %213 = load i32, i32* %31, align 4
  %214 = load i32, i32* %35, align 4
  %215 = sdiv i32 %213, %214
  %216 = load i32, i32* %31, align 4
  %217 = load i32, i32* %35, align 4
  %218 = sdiv i32 %216, %217
  %219 = load i32, i32* %34, align 4
  %220 = load i32, i32* %40, align 4
  %221 = load i32, i32* %40, align 4
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %211, float* %212, i32 %215, i32 %218, i32 %219, i32 %220, i32 %221)
  br label %222

222:                                              ; preds = %210, %182
  %223 = load i32, i32* %54, align 4
  %224 = load i32, i32* %54, align 4
  %225 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %73, i32 %223, i32 %224, i32 %225)
  %226 = load i32, i32* %51, align 4
  %227 = sdiv i32 %226, 2
  %228 = load i32, i32* %51, align 4
  %229 = sdiv i32 %228, 2
  %230 = load i32, i32* %51, align 4
  %231 = sdiv i32 %230, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %74, i32 %227, i32 %229, i32 %231)
  %232 = bitcast %struct.dim3* %75 to i8*
  %233 = bitcast %struct.dim3* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 12, i1 false)
  %234 = bitcast %struct.dim3* %76 to i8*
  %235 = bitcast %struct.dim3* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 12, i1 false)
  %236 = bitcast { i64, i32 }* %77 to i8*
  %237 = bitcast %struct.dim3* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %236, i8* align 4 %237, i64 12, i1 false)
  %238 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %77, i32 0, i32 0
  %239 = load i64, i64* %238, align 4
  %240 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %77, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = bitcast { i64, i32 }* %78 to i8*
  %243 = bitcast %struct.dim3* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %242, i8* align 4 %243, i64 12, i1 false)
  %244 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %78, i32 0, i32 0
  %245 = load i64, i64* %244, align 4
  %246 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %78, i32 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = call i32 @__cudaPushCallConfiguration(i64 %239, i32 %241, i64 %245, i32 %247, i64 0, i8* null)
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %262, label %250

250:                                              ; preds = %222
  %251 = load float*, float** %41, align 8
  %252 = load float*, float** %36, align 8
  %253 = load i32, i32* %31, align 4
  %254 = load i32, i32* %35, align 4
  %255 = sdiv i32 %253, %254
  %256 = load i32, i32* %31, align 4
  %257 = load i32, i32* %35, align 4
  %258 = sdiv i32 %256, %257
  %259 = load i32, i32* %34, align 4
  %260 = load i32, i32* %40, align 4
  %261 = load i32, i32* %40, align 4
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %251, float* %252, i32 %255, i32 %258, i32 %259, i32 %260, i32 %261)
  br label %262

262:                                              ; preds = %250, %222
  %263 = load i32, i32* %54, align 4
  %264 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %79, i32 %263, i32 %264, i32 1)
  %265 = load i32, i32* %51, align 4
  %266 = load i32, i32* %51, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %80, i32 %265, i32 %266, i32 1)
  %267 = bitcast %struct.dim3* %81 to i8*
  %268 = bitcast %struct.dim3* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* align 4 %268, i64 12, i1 false)
  %269 = bitcast %struct.dim3* %82 to i8*
  %270 = bitcast %struct.dim3* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %269, i8* align 4 %270, i64 12, i1 false)
  %271 = load i32, i32* %33, align 4
  %272 = load i32, i32* %33, align 4
  %273 = mul nsw i32 %271, %272
  %274 = load i32, i32* %34, align 4
  %275 = mul nsw i32 %273, %274
  %276 = load i32, i32* %44, align 4
  %277 = mul nsw i32 %275, %276
  %278 = sext i32 %277 to i64
  %279 = mul i64 %278, 4
  %280 = bitcast { i64, i32 }* %83 to i8*
  %281 = bitcast %struct.dim3* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %281, i64 12, i1 false)
  %282 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %83, i32 0, i32 0
  %283 = load i64, i64* %282, align 4
  %284 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %83, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = bitcast { i64, i32 }* %84 to i8*
  %287 = bitcast %struct.dim3* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* align 4 %287, i64 12, i1 false)
  %288 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %84, i32 0, i32 0
  %289 = load i64, i64* %288, align 4
  %290 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %84, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = call i32 @__cudaPushCallConfiguration(i64 %283, i32 %285, i64 %289, i32 %291, i64 %279, i8* null)
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %312, label %294

294:                                              ; preds = %262
  %295 = load float*, float** %42, align 8
  %296 = load float*, float** %39, align 8
  %297 = load float*, float** %43, align 8
  %298 = load i32, i32* %31, align 4
  %299 = load i32, i32* %35, align 4
  %300 = sdiv i32 %298, %299
  %301 = load i32, i32* %40, align 4
  %302 = sdiv i32 %300, %301
  %303 = load i32, i32* %31, align 4
  %304 = load i32, i32* %35, align 4
  %305 = sdiv i32 %303, %304
  %306 = load i32, i32* %40, align 4
  %307 = sdiv i32 %305, %306
  %308 = load i32, i32* %34, align 4
  %309 = load i32, i32* %33, align 4
  %310 = load i32, i32* %44, align 4
  %311 = load i32, i32* %35, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %295, float* %296, float* %297, i32 %302, i32 %307, i32 %308, i32 %309, i32 %310, i32 %311)
  br label %312

312:                                              ; preds = %294, %262
  %313 = load i32, i32* %54, align 4
  %314 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %85, i32 %313, i32 %314, i32 1)
  %315 = load i32, i32* %51, align 4
  %316 = load i32, i32* %51, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %86, i32 %315, i32 %316, i32 1)
  %317 = bitcast %struct.dim3* %87 to i8*
  %318 = bitcast %struct.dim3* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %317, i8* align 4 %318, i64 12, i1 false)
  %319 = bitcast %struct.dim3* %88 to i8*
  %320 = bitcast %struct.dim3* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %319, i8* align 4 %320, i64 12, i1 false)
  %321 = load i32, i32* %33, align 4
  %322 = load i32, i32* %33, align 4
  %323 = mul nsw i32 %321, %322
  %324 = load i32, i32* %34, align 4
  %325 = mul nsw i32 %323, %324
  %326 = load i32, i32* %44, align 4
  %327 = mul nsw i32 %325, %326
  %328 = sext i32 %327 to i64
  %329 = mul i64 %328, 4
  %330 = bitcast { i64, i32 }* %89 to i8*
  %331 = bitcast %struct.dim3* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %330, i8* align 4 %331, i64 12, i1 false)
  %332 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %89, i32 0, i32 0
  %333 = load i64, i64* %332, align 4
  %334 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %89, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = bitcast { i64, i32 }* %90 to i8*
  %337 = bitcast %struct.dim3* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %336, i8* align 4 %337, i64 12, i1 false)
  %338 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %90, i32 0, i32 0
  %339 = load i64, i64* %338, align 4
  %340 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %90, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = call i32 @__cudaPushCallConfiguration(i64 %333, i32 %335, i64 %339, i32 %341, i64 %329, i8* null)
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %362, label %344

344:                                              ; preds = %312
  %345 = load float*, float** %45, align 8
  %346 = load float*, float** %41, align 8
  %347 = load float*, float** %46, align 8
  %348 = load i32, i32* %31, align 4
  %349 = load i32, i32* %35, align 4
  %350 = sdiv i32 %348, %349
  %351 = load i32, i32* %40, align 4
  %352 = sdiv i32 %350, %351
  %353 = load i32, i32* %31, align 4
  %354 = load i32, i32* %35, align 4
  %355 = sdiv i32 %353, %354
  %356 = load i32, i32* %40, align 4
  %357 = sdiv i32 %355, %356
  %358 = load i32, i32* %34, align 4
  %359 = load i32, i32* %33, align 4
  %360 = load i32, i32* %44, align 4
  %361 = load i32, i32* %35, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %345, float* %346, float* %347, i32 %352, i32 %357, i32 %358, i32 %359, i32 %360, i32 %361)
  br label %362

362:                                              ; preds = %344, %312
  %363 = load i32, i32* %52, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %91, i32 %363, i32 1, i32 1)
  %364 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %92, i32 %364, i32 1, i32 1)
  %365 = bitcast { i64, i32 }* %93 to i8*
  %366 = bitcast %struct.dim3* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 12, i1 false)
  %367 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %93, i32 0, i32 0
  %368 = load i64, i64* %367, align 4
  %369 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %93, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = bitcast { i64, i32 }* %94 to i8*
  %372 = bitcast %struct.dim3* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %371, i8* align 4 %372, i64 12, i1 false)
  %373 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %94, i32 0, i32 0
  %374 = load i64, i64* %373, align 4
  %375 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %94, i32 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = call i32 @__cudaPushCallConfiguration(i64 %368, i32 %370, i64 %374, i32 %376, i64 0, i8* null)
  %378 = icmp ne i32 %377, 0
  br i1 %378, label %384, label %379

379:                                              ; preds = %362
  %380 = load float*, float** %47, align 8
  %381 = load float*, float** %42, align 8
  %382 = load float*, float** %45, align 8
  %383 = load i32, i32* %48, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %380, float* %381, float* %382, i32 %383)
  br label %384

384:                                              ; preds = %379, %362
  %385 = load i32, i32* %52, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %95, i32 %385, i32 1, i32 1)
  %386 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %96, i32 %386, i32 1, i32 1)
  %387 = bitcast { i64, i32 }* %97 to i8*
  %388 = bitcast %struct.dim3* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* align 4 %388, i64 12, i1 false)
  %389 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 0
  %390 = load i64, i64* %389, align 4
  %391 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = bitcast { i64, i32 }* %98 to i8*
  %394 = bitcast %struct.dim3* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %393, i8* align 4 %394, i64 12, i1 false)
  %395 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %98, i32 0, i32 0
  %396 = load i64, i64* %395, align 4
  %397 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %98, i32 0, i32 1
  %398 = load i32, i32* %397, align 4
  %399 = call i32 @__cudaPushCallConfiguration(i64 %390, i32 %392, i64 %396, i32 %398, i64 0, i8* null)
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %406, label %401

401:                                              ; preds = %384
  %402 = load float*, float** %49, align 8
  %403 = load float*, float** %47, align 8
  %404 = load float*, float** %50, align 8
  %405 = load i32, i32* %48, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %402, float* %403, float* %404, i32 %405)
  br label %406

406:                                              ; preds = %401, %384
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z16FUNCb10_prefetchPfS_S_iiiiiS_S_S_S_iS_S_S_iS_S_S_iS_S_iiiiii(float* %0, float* %1, float* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, float* %8, float* %9, float* %10, float* %11, i32 %12, float* %13, float* %14, float* %15, i32 %16, float* %17, float* %18, float* %19, i32 %20, float* %21, float* %22, i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, i32 %28) #6 {
  %30 = alloca float*, align 8
  %31 = alloca float*, align 8
  %32 = alloca float*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca float*, align 8
  %39 = alloca float*, align 8
  %40 = alloca float*, align 8
  %41 = alloca float*, align 8
  %42 = alloca i32, align 4
  %43 = alloca float*, align 8
  %44 = alloca float*, align 8
  %45 = alloca float*, align 8
  %46 = alloca i32, align 4
  %47 = alloca float*, align 8
  %48 = alloca float*, align 8
  %49 = alloca float*, align 8
  %50 = alloca i32, align 4
  %51 = alloca float*, align 8
  %52 = alloca float*, align 8
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca %struct.dim3, align 4
  %60 = alloca %struct.dim3, align 4
  %61 = alloca %struct.dim3, align 4
  %62 = alloca %struct.dim3, align 4
  %63 = alloca { i64, i32 }, align 4
  %64 = alloca { i64, i32 }, align 4
  %65 = alloca %struct.dim3, align 4
  %66 = alloca %struct.dim3, align 4
  %67 = alloca %struct.dim3, align 4
  %68 = alloca %struct.dim3, align 4
  %69 = alloca { i64, i32 }, align 4
  %70 = alloca { i64, i32 }, align 4
  %71 = alloca %struct.dim3, align 4
  %72 = alloca %struct.dim3, align 4
  %73 = alloca %struct.dim3, align 4
  %74 = alloca %struct.dim3, align 4
  %75 = alloca { i64, i32 }, align 4
  %76 = alloca { i64, i32 }, align 4
  %77 = alloca %struct.dim3, align 4
  %78 = alloca %struct.dim3, align 4
  %79 = alloca %struct.dim3, align 4
  %80 = alloca %struct.dim3, align 4
  %81 = alloca { i64, i32 }, align 4
  %82 = alloca { i64, i32 }, align 4
  %83 = alloca %struct.dim3, align 4
  %84 = alloca %struct.dim3, align 4
  %85 = alloca %struct.dim3, align 4
  %86 = alloca %struct.dim3, align 4
  %87 = alloca { i64, i32 }, align 4
  %88 = alloca { i64, i32 }, align 4
  %89 = alloca %struct.dim3, align 4
  %90 = alloca %struct.dim3, align 4
  %91 = alloca %struct.dim3, align 4
  %92 = alloca %struct.dim3, align 4
  %93 = alloca { i64, i32 }, align 4
  %94 = alloca { i64, i32 }, align 4
  %95 = alloca %struct.dim3, align 4
  %96 = alloca %struct.dim3, align 4
  %97 = alloca { i64, i32 }, align 4
  %98 = alloca { i64, i32 }, align 4
  %99 = alloca %struct.dim3, align 4
  %100 = alloca %struct.dim3, align 4
  %101 = alloca { i64, i32 }, align 4
  %102 = alloca { i64, i32 }, align 4
  store float* %0, float** %30, align 8
  store float* %1, float** %31, align 8
  store float* %2, float** %32, align 8
  store i32 %3, i32* %33, align 4
  store i32 %4, i32* %34, align 4
  store i32 %5, i32* %35, align 4
  store i32 %6, i32* %36, align 4
  store i32 %7, i32* %37, align 4
  store float* %8, float** %38, align 8
  store float* %9, float** %39, align 8
  store float* %10, float** %40, align 8
  store float* %11, float** %41, align 8
  store i32 %12, i32* %42, align 4
  store float* %13, float** %43, align 8
  store float* %14, float** %44, align 8
  store float* %15, float** %45, align 8
  store i32 %16, i32* %46, align 4
  store float* %17, float** %47, align 8
  store float* %18, float** %48, align 8
  store float* %19, float** %49, align 8
  store i32 %20, i32* %50, align 4
  store float* %21, float** %51, align 8
  store float* %22, float** %52, align 8
  store i32 %23, i32* %53, align 4
  store i32 %24, i32* %54, align 4
  store i32 %25, i32* %55, align 4
  store i32 %26, i32* %56, align 4
  store i32 %27, i32* %57, align 4
  store i32 %28, i32* %58, align 4
  %103 = load float*, float** %31, align 8
  %104 = bitcast float* %103 to i8*
  %105 = load i32, i32* %57, align 4
  %106 = sext i32 %105 to i64
  %107 = load i32, i32* %58, align 4
  %108 = call i32 @cudaMemPrefetchAsync(i8* %104, i64 %106, i32 %107, %struct.CUstream_st* null)
  %109 = load float*, float** %39, align 8
  %110 = bitcast float* %109 to i8*
  %111 = load i32, i32* %57, align 4
  %112 = sext i32 %111 to i64
  %113 = load i32, i32* %58, align 4
  %114 = call i32 @cudaMemPrefetchAsync(i8* %110, i64 %112, i32 %113, %struct.CUstream_st* null)
  %115 = load i32, i32* %56, align 4
  %116 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %59, i32 %115, i32 %116, i32 1)
  %117 = load i32, i32* %53, align 4
  %118 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %60, i32 %117, i32 %118, i32 1)
  %119 = bitcast %struct.dim3* %61 to i8*
  %120 = bitcast %struct.dim3* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 12, i1 false)
  %121 = bitcast %struct.dim3* %62 to i8*
  %122 = bitcast %struct.dim3* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %122, i64 12, i1 false)
  %123 = load i32, i32* %35, align 4
  %124 = load i32, i32* %35, align 4
  %125 = mul nsw i32 %123, %124
  %126 = load i32, i32* %36, align 4
  %127 = mul nsw i32 %125, %126
  %128 = load i32, i32* %34, align 4
  %129 = mul nsw i32 %127, %128
  %130 = sext i32 %129 to i64
  %131 = mul i64 %130, 4
  %132 = bitcast { i64, i32 }* %63 to i8*
  %133 = bitcast %struct.dim3* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 12, i1 false)
  %134 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %63, i32 0, i32 0
  %135 = load i64, i64* %134, align 4
  %136 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %63, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = bitcast { i64, i32 }* %64 to i8*
  %139 = bitcast %struct.dim3* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 12, i1 false)
  %140 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %64, i32 0, i32 0
  %141 = load i64, i64* %140, align 4
  %142 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %64, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = call i32 @__cudaPushCallConfiguration(i64 %135, i32 %137, i64 %141, i32 %143, i64 %131, i8* null)
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %29
  %147 = load float*, float** %30, align 8
  %148 = load float*, float** %31, align 8
  %149 = load float*, float** %32, align 8
  %150 = load i32, i32* %33, align 4
  %151 = load i32, i32* %33, align 4
  %152 = load i32, i32* %34, align 4
  %153 = load i32, i32* %35, align 4
  %154 = load i32, i32* %36, align 4
  %155 = load i32, i32* %37, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %147, float* %148, float* %149, i32 %150, i32 %151, i32 %152, i32 %153, i32 %154, i32 %155)
  br label %156

156:                                              ; preds = %146, %29
  %157 = load i32, i32* %56, align 4
  %158 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %65, i32 %157, i32 %158, i32 1)
  %159 = load i32, i32* %53, align 4
  %160 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %66, i32 %159, i32 %160, i32 1)
  %161 = bitcast %struct.dim3* %67 to i8*
  %162 = bitcast %struct.dim3* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 12, i1 false)
  %163 = bitcast %struct.dim3* %68 to i8*
  %164 = bitcast %struct.dim3* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 12, i1 false)
  %165 = load i32, i32* %35, align 4
  %166 = load i32, i32* %35, align 4
  %167 = mul nsw i32 %165, %166
  %168 = load i32, i32* %36, align 4
  %169 = mul nsw i32 %167, %168
  %170 = load i32, i32* %34, align 4
  %171 = mul nsw i32 %169, %170
  %172 = sext i32 %171 to i64
  %173 = mul i64 %172, 4
  %174 = bitcast { i64, i32 }* %69 to i8*
  %175 = bitcast %struct.dim3* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 12, i1 false)
  %176 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 0
  %177 = load i64, i64* %176, align 4
  %178 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = bitcast { i64, i32 }* %70 to i8*
  %181 = bitcast %struct.dim3* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 12, i1 false)
  %182 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %70, i32 0, i32 0
  %183 = load i64, i64* %182, align 4
  %184 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %70, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = call i32 @__cudaPushCallConfiguration(i64 %177, i32 %179, i64 %183, i32 %185, i64 %173, i8* null)
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %156
  %189 = load float*, float** %38, align 8
  %190 = load float*, float** %39, align 8
  %191 = load float*, float** %40, align 8
  %192 = load i32, i32* %33, align 4
  %193 = load i32, i32* %33, align 4
  %194 = load i32, i32* %34, align 4
  %195 = load i32, i32* %35, align 4
  %196 = load i32, i32* %36, align 4
  %197 = load i32, i32* %37, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %189, float* %190, float* %191, i32 %192, i32 %193, i32 %194, i32 %195, i32 %196, i32 %197)
  br label %198

198:                                              ; preds = %188, %156
  %199 = load i32, i32* %56, align 4
  %200 = load i32, i32* %56, align 4
  %201 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %71, i32 %199, i32 %200, i32 %201)
  %202 = load i32, i32* %53, align 4
  %203 = sdiv i32 %202, 2
  %204 = load i32, i32* %53, align 4
  %205 = sdiv i32 %204, 2
  %206 = load i32, i32* %53, align 4
  %207 = sdiv i32 %206, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %72, i32 %203, i32 %205, i32 %207)
  %208 = bitcast %struct.dim3* %73 to i8*
  %209 = bitcast %struct.dim3* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %209, i64 12, i1 false)
  %210 = bitcast %struct.dim3* %74 to i8*
  %211 = bitcast %struct.dim3* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 12, i1 false)
  %212 = bitcast { i64, i32 }* %75 to i8*
  %213 = bitcast %struct.dim3* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 12, i1 false)
  %214 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %75, i32 0, i32 0
  %215 = load i64, i64* %214, align 4
  %216 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %75, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = bitcast { i64, i32 }* %76 to i8*
  %219 = bitcast %struct.dim3* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false)
  %220 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %76, i32 0, i32 0
  %221 = load i64, i64* %220, align 4
  %222 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %76, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = call i32 @__cudaPushCallConfiguration(i64 %215, i32 %217, i64 %221, i32 %223, i64 0, i8* null)
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %198
  %227 = load float*, float** %41, align 8
  %228 = load float*, float** %30, align 8
  %229 = load i32, i32* %33, align 4
  %230 = load i32, i32* %37, align 4
  %231 = sdiv i32 %229, %230
  %232 = load i32, i32* %33, align 4
  %233 = load i32, i32* %37, align 4
  %234 = sdiv i32 %232, %233
  %235 = load i32, i32* %36, align 4
  %236 = load i32, i32* %42, align 4
  %237 = load i32, i32* %42, align 4
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %227, float* %228, i32 %231, i32 %234, i32 %235, i32 %236, i32 %237)
  br label %238

238:                                              ; preds = %226, %198
  %239 = load i32, i32* %56, align 4
  %240 = load i32, i32* %56, align 4
  %241 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %77, i32 %239, i32 %240, i32 %241)
  %242 = load i32, i32* %53, align 4
  %243 = sdiv i32 %242, 2
  %244 = load i32, i32* %53, align 4
  %245 = sdiv i32 %244, 2
  %246 = load i32, i32* %53, align 4
  %247 = sdiv i32 %246, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %78, i32 %243, i32 %245, i32 %247)
  %248 = bitcast %struct.dim3* %79 to i8*
  %249 = bitcast %struct.dim3* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %249, i64 12, i1 false)
  %250 = bitcast %struct.dim3* %80 to i8*
  %251 = bitcast %struct.dim3* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %251, i64 12, i1 false)
  %252 = bitcast { i64, i32 }* %81 to i8*
  %253 = bitcast %struct.dim3* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 12, i1 false)
  %254 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %81, i32 0, i32 0
  %255 = load i64, i64* %254, align 4
  %256 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %81, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = bitcast { i64, i32 }* %82 to i8*
  %259 = bitcast %struct.dim3* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 12, i1 false)
  %260 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %82, i32 0, i32 0
  %261 = load i64, i64* %260, align 4
  %262 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %82, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = call i32 @__cudaPushCallConfiguration(i64 %255, i32 %257, i64 %261, i32 %263, i64 0, i8* null)
  %265 = icmp ne i32 %264, 0
  br i1 %265, label %278, label %266

266:                                              ; preds = %238
  %267 = load float*, float** %43, align 8
  %268 = load float*, float** %38, align 8
  %269 = load i32, i32* %33, align 4
  %270 = load i32, i32* %37, align 4
  %271 = sdiv i32 %269, %270
  %272 = load i32, i32* %33, align 4
  %273 = load i32, i32* %37, align 4
  %274 = sdiv i32 %272, %273
  %275 = load i32, i32* %36, align 4
  %276 = load i32, i32* %42, align 4
  %277 = load i32, i32* %42, align 4
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %267, float* %268, i32 %271, i32 %274, i32 %275, i32 %276, i32 %277)
  br label %278

278:                                              ; preds = %266, %238
  %279 = load i32, i32* %56, align 4
  %280 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %83, i32 %279, i32 %280, i32 1)
  %281 = load i32, i32* %53, align 4
  %282 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %84, i32 %281, i32 %282, i32 1)
  %283 = bitcast %struct.dim3* %85 to i8*
  %284 = bitcast %struct.dim3* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* align 4 %284, i64 12, i1 false)
  %285 = bitcast %struct.dim3* %86 to i8*
  %286 = bitcast %struct.dim3* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %285, i8* align 4 %286, i64 12, i1 false)
  %287 = load i32, i32* %35, align 4
  %288 = load i32, i32* %35, align 4
  %289 = mul nsw i32 %287, %288
  %290 = load i32, i32* %36, align 4
  %291 = mul nsw i32 %289, %290
  %292 = load i32, i32* %46, align 4
  %293 = mul nsw i32 %291, %292
  %294 = sext i32 %293 to i64
  %295 = mul i64 %294, 4
  %296 = bitcast { i64, i32 }* %87 to i8*
  %297 = bitcast %struct.dim3* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %296, i8* align 4 %297, i64 12, i1 false)
  %298 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %87, i32 0, i32 0
  %299 = load i64, i64* %298, align 4
  %300 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %87, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = bitcast { i64, i32 }* %88 to i8*
  %303 = bitcast %struct.dim3* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 12, i1 false)
  %304 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %88, i32 0, i32 0
  %305 = load i64, i64* %304, align 4
  %306 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %88, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = call i32 @__cudaPushCallConfiguration(i64 %299, i32 %301, i64 %305, i32 %307, i64 %295, i8* null)
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %328, label %310

310:                                              ; preds = %278
  %311 = load float*, float** %44, align 8
  %312 = load float*, float** %41, align 8
  %313 = load float*, float** %45, align 8
  %314 = load i32, i32* %33, align 4
  %315 = load i32, i32* %37, align 4
  %316 = sdiv i32 %314, %315
  %317 = load i32, i32* %42, align 4
  %318 = sdiv i32 %316, %317
  %319 = load i32, i32* %33, align 4
  %320 = load i32, i32* %37, align 4
  %321 = sdiv i32 %319, %320
  %322 = load i32, i32* %42, align 4
  %323 = sdiv i32 %321, %322
  %324 = load i32, i32* %36, align 4
  %325 = load i32, i32* %35, align 4
  %326 = load i32, i32* %46, align 4
  %327 = load i32, i32* %37, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %311, float* %312, float* %313, i32 %318, i32 %323, i32 %324, i32 %325, i32 %326, i32 %327)
  br label %328

328:                                              ; preds = %310, %278
  %329 = load i32, i32* %56, align 4
  %330 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %89, i32 %329, i32 %330, i32 1)
  %331 = load i32, i32* %53, align 4
  %332 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %90, i32 %331, i32 %332, i32 1)
  %333 = bitcast %struct.dim3* %91 to i8*
  %334 = bitcast %struct.dim3* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %333, i8* align 4 %334, i64 12, i1 false)
  %335 = bitcast %struct.dim3* %92 to i8*
  %336 = bitcast %struct.dim3* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 12, i1 false)
  %337 = load i32, i32* %35, align 4
  %338 = load i32, i32* %35, align 4
  %339 = mul nsw i32 %337, %338
  %340 = load i32, i32* %36, align 4
  %341 = mul nsw i32 %339, %340
  %342 = load i32, i32* %46, align 4
  %343 = mul nsw i32 %341, %342
  %344 = sext i32 %343 to i64
  %345 = mul i64 %344, 4
  %346 = bitcast { i64, i32 }* %93 to i8*
  %347 = bitcast %struct.dim3* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %346, i8* align 4 %347, i64 12, i1 false)
  %348 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %93, i32 0, i32 0
  %349 = load i64, i64* %348, align 4
  %350 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %93, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = bitcast { i64, i32 }* %94 to i8*
  %353 = bitcast %struct.dim3* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %352, i8* align 4 %353, i64 12, i1 false)
  %354 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %94, i32 0, i32 0
  %355 = load i64, i64* %354, align 4
  %356 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %94, i32 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = call i32 @__cudaPushCallConfiguration(i64 %349, i32 %351, i64 %355, i32 %357, i64 %345, i8* null)
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %378, label %360

360:                                              ; preds = %328
  %361 = load float*, float** %47, align 8
  %362 = load float*, float** %43, align 8
  %363 = load float*, float** %48, align 8
  %364 = load i32, i32* %33, align 4
  %365 = load i32, i32* %37, align 4
  %366 = sdiv i32 %364, %365
  %367 = load i32, i32* %42, align 4
  %368 = sdiv i32 %366, %367
  %369 = load i32, i32* %33, align 4
  %370 = load i32, i32* %37, align 4
  %371 = sdiv i32 %369, %370
  %372 = load i32, i32* %42, align 4
  %373 = sdiv i32 %371, %372
  %374 = load i32, i32* %36, align 4
  %375 = load i32, i32* %35, align 4
  %376 = load i32, i32* %46, align 4
  %377 = load i32, i32* %37, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %361, float* %362, float* %363, i32 %368, i32 %373, i32 %374, i32 %375, i32 %376, i32 %377)
  br label %378

378:                                              ; preds = %360, %328
  %379 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %95, i32 %379, i32 1, i32 1)
  %380 = load i32, i32* %55, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %96, i32 %380, i32 1, i32 1)
  %381 = bitcast { i64, i32 }* %97 to i8*
  %382 = bitcast %struct.dim3* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %382, i64 12, i1 false)
  %383 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 0
  %384 = load i64, i64* %383, align 4
  %385 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %97, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = bitcast { i64, i32 }* %98 to i8*
  %388 = bitcast %struct.dim3* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* align 4 %388, i64 12, i1 false)
  %389 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %98, i32 0, i32 0
  %390 = load i64, i64* %389, align 4
  %391 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %98, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = call i32 @__cudaPushCallConfiguration(i64 %384, i32 %386, i64 %390, i32 %392, i64 0, i8* null)
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %400, label %395

395:                                              ; preds = %378
  %396 = load float*, float** %49, align 8
  %397 = load float*, float** %44, align 8
  %398 = load float*, float** %47, align 8
  %399 = load i32, i32* %50, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %396, float* %397, float* %398, i32 %399)
  br label %400

400:                                              ; preds = %395, %378
  %401 = load i32, i32* %54, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %99, i32 %401, i32 1, i32 1)
  %402 = load i32, i32* %55, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %100, i32 %402, i32 1, i32 1)
  %403 = bitcast { i64, i32 }* %101 to i8*
  %404 = bitcast %struct.dim3* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 12, i1 false)
  %405 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %101, i32 0, i32 0
  %406 = load i64, i64* %405, align 4
  %407 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %101, i32 0, i32 1
  %408 = load i32, i32* %407, align 4
  %409 = bitcast { i64, i32 }* %102 to i8*
  %410 = bitcast %struct.dim3* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 %410, i64 12, i1 false)
  %411 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %102, i32 0, i32 0
  %412 = load i64, i64* %411, align 4
  %413 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %102, i32 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = call i32 @__cudaPushCallConfiguration(i64 %406, i32 %408, i64 %412, i32 %414, i64 0, i8* null)
  %416 = icmp ne i32 %415, 0
  br i1 %416, label %422, label %417

417:                                              ; preds = %400
  %418 = load float*, float** %51, align 8
  %419 = load float*, float** %49, align 8
  %420 = load float*, float** %52, align 8
  %421 = load i32, i32* %50, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %418, float* %419, float* %420, i32 %421)
  br label %422

422:                                              ; preds = %417, %400
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1016execute_AssOfKFCEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %6 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %7 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %6, i32 0, i32 8
  %8 = load i8, i8* %7, align 4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %84

10:                                               ; preds = %2
  %11 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %12 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %11, i32 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %84

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 8
  %17 = load float*, float** %16, align 8
  %18 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 7
  %19 = load float*, float** %18, align 8
  %20 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 15
  %21 = load float*, float** %20, align 8
  %22 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %23 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 12
  %34 = load float*, float** %33, align 8
  %35 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 11
  %36 = load float*, float** %35, align 8
  %37 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 17
  %38 = load float*, float** %37, align 8
  %39 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 22
  %40 = load float*, float** %39, align 8
  %41 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 23
  %44 = load float*, float** %43, align 8
  %45 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 9
  %46 = load float*, float** %45, align 8
  %47 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 16
  %48 = load float*, float** %47, align 8
  %49 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 13
  %52 = load float*, float** %51, align 8
  %53 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 18
  %54 = load float*, float** %53, align 8
  %55 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 19
  %56 = load float*, float** %55, align 8
  %57 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 29
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 21
  %60 = load float*, float** %59, align 8
  %61 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 20
  %62 = load float*, float** %61, align 8
  %63 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %67 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %66, i32 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %70 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %69, i32 0, i32 4
  %71 = load i32, i32* %70, align 4
  %72 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %73 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %72, i32 0, i32 6
  %74 = load i32, i32* %73, align 4
  %75 = sdiv i32 %74, 2
  %76 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 26
  %77 = load i32, i32* %76, align 8
  %78 = sext i32 %77 to i64
  %79 = mul i64 4, %78
  %80 = trunc i64 %79 to i32
  %81 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %82 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %81, i32 0, i32 15
  %83 = load i32, i32* %82, align 8
  call void @_Z16FUNCb10_prefetchPfS_S_iiiiiS_S_S_S_iS_S_S_iS_S_S_iS_S_iiiiii(float* %17, float* %19, float* %21, i32 %24, i32 %26, i32 %28, i32 %30, i32 %32, float* %34, float* %36, float* %38, float* %40, i32 %42, float* %44, float* %46, float* %48, i32 %50, float* %52, float* %54, float* %56, i32 %58, float* %60, float* %62, i32 %65, i32 %68, i32 %71, i32 %75, i32 %80, i32 %83)
  br label %145

84:                                               ; preds = %10, %2
  %85 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 8
  %86 = load float*, float** %85, align 8
  %87 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 7
  %88 = load float*, float** %87, align 8
  %89 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 15
  %90 = load float*, float** %89, align 8
  %91 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %92 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 4
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 12
  %103 = load float*, float** %102, align 8
  %104 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 11
  %105 = load float*, float** %104, align 8
  %106 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 17
  %107 = load float*, float** %106, align 8
  %108 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 22
  %109 = load float*, float** %108, align 8
  %110 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 6
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 23
  %113 = load float*, float** %112, align 8
  %114 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 9
  %115 = load float*, float** %114, align 8
  %116 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 16
  %117 = load float*, float** %116, align 8
  %118 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 5
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 13
  %121 = load float*, float** %120, align 8
  %122 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 18
  %123 = load float*, float** %122, align 8
  %124 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 19
  %125 = load float*, float** %124, align 8
  %126 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 29
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 21
  %129 = load float*, float** %128, align 8
  %130 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 20
  %131 = load float*, float** %130, align 8
  %132 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %133 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %132, i32 0, i32 5
  %134 = load i32, i32* %133, align 8
  %135 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %136 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %135, i32 0, i32 6
  %137 = load i32, i32* %136, align 4
  %138 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %139 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %138, i32 0, i32 4
  %140 = load i32, i32* %139, align 4
  %141 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  %142 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %141, i32 0, i32 6
  %143 = load i32, i32* %142, align 4
  %144 = sdiv i32 %143, 2
  call void @_Z7FUNCb10PfS_S_iiiiiS_S_S_S_iS_S_S_iS_S_S_iS_S_iiii(float* %86, float* %88, float* %90, i32 %93, i32 %95, i32 %97, i32 %99, i32 %101, float* %103, float* %105, float* %107, float* %109, i32 %111, float* %113, float* %115, float* %117, i32 %119, float* %121, float* %123, float* %125, i32 %127, float* %129, float* %131, i32 %134, i32 %137, i32 %140, i32 %144)
  br label %145

145:                                              ; preds = %84, %15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1013execute_asyncEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca %struct.dim3, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca { i64, i32 }, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca %struct.CUevent_st*, align 8
  %35 = alloca %struct.dim3, align 4
  %36 = alloca %struct.dim3, align 4
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca { i64, i32 }, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca %struct.dim3, align 4
  %41 = alloca { i64, i32 }, align 4
  %42 = alloca { i64, i32 }, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %43 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %44 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %45 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %44, i32 0, i32 11
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %2
  %49 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 9
  %51 = load i8, i8* %50, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %53, label %107

53:                                               ; preds = %48, %2
  %54 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %55 = load %struct.CUstream_st*, %struct.CUstream_st** %54, align 8
  %56 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 7
  %57 = load float*, float** %56, align 8
  %58 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 26
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = mul i64 4, %60
  %62 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %55, float* %57, i64 %61, i32 4)
  %63 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %64 = load %struct.CUstream_st*, %struct.CUstream_st** %63, align 8
  %65 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 8
  %66 = load float*, float** %65, align 8
  %67 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %64, float* %66, i64 0, i32 4)
  %68 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %69 = load %struct.CUstream_st*, %struct.CUstream_st** %68, align 8
  %70 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 9
  %71 = load float*, float** %70, align 8
  %72 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %69, float* %71, i64 0, i32 4)
  %73 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %74 = load %struct.CUstream_st*, %struct.CUstream_st** %73, align 8
  %75 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 15
  %76 = load float*, float** %75, align 8
  %77 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %74, float* %76, i64 0, i32 4)
  %78 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %79 = load %struct.CUstream_st*, %struct.CUstream_st** %78, align 8
  %80 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 16
  %81 = load float*, float** %80, align 8
  %82 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %79, float* %81, i64 0, i32 4)
  %83 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %84 = load %struct.CUstream_st*, %struct.CUstream_st** %83, align 8
  %85 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 11
  %86 = load float*, float** %85, align 8
  %87 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 26
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = mul i64 4, %89
  %91 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %84, float* %86, i64 %90, i32 4)
  %92 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %93 = load %struct.CUstream_st*, %struct.CUstream_st** %92, align 8
  %94 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 12
  %95 = load float*, float** %94, align 8
  %96 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %93, float* %95, i64 0, i32 4)
  %97 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %98 = load %struct.CUstream_st*, %struct.CUstream_st** %97, align 8
  %99 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 17
  %100 = load float*, float** %99, align 8
  %101 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %98, float* %100, i64 0, i32 4)
  %102 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %103 = load %struct.CUstream_st*, %struct.CUstream_st** %102, align 8
  %104 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 18
  %105 = load float*, float** %104, align 8
  %106 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %103, float* %105, i64 0, i32 4)
  br label %107

107:                                              ; preds = %53, %48
  %108 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %109 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %108, i32 0, i32 8
  %110 = load i8, i8* %109, align 4
  %111 = trunc i8 %110 to i1
  br i1 %111, label %112, label %140

112:                                              ; preds = %107
  %113 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %114 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %113, i32 0, i32 11
  %115 = load i32, i32* %114, align 8
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %140

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 7
  %119 = load float*, float** %118, align 8
  %120 = bitcast float* %119 to i8*
  %121 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 26
  %122 = load i32, i32* %121, align 8
  %123 = sext i32 %122 to i64
  %124 = mul i64 4, %123
  %125 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %126 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %125, i32 0, i32 15
  %127 = load i32, i32* %126, align 8
  %128 = call i32 @cudaMemPrefetchAsync(i8* %120, i64 %124, i32 %127, %struct.CUstream_st* null)
  %129 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 11
  %130 = load float*, float** %129, align 8
  %131 = bitcast float* %130 to i8*
  %132 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 26
  %133 = load i32, i32* %132, align 8
  %134 = sext i32 %133 to i64
  %135 = mul i64 4, %134
  %136 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %137 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %136, i32 0, i32 15
  %138 = load i32, i32* %137, align 8
  %139 = call i32 @cudaMemPrefetchAsync(i8* %131, i64 %135, i32 %138, %struct.CUstream_st* null)
  br label %140

140:                                              ; preds = %117, %112, %107
  %141 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %142 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %141, i32 0, i32 5
  %143 = load i32, i32* %142, align 8
  %144 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %145 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %144, i32 0, i32 5
  %146 = load i32, i32* %145, align 8
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %143, i32 %146, i32 1)
  %147 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %148 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %147, i32 0, i32 6
  %149 = load i32, i32* %148, align 4
  %150 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %151 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %150, i32 0, i32 6
  %152 = load i32, i32* %151, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %149, i32 %152, i32 1)
  %153 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %154 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %153, i32 0, i32 6
  %155 = load i32, i32* %154, align 4
  %156 = sdiv i32 %155, 2
  %157 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %158 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %157, i32 0, i32 6
  %159 = load i32, i32* %158, align 4
  %160 = sdiv i32 %159, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %156, i32 %160, i32 1)
  %161 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %162 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %161, i32 0, i32 5
  %163 = load i32, i32* %162, align 8
  %164 = sdiv i32 %163, 2
  %165 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %166 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %165, i32 0, i32 5
  %167 = load i32, i32* %166, align 8
  %168 = sdiv i32 %167, 2
  %169 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %170 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %169, i32 0, i32 5
  %171 = load i32, i32* %170, align 8
  %172 = sdiv i32 %171, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %8, i32 %164, i32 %168, i32 %172)
  %173 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %174 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %173, i32 0, i32 6
  %175 = load i32, i32* %174, align 4
  %176 = sdiv i32 %175, 2
  %177 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %178 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %177, i32 0, i32 6
  %179 = load i32, i32* %178, align 4
  %180 = sdiv i32 %179, 2
  %181 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %182 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %181, i32 0, i32 6
  %183 = load i32, i32* %182, align 4
  %184 = sdiv i32 %183, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %176, i32 %180, i32 %184)
  %185 = bitcast %struct.dim3* %10 to i8*
  %186 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %186, i64 12, i1 false)
  %187 = bitcast %struct.dim3* %11 to i8*
  %188 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 12, i1 false)
  %189 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = mul nsw i32 %190, %192
  %194 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %195 = load i32, i32* %194, align 8
  %196 = mul nsw i32 %193, %195
  %197 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 2
  %198 = load i32, i32* %197, align 8
  %199 = mul nsw i32 %196, %198
  %200 = sext i32 %199 to i64
  %201 = mul i64 %200, 4
  %202 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %203 = load %struct.CUstream_st*, %struct.CUstream_st** %202, align 8
  %204 = bitcast %struct.CUstream_st* %203 to i8*
  %205 = bitcast { i64, i32 }* %12 to i8*
  %206 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 12, i1 false)
  %207 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %208 = load i64, i64* %207, align 4
  %209 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = bitcast { i64, i32 }* %13 to i8*
  %212 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 12, i1 false)
  %213 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %214 = load i64, i64* %213, align 4
  %215 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = call i32 @__cudaPushCallConfiguration(i64 %208, i32 %210, i64 %214, i32 %216, i64 %201, i8* %204)
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %240, label %219

219:                                              ; preds = %140
  %220 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 8
  %221 = load float*, float** %220, align 8
  %222 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 7
  %223 = load float*, float** %222, align 8
  %224 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 15
  %225 = load float*, float** %224, align 8
  %226 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %227 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %230 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %229, i32 0, i32 3
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %239 = load i32, i32* %238, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %221, float* %223, float* %225, i32 %228, i32 %231, i32 %233, i32 %235, i32 %237, i32 %239)
  br label %240

240:                                              ; preds = %219, %140
  %241 = bitcast %struct.dim3* %14 to i8*
  %242 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %242, i64 12, i1 false)
  %243 = bitcast %struct.dim3* %15 to i8*
  %244 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %243, i8* align 4 %244, i64 12, i1 false)
  %245 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = mul nsw i32 %246, %248
  %250 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %251 = load i32, i32* %250, align 8
  %252 = mul nsw i32 %249, %251
  %253 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 2
  %254 = load i32, i32* %253, align 8
  %255 = mul nsw i32 %252, %254
  %256 = sext i32 %255 to i64
  %257 = mul i64 %256, 4
  %258 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %259 = load %struct.CUstream_st*, %struct.CUstream_st** %258, align 8
  %260 = bitcast %struct.CUstream_st* %259 to i8*
  %261 = bitcast { i64, i32 }* %16 to i8*
  %262 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* align 4 %262, i64 12, i1 false)
  %263 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %264 = load i64, i64* %263, align 4
  %265 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = bitcast { i64, i32 }* %17 to i8*
  %268 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* align 4 %268, i64 12, i1 false)
  %269 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %270 = load i64, i64* %269, align 4
  %271 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = call i32 @__cudaPushCallConfiguration(i64 %264, i32 %266, i64 %270, i32 %272, i64 %257, i8* %260)
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %296, label %275

275:                                              ; preds = %240
  %276 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 12
  %277 = load float*, float** %276, align 8
  %278 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 11
  %279 = load float*, float** %278, align 8
  %280 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 17
  %281 = load float*, float** %280, align 8
  %282 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %283 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %282, i32 0, i32 3
  %284 = load i32, i32* %283, align 8
  %285 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %286 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %285, i32 0, i32 3
  %287 = load i32, i32* %286, align 8
  %288 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 2
  %289 = load i32, i32* %288, align 8
  %290 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %293 = load i32, i32* %292, align 8
  %294 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %295 = load i32, i32* %294, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %277, float* %279, float* %281, i32 %284, i32 %287, i32 %289, i32 %291, i32 %293, i32 %295)
  br label %296

296:                                              ; preds = %275, %240
  %297 = bitcast %struct.dim3* %18 to i8*
  %298 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %297, i8* align 4 %298, i64 12, i1 false)
  %299 = bitcast %struct.dim3* %19 to i8*
  %300 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 12, i1 false)
  %301 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %302 = load %struct.CUstream_st*, %struct.CUstream_st** %301, align 8
  %303 = bitcast %struct.CUstream_st* %302 to i8*
  %304 = bitcast { i64, i32 }* %20 to i8*
  %305 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %304, i8* align 4 %305, i64 12, i1 false)
  %306 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %307 = load i64, i64* %306, align 4
  %308 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = bitcast { i64, i32 }* %21 to i8*
  %311 = bitcast %struct.dim3* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 12, i1 false)
  %312 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %313 = load i64, i64* %312, align 4
  %314 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = call i32 @__cudaPushCallConfiguration(i64 %307, i32 %309, i64 %313, i32 %315, i64 0, i8* %303)
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %341, label %318

318:                                              ; preds = %296
  %319 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 22
  %320 = load float*, float** %319, align 8
  %321 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 8
  %322 = load float*, float** %321, align 8
  %323 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %324 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %323, i32 0, i32 3
  %325 = load i32, i32* %324, align 8
  %326 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = sdiv i32 %325, %327
  %329 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %330 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %329, i32 0, i32 3
  %331 = load i32, i32* %330, align 8
  %332 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = sdiv i32 %331, %333
  %335 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %336 = load i32, i32* %335, align 8
  %337 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %338 = load i32, i32* %337, align 8
  %339 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %340 = load i32, i32* %339, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %320, float* %322, i32 %328, i32 %334, i32 %336, i32 %338, i32 %340)
  br label %341

341:                                              ; preds = %318, %296
  %342 = bitcast %struct.dim3* %22 to i8*
  %343 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %342, i8* align 4 %343, i64 12, i1 false)
  %344 = bitcast %struct.dim3* %23 to i8*
  %345 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* align 4 %345, i64 12, i1 false)
  %346 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %347 = load %struct.CUstream_st*, %struct.CUstream_st** %346, align 8
  %348 = bitcast %struct.CUstream_st* %347 to i8*
  %349 = bitcast { i64, i32 }* %24 to i8*
  %350 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %350, i64 12, i1 false)
  %351 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %352 = load i64, i64* %351, align 4
  %353 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = bitcast { i64, i32 }* %25 to i8*
  %356 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %355, i8* align 4 %356, i64 12, i1 false)
  %357 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %358 = load i64, i64* %357, align 4
  %359 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = call i32 @__cudaPushCallConfiguration(i64 %352, i32 %354, i64 %358, i32 %360, i64 0, i8* %348)
  %362 = icmp ne i32 %361, 0
  br i1 %362, label %386, label %363

363:                                              ; preds = %341
  %364 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 23
  %365 = load float*, float** %364, align 8
  %366 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 12
  %367 = load float*, float** %366, align 8
  %368 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %369 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %368, i32 0, i32 3
  %370 = load i32, i32* %369, align 8
  %371 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  %373 = sdiv i32 %370, %372
  %374 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %375 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %374, i32 0, i32 3
  %376 = load i32, i32* %375, align 8
  %377 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = sdiv i32 %376, %378
  %380 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %381 = load i32, i32* %380, align 8
  %382 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %383 = load i32, i32* %382, align 8
  %384 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %385 = load i32, i32* %384, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %365, float* %367, i32 %373, i32 %379, i32 %381, i32 %383, i32 %385)
  br label %386

386:                                              ; preds = %363, %341
  %387 = bitcast %struct.dim3* %26 to i8*
  %388 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* align 4 %388, i64 12, i1 false)
  %389 = bitcast %struct.dim3* %27 to i8*
  %390 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %389, i8* align 4 %390, i64 12, i1 false)
  %391 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = mul nsw i32 %392, %394
  %396 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %397 = load i32, i32* %396, align 8
  %398 = mul nsw i32 %395, %397
  %399 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 5
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %398, %400
  %402 = sext i32 %401 to i64
  %403 = mul i64 %402, 4
  %404 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %405 = load %struct.CUstream_st*, %struct.CUstream_st** %404, align 8
  %406 = bitcast %struct.CUstream_st* %405 to i8*
  %407 = bitcast { i64, i32 }* %28 to i8*
  %408 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %407, i8* align 4 %408, i64 12, i1 false)
  %409 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %410 = load i64, i64* %409, align 4
  %411 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %412 = load i32, i32* %411, align 4
  %413 = bitcast { i64, i32 }* %29 to i8*
  %414 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %413, i8* align 4 %414, i64 12, i1 false)
  %415 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %416 = load i64, i64* %415, align 4
  %417 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = call i32 @__cudaPushCallConfiguration(i64 %410, i32 %412, i64 %416, i32 %418, i64 %403, i8* %406)
  %420 = icmp ne i32 %419, 0
  br i1 %420, label %454, label %421

421:                                              ; preds = %386
  %422 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 9
  %423 = load float*, float** %422, align 8
  %424 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 22
  %425 = load float*, float** %424, align 8
  %426 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 16
  %427 = load float*, float** %426, align 8
  %428 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %429 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %428, i32 0, i32 3
  %430 = load i32, i32* %429, align 8
  %431 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %432 = load i32, i32* %431, align 4
  %433 = sdiv i32 %430, %432
  %434 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %435 = load i32, i32* %434, align 8
  %436 = sdiv i32 %433, %435
  %437 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %438 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %437, i32 0, i32 3
  %439 = load i32, i32* %438, align 8
  %440 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %441 = load i32, i32* %440, align 4
  %442 = sdiv i32 %439, %441
  %443 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %444 = load i32, i32* %443, align 8
  %445 = sdiv i32 %442, %444
  %446 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %447 = load i32, i32* %446, align 8
  %448 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 5
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %453 = load i32, i32* %452, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %423, float* %425, float* %427, i32 %436, i32 %445, i32 %447, i32 %449, i32 %451, i32 %453)
  br label %454

454:                                              ; preds = %421, %386
  %455 = bitcast %struct.dim3* %30 to i8*
  %456 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %455, i8* align 4 %456, i64 12, i1 false)
  %457 = bitcast %struct.dim3* %31 to i8*
  %458 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %457, i8* align 4 %458, i64 12, i1 false)
  %459 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %462 = load i32, i32* %461, align 4
  %463 = mul nsw i32 %460, %462
  %464 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %465 = load i32, i32* %464, align 8
  %466 = mul nsw i32 %463, %465
  %467 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 5
  %468 = load i32, i32* %467, align 4
  %469 = mul nsw i32 %466, %468
  %470 = sext i32 %469 to i64
  %471 = mul i64 %470, 4
  %472 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %473 = load %struct.CUstream_st*, %struct.CUstream_st** %472, align 8
  %474 = bitcast %struct.CUstream_st* %473 to i8*
  %475 = bitcast { i64, i32 }* %32 to i8*
  %476 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %475, i8* align 4 %476, i64 12, i1 false)
  %477 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %478 = load i64, i64* %477, align 4
  %479 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %480 = load i32, i32* %479, align 4
  %481 = bitcast { i64, i32 }* %33 to i8*
  %482 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %481, i8* align 4 %482, i64 12, i1 false)
  %483 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %484 = load i64, i64* %483, align 4
  %485 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = call i32 @__cudaPushCallConfiguration(i64 %478, i32 %480, i64 %484, i32 %486, i64 %471, i8* %474)
  %488 = icmp ne i32 %487, 0
  br i1 %488, label %522, label %489

489:                                              ; preds = %454
  %490 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 13
  %491 = load float*, float** %490, align 8
  %492 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 23
  %493 = load float*, float** %492, align 8
  %494 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 18
  %495 = load float*, float** %494, align 8
  %496 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %497 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %496, i32 0, i32 3
  %498 = load i32, i32* %497, align 8
  %499 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %500 = load i32, i32* %499, align 4
  %501 = sdiv i32 %498, %500
  %502 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %503 = load i32, i32* %502, align 8
  %504 = sdiv i32 %501, %503
  %505 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %506 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %505, i32 0, i32 3
  %507 = load i32, i32* %506, align 8
  %508 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %509 = load i32, i32* %508, align 4
  %510 = sdiv i32 %507, %509
  %511 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 6
  %512 = load i32, i32* %511, align 8
  %513 = sdiv i32 %510, %512
  %514 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 4
  %515 = load i32, i32* %514, align 8
  %516 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 1
  %517 = load i32, i32* %516, align 4
  %518 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 5
  %519 = load i32, i32* %518, align 4
  %520 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 3
  %521 = load i32, i32* %520, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %491, float* %493, float* %495, i32 %504, i32 %513, i32 %515, i32 %517, i32 %519, i32 %521)
  br label %522

522:                                              ; preds = %489, %454
  %523 = call i32 @cudaEventCreate(%struct.CUevent_st** %34)
  %524 = load %struct.CUevent_st*, %struct.CUevent_st** %34, align 8
  %525 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 35
  %526 = load %struct.CUstream_st*, %struct.CUstream_st** %525, align 8
  %527 = call i32 @cudaEventRecord(%struct.CUevent_st* %524, %struct.CUstream_st* %526)
  %528 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %529 = load %struct.CUstream_st*, %struct.CUstream_st** %528, align 8
  %530 = load %struct.CUevent_st*, %struct.CUevent_st** %34, align 8
  %531 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %529, %struct.CUevent_st* %530, i32 0)
  %532 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %533 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %532, i32 0, i32 6
  %534 = load i32, i32* %533, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %35, i32 %534, i32 1, i32 1)
  %535 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %536 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %535, i32 0, i32 4
  %537 = load i32, i32* %536, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %36, i32 %537, i32 1, i32 1)
  %538 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %539 = load %struct.CUstream_st*, %struct.CUstream_st** %538, align 8
  %540 = bitcast %struct.CUstream_st* %539 to i8*
  %541 = bitcast { i64, i32 }* %37 to i8*
  %542 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %541, i8* align 4 %542, i64 12, i1 false)
  %543 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %544 = load i64, i64* %543, align 4
  %545 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %546 = load i32, i32* %545, align 4
  %547 = bitcast { i64, i32 }* %38 to i8*
  %548 = bitcast %struct.dim3* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %547, i8* align 4 %548, i64 12, i1 false)
  %549 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 0
  %550 = load i64, i64* %549, align 4
  %551 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 1
  %552 = load i32, i32* %551, align 4
  %553 = call i32 @__cudaPushCallConfiguration(i64 %544, i32 %546, i64 %550, i32 %552, i64 0, i8* %540)
  %554 = icmp ne i32 %553, 0
  br i1 %554, label %564, label %555

555:                                              ; preds = %522
  %556 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 19
  %557 = load float*, float** %556, align 8
  %558 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 9
  %559 = load float*, float** %558, align 8
  %560 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 13
  %561 = load float*, float** %560, align 8
  %562 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 29
  %563 = load i32, i32* %562, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %557, float* %559, float* %561, i32 %563)
  br label %564

564:                                              ; preds = %555, %522
  %565 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %566 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %565, i32 0, i32 6
  %567 = load i32, i32* %566, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %39, i32 %567, i32 1, i32 1)
  %568 = bitcast %class.Benchmark10* %43 to %struct.Benchmark*
  %569 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %568, i32 0, i32 4
  %570 = load i32, i32* %569, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %40, i32 %570, i32 1, i32 1)
  %571 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %572 = load %struct.CUstream_st*, %struct.CUstream_st** %571, align 8
  %573 = bitcast %struct.CUstream_st* %572 to i8*
  %574 = bitcast { i64, i32 }* %41 to i8*
  %575 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %574, i8* align 4 %575, i64 12, i1 false)
  %576 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %577 = load i64, i64* %576, align 4
  %578 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %579 = load i32, i32* %578, align 4
  %580 = bitcast { i64, i32 }* %42 to i8*
  %581 = bitcast %struct.dim3* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %580, i8* align 4 %581, i64 12, i1 false)
  %582 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 0
  %583 = load i64, i64* %582, align 4
  %584 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = call i32 @__cudaPushCallConfiguration(i64 %577, i32 %579, i64 %583, i32 %585, i64 0, i8* %573)
  %587 = icmp ne i32 %586, 0
  br i1 %587, label %597, label %588

588:                                              ; preds = %564
  %589 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 21
  %590 = load float*, float** %589, align 8
  %591 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 19
  %592 = load float*, float** %591, align 8
  %593 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 20
  %594 = load float*, float** %593, align 8
  %595 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 29
  %596 = load i32, i32* %595, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %590, float* %592, float* %594, i32 %596)
  br label %597

597:                                              ; preds = %588, %564
  %598 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %43, i32 0, i32 34
  %599 = load %struct.CUstream_st*, %struct.CUstream_st** %598, align 8
  %600 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %599)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %0, float* %1, i64 %2, i32 %3) #6 {
  %5 = alloca %struct.CUstream_st*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.CUstream_st* %0, %struct.CUstream_st** %5, align 8
  store float* %1, float** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.CUstream_st*, %struct.CUstream_st** %5, align 8
  %10 = load float*, float** %6, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load i64, i64* %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = call i32 @cudaStreamAttachMemAsync(%struct.CUstream_st* %9, i8* %11, i64 %12, i32 %13)
  ret i32 %14
}

declare dso_local i32 @cudaEventCreate(%struct.CUevent_st**) #1

declare dso_local i32 @cudaEventRecord(%struct.CUevent_st*, %struct.CUstream_st*) #1

declare dso_local i32 @cudaStreamWaitEvent(%struct.CUstream_st*, %struct.CUevent_st*, i32) #1

declare dso_local i32 @cudaStreamSynchronize(%struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1017execute_cudagraphEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.CUevent_st*, align 8
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca %struct.dim3, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca %struct.dim3, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca { i64, i32 }, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca %struct.dim3, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca { i64, i32 }, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca %struct.dim3, align 4
  %21 = alloca { i64, i32 }, align 4
  %22 = alloca { i64, i32 }, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca %struct.dim3, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca { i64, i32 }, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca %struct.dim3, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca { i64, i32 }, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca %struct.dim3, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca { i64, i32 }, align 4
  %35 = alloca %struct.CUevent_st*, align 8
  %36 = alloca %struct.dim3, align 4
  %37 = alloca %struct.dim3, align 4
  %38 = alloca { i64, i32 }, align 4
  %39 = alloca { i64, i32 }, align 4
  %40 = alloca %struct.dim3, align 4
  %41 = alloca %struct.dim3, align 4
  %42 = alloca { i64, i32 }, align 4
  %43 = alloca { i64, i32 }, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %44 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %45 = load i32, i32* %4, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %525

47:                                               ; preds = %2
  %48 = call i32 @cudaEventCreate(%struct.CUevent_st** %5)
  %49 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %50 = load %struct.CUstream_st*, %struct.CUstream_st** %49, align 8
  %51 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %50, i32 0)
  %52 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %53 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %54 = load %struct.CUstream_st*, %struct.CUstream_st** %53, align 8
  %55 = call i32 @cudaEventRecord(%struct.CUevent_st* %52, %struct.CUstream_st* %54)
  %56 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 35
  %57 = load %struct.CUstream_st*, %struct.CUstream_st** %56, align 8
  %58 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %59 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %57, %struct.CUevent_st* %58, i32 0)
  %60 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %61 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %60, i32 0, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 5
  %65 = load i32, i32* %64, align 8
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %62, i32 %65, i32 1)
  %66 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %67 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %66, i32 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %70 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %69, i32 0, i32 6
  %71 = load i32, i32* %70, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %68, i32 %71, i32 1)
  %72 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %73 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %72, i32 0, i32 6
  %74 = load i32, i32* %73, align 4
  %75 = sdiv i32 %74, 2
  %76 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %77 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %76, i32 0, i32 6
  %78 = load i32, i32* %77, align 4
  %79 = sdiv i32 %78, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %8, i32 %75, i32 %79, i32 1)
  %80 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %81 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %80, i32 0, i32 5
  %82 = load i32, i32* %81, align 8
  %83 = sdiv i32 %82, 2
  %84 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %85 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %84, i32 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = sdiv i32 %86, 2
  %88 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %89 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %88, i32 0, i32 5
  %90 = load i32, i32* %89, align 8
  %91 = sdiv i32 %90, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %83, i32 %87, i32 %91)
  %92 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %93 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %92, i32 0, i32 6
  %94 = load i32, i32* %93, align 4
  %95 = sdiv i32 %94, 2
  %96 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %97 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %96, i32 0, i32 6
  %98 = load i32, i32* %97, align 4
  %99 = sdiv i32 %98, 2
  %100 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %101 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %100, i32 0, i32 6
  %102 = load i32, i32* %101, align 4
  %103 = sdiv i32 %102, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %95, i32 %99, i32 %103)
  %104 = bitcast %struct.dim3* %11 to i8*
  %105 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 12, i1 false)
  %106 = bitcast %struct.dim3* %12 to i8*
  %107 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 12, i1 false)
  %108 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = mul nsw i32 %109, %111
  %113 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %114 = load i32, i32* %113, align 8
  %115 = mul nsw i32 %112, %114
  %116 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = mul nsw i32 %115, %117
  %119 = sext i32 %118 to i64
  %120 = mul i64 %119, 4
  %121 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %122 = load %struct.CUstream_st*, %struct.CUstream_st** %121, align 8
  %123 = bitcast %struct.CUstream_st* %122 to i8*
  %124 = bitcast { i64, i32 }* %13 to i8*
  %125 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 12, i1 false)
  %126 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %127 = load i64, i64* %126, align 4
  %128 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = bitcast { i64, i32 }* %14 to i8*
  %131 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 12, i1 false)
  %132 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 0
  %133 = load i64, i64* %132, align 4
  %134 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = call i32 @__cudaPushCallConfiguration(i64 %127, i32 %129, i64 %133, i32 %135, i64 %120, i8* %123)
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %47
  %139 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 8
  %140 = load float*, float** %139, align 8
  %141 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 7
  %142 = load float*, float** %141, align 8
  %143 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 15
  %144 = load float*, float** %143, align 8
  %145 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %146 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %149 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %148, i32 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 2
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %158 = load i32, i32* %157, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %140, float* %142, float* %144, i32 %147, i32 %150, i32 %152, i32 %154, i32 %156, i32 %158)
  br label %159

159:                                              ; preds = %138, %47
  %160 = bitcast %struct.dim3* %15 to i8*
  %161 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %160, i8* align 4 %161, i64 12, i1 false)
  %162 = bitcast %struct.dim3* %16 to i8*
  %163 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %163, i64 12, i1 false)
  %164 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = mul nsw i32 %165, %167
  %169 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %170 = load i32, i32* %169, align 8
  %171 = mul nsw i32 %168, %170
  %172 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = mul nsw i32 %171, %173
  %175 = sext i32 %174 to i64
  %176 = mul i64 %175, 4
  %177 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 35
  %178 = load %struct.CUstream_st*, %struct.CUstream_st** %177, align 8
  %179 = bitcast %struct.CUstream_st* %178 to i8*
  %180 = bitcast { i64, i32 }* %17 to i8*
  %181 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 12, i1 false)
  %182 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %183 = load i64, i64* %182, align 4
  %184 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = bitcast { i64, i32 }* %18 to i8*
  %187 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %187, i64 12, i1 false)
  %188 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 0
  %189 = load i64, i64* %188, align 4
  %190 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = call i32 @__cudaPushCallConfiguration(i64 %183, i32 %185, i64 %189, i32 %191, i64 %176, i8* %179)
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %215, label %194

194:                                              ; preds = %159
  %195 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 12
  %196 = load float*, float** %195, align 8
  %197 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 11
  %198 = load float*, float** %197, align 8
  %199 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 17
  %200 = load float*, float** %199, align 8
  %201 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %202 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %201, i32 0, i32 3
  %203 = load i32, i32* %202, align 8
  %204 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %205 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %204, i32 0, i32 3
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 2
  %208 = load i32, i32* %207, align 8
  %209 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %214 = load i32, i32* %213, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %196, float* %198, float* %200, i32 %203, i32 %206, i32 %208, i32 %210, i32 %212, i32 %214)
  br label %215

215:                                              ; preds = %194, %159
  %216 = bitcast %struct.dim3* %19 to i8*
  %217 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 12, i1 false)
  %218 = bitcast %struct.dim3* %20 to i8*
  %219 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false)
  %220 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %221 = load %struct.CUstream_st*, %struct.CUstream_st** %220, align 8
  %222 = bitcast %struct.CUstream_st* %221 to i8*
  %223 = bitcast { i64, i32 }* %21 to i8*
  %224 = bitcast %struct.dim3* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* align 4 %224, i64 12, i1 false)
  %225 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %226 = load i64, i64* %225, align 4
  %227 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = bitcast { i64, i32 }* %22 to i8*
  %230 = bitcast %struct.dim3* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %229, i8* align 4 %230, i64 12, i1 false)
  %231 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %22, i32 0, i32 0
  %232 = load i64, i64* %231, align 4
  %233 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %22, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = call i32 @__cudaPushCallConfiguration(i64 %226, i32 %228, i64 %232, i32 %234, i64 0, i8* %222)
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %260, label %237

237:                                              ; preds = %215
  %238 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 22
  %239 = load float*, float** %238, align 8
  %240 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 8
  %241 = load float*, float** %240, align 8
  %242 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %243 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %242, i32 0, i32 3
  %244 = load i32, i32* %243, align 8
  %245 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %246 = load i32, i32* %245, align 4
  %247 = sdiv i32 %244, %246
  %248 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %249 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %248, i32 0, i32 3
  %250 = load i32, i32* %249, align 8
  %251 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %252 = load i32, i32* %251, align 4
  %253 = sdiv i32 %250, %252
  %254 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %255 = load i32, i32* %254, align 8
  %256 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %257 = load i32, i32* %256, align 8
  %258 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %259 = load i32, i32* %258, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %239, float* %241, i32 %247, i32 %253, i32 %255, i32 %257, i32 %259)
  br label %260

260:                                              ; preds = %237, %215
  %261 = bitcast %struct.dim3* %23 to i8*
  %262 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* align 4 %262, i64 12, i1 false)
  %263 = bitcast %struct.dim3* %24 to i8*
  %264 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 12, i1 false)
  %265 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 35
  %266 = load %struct.CUstream_st*, %struct.CUstream_st** %265, align 8
  %267 = bitcast %struct.CUstream_st* %266 to i8*
  %268 = bitcast { i64, i32 }* %25 to i8*
  %269 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 12, i1 false)
  %270 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %271 = load i64, i64* %270, align 4
  %272 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = bitcast { i64, i32 }* %26 to i8*
  %275 = bitcast %struct.dim3* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 12, i1 false)
  %276 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0
  %277 = load i64, i64* %276, align 4
  %278 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = call i32 @__cudaPushCallConfiguration(i64 %271, i32 %273, i64 %277, i32 %279, i64 0, i8* %267)
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %305, label %282

282:                                              ; preds = %260
  %283 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 23
  %284 = load float*, float** %283, align 8
  %285 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 12
  %286 = load float*, float** %285, align 8
  %287 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %288 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %287, i32 0, i32 3
  %289 = load i32, i32* %288, align 8
  %290 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = sdiv i32 %289, %291
  %293 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %294 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %293, i32 0, i32 3
  %295 = load i32, i32* %294, align 8
  %296 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %297 = load i32, i32* %296, align 4
  %298 = sdiv i32 %295, %297
  %299 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %300 = load i32, i32* %299, align 8
  %301 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %304 = load i32, i32* %303, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %284, float* %286, i32 %292, i32 %298, i32 %300, i32 %302, i32 %304)
  br label %305

305:                                              ; preds = %282, %260
  %306 = bitcast %struct.dim3* %27 to i8*
  %307 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %306, i8* align 4 %307, i64 12, i1 false)
  %308 = bitcast %struct.dim3* %28 to i8*
  %309 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* align 4 %309, i64 12, i1 false)
  %310 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = mul nsw i32 %311, %313
  %315 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = mul nsw i32 %314, %316
  %318 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 5
  %319 = load i32, i32* %318, align 4
  %320 = mul nsw i32 %317, %319
  %321 = sext i32 %320 to i64
  %322 = mul i64 %321, 4
  %323 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %324 = load %struct.CUstream_st*, %struct.CUstream_st** %323, align 8
  %325 = bitcast %struct.CUstream_st* %324 to i8*
  %326 = bitcast { i64, i32 }* %29 to i8*
  %327 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %326, i8* align 4 %327, i64 12, i1 false)
  %328 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %329 = load i64, i64* %328, align 4
  %330 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = bitcast { i64, i32 }* %30 to i8*
  %333 = bitcast %struct.dim3* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %332, i8* align 4 %333, i64 12, i1 false)
  %334 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 0
  %335 = load i64, i64* %334, align 4
  %336 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = call i32 @__cudaPushCallConfiguration(i64 %329, i32 %331, i64 %335, i32 %337, i64 %322, i8* %325)
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %373, label %340

340:                                              ; preds = %305
  %341 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 9
  %342 = load float*, float** %341, align 8
  %343 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 22
  %344 = load float*, float** %343, align 8
  %345 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 16
  %346 = load float*, float** %345, align 8
  %347 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %348 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %347, i32 0, i32 3
  %349 = load i32, i32* %348, align 8
  %350 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = sdiv i32 %349, %351
  %353 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %354 = load i32, i32* %353, align 8
  %355 = sdiv i32 %352, %354
  %356 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %357 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %356, i32 0, i32 3
  %358 = load i32, i32* %357, align 8
  %359 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %360 = load i32, i32* %359, align 4
  %361 = sdiv i32 %358, %360
  %362 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %363 = load i32, i32* %362, align 8
  %364 = sdiv i32 %361, %363
  %365 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %366 = load i32, i32* %365, align 8
  %367 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 5
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %342, float* %344, float* %346, i32 %355, i32 %364, i32 %366, i32 %368, i32 %370, i32 %372)
  br label %373

373:                                              ; preds = %340, %305
  %374 = bitcast %struct.dim3* %31 to i8*
  %375 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %374, i8* align 4 %375, i64 12, i1 false)
  %376 = bitcast %struct.dim3* %32 to i8*
  %377 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 12, i1 false)
  %378 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = mul nsw i32 %379, %381
  %383 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %384 = load i32, i32* %383, align 8
  %385 = mul nsw i32 %382, %384
  %386 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 5
  %387 = load i32, i32* %386, align 4
  %388 = mul nsw i32 %385, %387
  %389 = sext i32 %388 to i64
  %390 = mul i64 %389, 4
  %391 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 35
  %392 = load %struct.CUstream_st*, %struct.CUstream_st** %391, align 8
  %393 = bitcast %struct.CUstream_st* %392 to i8*
  %394 = bitcast { i64, i32 }* %33 to i8*
  %395 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* align 4 %395, i64 12, i1 false)
  %396 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %397 = load i64, i64* %396, align 4
  %398 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %399 = load i32, i32* %398, align 4
  %400 = bitcast { i64, i32 }* %34 to i8*
  %401 = bitcast %struct.dim3* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %400, i8* align 4 %401, i64 12, i1 false)
  %402 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 0
  %403 = load i64, i64* %402, align 4
  %404 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = call i32 @__cudaPushCallConfiguration(i64 %397, i32 %399, i64 %403, i32 %405, i64 %390, i8* %393)
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %441, label %408

408:                                              ; preds = %373
  %409 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 13
  %410 = load float*, float** %409, align 8
  %411 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 23
  %412 = load float*, float** %411, align 8
  %413 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 18
  %414 = load float*, float** %413, align 8
  %415 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %416 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %415, i32 0, i32 3
  %417 = load i32, i32* %416, align 8
  %418 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %419 = load i32, i32* %418, align 4
  %420 = sdiv i32 %417, %419
  %421 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %422 = load i32, i32* %421, align 8
  %423 = sdiv i32 %420, %422
  %424 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %425 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %424, i32 0, i32 3
  %426 = load i32, i32* %425, align 8
  %427 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %428 = load i32, i32* %427, align 4
  %429 = sdiv i32 %426, %428
  %430 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 6
  %431 = load i32, i32* %430, align 8
  %432 = sdiv i32 %429, %431
  %433 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 4
  %434 = load i32, i32* %433, align 8
  %435 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 5
  %438 = load i32, i32* %437, align 4
  %439 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 3
  %440 = load i32, i32* %439, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %410, float* %412, float* %414, i32 %423, i32 %432, i32 %434, i32 %436, i32 %438, i32 %440)
  br label %441

441:                                              ; preds = %408, %373
  %442 = call i32 @cudaEventCreate(%struct.CUevent_st** %35)
  %443 = load %struct.CUevent_st*, %struct.CUevent_st** %35, align 8
  %444 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 35
  %445 = load %struct.CUstream_st*, %struct.CUstream_st** %444, align 8
  %446 = call i32 @cudaEventRecord(%struct.CUevent_st* %443, %struct.CUstream_st* %445)
  %447 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %448 = load %struct.CUstream_st*, %struct.CUstream_st** %447, align 8
  %449 = load %struct.CUevent_st*, %struct.CUevent_st** %35, align 8
  %450 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %448, %struct.CUevent_st* %449, i32 0)
  %451 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %452 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %451, i32 0, i32 6
  %453 = load i32, i32* %452, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %36, i32 %453, i32 1, i32 1)
  %454 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %455 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %454, i32 0, i32 4
  %456 = load i32, i32* %455, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %37, i32 %456, i32 1, i32 1)
  %457 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %458 = load %struct.CUstream_st*, %struct.CUstream_st** %457, align 8
  %459 = bitcast %struct.CUstream_st* %458 to i8*
  %460 = bitcast { i64, i32 }* %38 to i8*
  %461 = bitcast %struct.dim3* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %460, i8* align 4 %461, i64 12, i1 false)
  %462 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 0
  %463 = load i64, i64* %462, align 4
  %464 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = bitcast { i64, i32 }* %39 to i8*
  %467 = bitcast %struct.dim3* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %466, i8* align 4 %467, i64 12, i1 false)
  %468 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 0
  %469 = load i64, i64* %468, align 4
  %470 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = call i32 @__cudaPushCallConfiguration(i64 %463, i32 %465, i64 %469, i32 %471, i64 0, i8* %459)
  %473 = icmp ne i32 %472, 0
  br i1 %473, label %483, label %474

474:                                              ; preds = %441
  %475 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 19
  %476 = load float*, float** %475, align 8
  %477 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 9
  %478 = load float*, float** %477, align 8
  %479 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 13
  %480 = load float*, float** %479, align 8
  %481 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 29
  %482 = load i32, i32* %481, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %476, float* %478, float* %480, i32 %482)
  br label %483

483:                                              ; preds = %474, %441
  %484 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %485 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %484, i32 0, i32 6
  %486 = load i32, i32* %485, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %40, i32 %486, i32 1, i32 1)
  %487 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %488 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %487, i32 0, i32 4
  %489 = load i32, i32* %488, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %41, i32 %489, i32 1, i32 1)
  %490 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %491 = load %struct.CUstream_st*, %struct.CUstream_st** %490, align 8
  %492 = bitcast %struct.CUstream_st* %491 to i8*
  %493 = bitcast { i64, i32 }* %42 to i8*
  %494 = bitcast %struct.dim3* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %493, i8* align 4 %494, i64 12, i1 false)
  %495 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 0
  %496 = load i64, i64* %495, align 4
  %497 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 1
  %498 = load i32, i32* %497, align 4
  %499 = bitcast { i64, i32 }* %43 to i8*
  %500 = bitcast %struct.dim3* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %499, i8* align 4 %500, i64 12, i1 false)
  %501 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 0
  %502 = load i64, i64* %501, align 4
  %503 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 1
  %504 = load i32, i32* %503, align 4
  %505 = call i32 @__cudaPushCallConfiguration(i64 %496, i32 %498, i64 %502, i32 %504, i64 0, i8* %492)
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %516, label %507

507:                                              ; preds = %483
  %508 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 21
  %509 = load float*, float** %508, align 8
  %510 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 19
  %511 = load float*, float** %510, align 8
  %512 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 20
  %513 = load float*, float** %512, align 8
  %514 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 29
  %515 = load i32, i32* %514, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %509, float* %511, float* %513, i32 %515)
  br label %516

516:                                              ; preds = %507, %483
  %517 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %518 = load %struct.CUstream_st*, %struct.CUstream_st** %517, align 8
  %519 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 36
  %520 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %518, %struct.CUgraph_st** %519)
  %521 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 37
  %522 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 36
  %523 = load %struct.CUgraph_st*, %struct.CUgraph_st** %522, align 8
  %524 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %521, %struct.CUgraph_st* %523, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %525

525:                                              ; preds = %516, %2
  %526 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 37
  %527 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %526, align 8
  %528 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %529 = load %struct.CUstream_st*, %struct.CUstream_st** %528, align 8
  %530 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %527, %struct.CUstream_st* %529)
  %531 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %44, i32 0, i32 34
  %532 = load %struct.CUstream_st*, %struct.CUstream_st** %531, align 8
  %533 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %532)
  %534 = bitcast %class.Benchmark10* %44 to %struct.Benchmark*
  %535 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %534, i32 0, i32 14
  store i32 %533, i32* %535, align 4
  ret void
}

declare dso_local i32 @cudaStreamBeginCapture(%struct.CUstream_st*, i32) #1

declare dso_local i32 @cudaStreamEndCapture(%struct.CUstream_st*, %struct.CUgraph_st**) #1

declare dso_local i32 @cudaGraphInstantiate(%struct.CUgraphExec_st**, %struct.CUgraph_st*, %struct.CUgraphNode_st**, i8*, i64) #1

declare dso_local i32 @cudaGraphLaunch(%struct.CUgraphExec_st*, %struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1024execute_cudagraph_manualEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [10 x i8*], align 16
  %9 = alloca [10 x i8*], align 16
  %10 = alloca [8 x i8*], align 16
  %11 = alloca [8 x i8*], align 16
  %12 = alloca [10 x i8*], align 16
  %13 = alloca [10 x i8*], align 16
  %14 = alloca [5 x i8*], align 16
  %15 = alloca [5 x i8*], align 16
  %16 = alloca %struct.dim3, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca %struct.dim3, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca %struct.dim3, align 8
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca %struct.dim3, align 8
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca %struct.dim3, align 4
  %30 = alloca %struct.dim3, align 8
  %31 = alloca { i64, i32 }, align 4
  %32 = alloca %struct.dim3, align 4
  %33 = alloca %struct.dim3, align 8
  %34 = alloca { i64, i32 }, align 4
  %35 = alloca %struct.dim3, align 4
  %36 = alloca %struct.dim3, align 8
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca %struct.dim3, align 8
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca %struct.dim3, align 4
  %42 = alloca %struct.dim3, align 8
  %43 = alloca { i64, i32 }, align 4
  %44 = alloca %struct.dim3, align 4
  %45 = alloca %struct.dim3, align 8
  %46 = alloca { i64, i32 }, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %47 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %48 = load i32, i32* %4, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %520

50:                                               ; preds = %2
  %51 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %52 = call i32 @cudaGraphCreate(%struct.CUgraph_st** %51, i32 0)
  %53 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %54 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = sdiv i32 %55, %57
  store i32 %58, i32* %5, align 4
  %59 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %60 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = sdiv i32 %61, %63
  %65 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = sdiv i32 %64, %66
  store i32 %67, i32* %6, align 4
  store i32 1, i32* %7, align 4
  %68 = getelementptr inbounds [10 x i8*], [10 x i8*]* %8, i64 0, i64 0
  %69 = bitcast i32* %7 to i8*
  store i8* %69, i8** %68, align 8
  %70 = getelementptr inbounds i8*, i8** %68, i64 1
  %71 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 8
  %72 = bitcast float** %71 to i8*
  store i8* %72, i8** %70, align 8
  %73 = getelementptr inbounds i8*, i8** %70, i64 1
  %74 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 7
  %75 = bitcast float** %74 to i8*
  store i8* %75, i8** %73, align 8
  %76 = getelementptr inbounds i8*, i8** %73, i64 1
  %77 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 15
  %78 = bitcast float** %77 to i8*
  store i8* %78, i8** %76, align 8
  %79 = getelementptr inbounds i8*, i8** %76, i64 1
  %80 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %81 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %80, i32 0, i32 3
  %82 = bitcast i32* %81 to i8*
  store i8* %82, i8** %79, align 8
  %83 = getelementptr inbounds i8*, i8** %79, i64 1
  %84 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %85 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %84, i32 0, i32 3
  %86 = bitcast i32* %85 to i8*
  store i8* %86, i8** %83, align 8
  %87 = getelementptr inbounds i8*, i8** %83, i64 1
  %88 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 2
  %89 = bitcast i32* %88 to i8*
  store i8* %89, i8** %87, align 8
  %90 = getelementptr inbounds i8*, i8** %87, i64 1
  %91 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %92 = bitcast i32* %91 to i8*
  store i8* %92, i8** %90, align 8
  %93 = getelementptr inbounds i8*, i8** %90, i64 1
  %94 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %95 = bitcast i32* %94 to i8*
  store i8* %95, i8** %93, align 8
  %96 = getelementptr inbounds i8*, i8** %93, i64 1
  %97 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %98 = bitcast i32* %97 to i8*
  store i8* %98, i8** %96, align 8
  %99 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 0
  %100 = bitcast i32* %7 to i8*
  store i8* %100, i8** %99, align 8
  %101 = getelementptr inbounds i8*, i8** %99, i64 1
  %102 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 12
  %103 = bitcast float** %102 to i8*
  store i8* %103, i8** %101, align 8
  %104 = getelementptr inbounds i8*, i8** %101, i64 1
  %105 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 11
  %106 = bitcast float** %105 to i8*
  store i8* %106, i8** %104, align 8
  %107 = getelementptr inbounds i8*, i8** %104, i64 1
  %108 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 17
  %109 = bitcast float** %108 to i8*
  store i8* %109, i8** %107, align 8
  %110 = getelementptr inbounds i8*, i8** %107, i64 1
  %111 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %112 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %111, i32 0, i32 3
  %113 = bitcast i32* %112 to i8*
  store i8* %113, i8** %110, align 8
  %114 = getelementptr inbounds i8*, i8** %110, i64 1
  %115 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %116 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %115, i32 0, i32 3
  %117 = bitcast i32* %116 to i8*
  store i8* %117, i8** %114, align 8
  %118 = getelementptr inbounds i8*, i8** %114, i64 1
  %119 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 2
  %120 = bitcast i32* %119 to i8*
  store i8* %120, i8** %118, align 8
  %121 = getelementptr inbounds i8*, i8** %118, i64 1
  %122 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %123 = bitcast i32* %122 to i8*
  store i8* %123, i8** %121, align 8
  %124 = getelementptr inbounds i8*, i8** %121, i64 1
  %125 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %126 = bitcast i32* %125 to i8*
  store i8* %126, i8** %124, align 8
  %127 = getelementptr inbounds i8*, i8** %124, i64 1
  %128 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %129 = bitcast i32* %128 to i8*
  store i8* %129, i8** %127, align 8
  %130 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 0
  %131 = bitcast i32* %7 to i8*
  store i8* %131, i8** %130, align 8
  %132 = getelementptr inbounds i8*, i8** %130, i64 1
  %133 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 22
  %134 = bitcast float** %133 to i8*
  store i8* %134, i8** %132, align 8
  %135 = getelementptr inbounds i8*, i8** %132, i64 1
  %136 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 8
  %137 = bitcast float** %136 to i8*
  store i8* %137, i8** %135, align 8
  %138 = getelementptr inbounds i8*, i8** %135, i64 1
  %139 = bitcast i32* %5 to i8*
  store i8* %139, i8** %138, align 8
  %140 = getelementptr inbounds i8*, i8** %138, i64 1
  %141 = bitcast i32* %5 to i8*
  store i8* %141, i8** %140, align 8
  %142 = getelementptr inbounds i8*, i8** %140, i64 1
  %143 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %144 = bitcast i32* %143 to i8*
  store i8* %144, i8** %142, align 8
  %145 = getelementptr inbounds i8*, i8** %142, i64 1
  %146 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 6
  %147 = bitcast i32* %146 to i8*
  store i8* %147, i8** %145, align 8
  %148 = getelementptr inbounds i8*, i8** %145, i64 1
  %149 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 6
  %150 = bitcast i32* %149 to i8*
  store i8* %150, i8** %148, align 8
  %151 = getelementptr inbounds [8 x i8*], [8 x i8*]* %11, i64 0, i64 0
  %152 = bitcast i32* %7 to i8*
  store i8* %152, i8** %151, align 8
  %153 = getelementptr inbounds i8*, i8** %151, i64 1
  %154 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 23
  %155 = bitcast float** %154 to i8*
  store i8* %155, i8** %153, align 8
  %156 = getelementptr inbounds i8*, i8** %153, i64 1
  %157 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 12
  %158 = bitcast float** %157 to i8*
  store i8* %158, i8** %156, align 8
  %159 = getelementptr inbounds i8*, i8** %156, i64 1
  %160 = bitcast i32* %5 to i8*
  store i8* %160, i8** %159, align 8
  %161 = getelementptr inbounds i8*, i8** %159, i64 1
  %162 = bitcast i32* %5 to i8*
  store i8* %162, i8** %161, align 8
  %163 = getelementptr inbounds i8*, i8** %161, i64 1
  %164 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %165 = bitcast i32* %164 to i8*
  store i8* %165, i8** %163, align 8
  %166 = getelementptr inbounds i8*, i8** %163, i64 1
  %167 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 6
  %168 = bitcast i32* %167 to i8*
  store i8* %168, i8** %166, align 8
  %169 = getelementptr inbounds i8*, i8** %166, i64 1
  %170 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 6
  %171 = bitcast i32* %170 to i8*
  store i8* %171, i8** %169, align 8
  %172 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0
  %173 = bitcast i32* %7 to i8*
  store i8* %173, i8** %172, align 8
  %174 = getelementptr inbounds i8*, i8** %172, i64 1
  %175 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 9
  %176 = bitcast float** %175 to i8*
  store i8* %176, i8** %174, align 8
  %177 = getelementptr inbounds i8*, i8** %174, i64 1
  %178 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 22
  %179 = bitcast float** %178 to i8*
  store i8* %179, i8** %177, align 8
  %180 = getelementptr inbounds i8*, i8** %177, i64 1
  %181 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 16
  %182 = bitcast float** %181 to i8*
  store i8* %182, i8** %180, align 8
  %183 = getelementptr inbounds i8*, i8** %180, i64 1
  %184 = bitcast i32* %6 to i8*
  store i8* %184, i8** %183, align 8
  %185 = getelementptr inbounds i8*, i8** %183, i64 1
  %186 = bitcast i32* %6 to i8*
  store i8* %186, i8** %185, align 8
  %187 = getelementptr inbounds i8*, i8** %185, i64 1
  %188 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %189 = bitcast i32* %188 to i8*
  store i8* %189, i8** %187, align 8
  %190 = getelementptr inbounds i8*, i8** %187, i64 1
  %191 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %192 = bitcast i32* %191 to i8*
  store i8* %192, i8** %190, align 8
  %193 = getelementptr inbounds i8*, i8** %190, i64 1
  %194 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 5
  %195 = bitcast i32* %194 to i8*
  store i8* %195, i8** %193, align 8
  %196 = getelementptr inbounds i8*, i8** %193, i64 1
  %197 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %198 = bitcast i32* %197 to i8*
  store i8* %198, i8** %196, align 8
  %199 = getelementptr inbounds [10 x i8*], [10 x i8*]* %13, i64 0, i64 0
  %200 = bitcast i32* %7 to i8*
  store i8* %200, i8** %199, align 8
  %201 = getelementptr inbounds i8*, i8** %199, i64 1
  %202 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 13
  %203 = bitcast float** %202 to i8*
  store i8* %203, i8** %201, align 8
  %204 = getelementptr inbounds i8*, i8** %201, i64 1
  %205 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 23
  %206 = bitcast float** %205 to i8*
  store i8* %206, i8** %204, align 8
  %207 = getelementptr inbounds i8*, i8** %204, i64 1
  %208 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 18
  %209 = bitcast float** %208 to i8*
  store i8* %209, i8** %207, align 8
  %210 = getelementptr inbounds i8*, i8** %207, i64 1
  %211 = bitcast i32* %6 to i8*
  store i8* %211, i8** %210, align 8
  %212 = getelementptr inbounds i8*, i8** %210, i64 1
  %213 = bitcast i32* %6 to i8*
  store i8* %213, i8** %212, align 8
  %214 = getelementptr inbounds i8*, i8** %212, i64 1
  %215 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %216 = bitcast i32* %215 to i8*
  store i8* %216, i8** %214, align 8
  %217 = getelementptr inbounds i8*, i8** %214, i64 1
  %218 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %219 = bitcast i32* %218 to i8*
  store i8* %219, i8** %217, align 8
  %220 = getelementptr inbounds i8*, i8** %217, i64 1
  %221 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 5
  %222 = bitcast i32* %221 to i8*
  store i8* %222, i8** %220, align 8
  %223 = getelementptr inbounds i8*, i8** %220, i64 1
  %224 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 3
  %225 = bitcast i32* %224 to i8*
  store i8* %225, i8** %223, align 8
  %226 = getelementptr inbounds [5 x i8*], [5 x i8*]* %14, i64 0, i64 0
  %227 = bitcast i32* %7 to i8*
  store i8* %227, i8** %226, align 8
  %228 = getelementptr inbounds i8*, i8** %226, i64 1
  %229 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 19
  %230 = bitcast float** %229 to i8*
  store i8* %230, i8** %228, align 8
  %231 = getelementptr inbounds i8*, i8** %228, i64 1
  %232 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 9
  %233 = bitcast float** %232 to i8*
  store i8* %233, i8** %231, align 8
  %234 = getelementptr inbounds i8*, i8** %231, i64 1
  %235 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 13
  %236 = bitcast float** %235 to i8*
  store i8* %236, i8** %234, align 8
  %237 = getelementptr inbounds i8*, i8** %234, i64 1
  %238 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 29
  %239 = bitcast i32* %238 to i8*
  store i8* %239, i8** %237, align 8
  %240 = getelementptr inbounds [5 x i8*], [5 x i8*]* %15, i64 0, i64 0
  %241 = bitcast i32* %7 to i8*
  store i8* %241, i8** %240, align 8
  %242 = getelementptr inbounds i8*, i8** %240, i64 1
  %243 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 21
  %244 = bitcast float** %243 to i8*
  store i8* %244, i8** %242, align 8
  %245 = getelementptr inbounds i8*, i8** %242, i64 1
  %246 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 19
  %247 = bitcast float** %246 to i8*
  store i8* %247, i8** %245, align 8
  %248 = getelementptr inbounds i8*, i8** %245, i64 1
  %249 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 20
  %250 = bitcast float** %249 to i8*
  store i8* %250, i8** %248, align 8
  %251 = getelementptr inbounds i8*, i8** %248, i64 1
  %252 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 29
  %253 = bitcast i32* %252 to i8*
  store i8* %253, i8** %251, align 8
  %254 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %255 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %254, i32 0, i32 5
  %256 = load i32, i32* %255, align 8
  %257 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %258 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %257, i32 0, i32 5
  %259 = load i32, i32* %258, align 8
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %16, i32 %256, i32 %259, i32 1)
  %260 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %261 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %260, i32 0, i32 6
  %262 = load i32, i32* %261, align 4
  %263 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %264 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %263, i32 0, i32 6
  %265 = load i32, i32* %264, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %262, i32 %265, i32 1)
  %266 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %267 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %266, i32 0, i32 6
  %268 = load i32, i32* %267, align 4
  %269 = sdiv i32 %268, 2
  %270 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %271 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %270, i32 0, i32 6
  %272 = load i32, i32* %271, align 4
  %273 = sdiv i32 %272, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %269, i32 %273, i32 1)
  %274 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %275 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %274, i32 0, i32 5
  %276 = load i32, i32* %275, align 8
  %277 = sdiv i32 %276, 2
  %278 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %279 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %278, i32 0, i32 5
  %280 = load i32, i32* %279, align 8
  %281 = sdiv i32 %280, 2
  %282 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %283 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %282, i32 0, i32 5
  %284 = load i32, i32* %283, align 8
  %285 = sdiv i32 %284, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %19, i32 %277, i32 %281, i32 %285)
  %286 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %287 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %286, i32 0, i32 6
  %288 = load i32, i32* %287, align 4
  %289 = sdiv i32 %288, 2
  %290 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %291 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %290, i32 0, i32 6
  %292 = load i32, i32* %291, align 4
  %293 = sdiv i32 %292, 2
  %294 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %295 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %294, i32 0, i32 6
  %296 = load i32, i32* %295, align 4
  %297 = sdiv i32 %296, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %20, i32 %289, i32 %293, i32 %297)
  %298 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %299 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %298, i32 0, i32 4
  %300 = load i32, i32* %299, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %21, i32 %300, i32 1, i32 1)
  %301 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %302 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %301, i32 0, i32 6
  %303 = load i32, i32* %302, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %303, i32 1, i32 1)
  %304 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %305 = getelementptr inbounds [10 x i8*], [10 x i8*]* %8, i64 0, i64 0
  %306 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 47
  %307 = bitcast %struct.dim3* %23 to i8*
  %308 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %308, i64 12, i1 false)
  %309 = bitcast %struct.dim3* %24 to i8*
  %310 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %310, i64 12, i1 false)
  %311 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %312 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 39
  %313 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %314 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = mul nsw i32 %315, %317
  %319 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %320 = load i32, i32* %319, align 8
  %321 = mul nsw i32 %318, %320
  %322 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 2
  %323 = load i32, i32* %322, align 8
  %324 = mul nsw i32 %321, %323
  %325 = sext i32 %324 to i64
  %326 = mul i64 %325, 4
  %327 = trunc i64 %326 to i32
  %328 = bitcast { i64, i32 }* %25 to i8*
  %329 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %328, i8* align 4 %329, i64 12, i1 false)
  %330 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %331 = load i64, i64* %330, align 4
  %332 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %304, i8** %305, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %306, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i64 %331, i32 %333, %struct.dim3* byval(%struct.dim3) align 8 %24, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %311, %struct.CUgraphNode_st** %312, %"class.std::vector"* nonnull align 8 dereferenceable(24) %313, i32 %327)
  %335 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %336 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 0
  %337 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 48
  %338 = bitcast %struct.dim3* %26 to i8*
  %339 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %338, i8* align 4 %339, i64 12, i1 false)
  %340 = bitcast %struct.dim3* %27 to i8*
  %341 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 4 %341, i64 12, i1 false)
  %342 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %343 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 40
  %344 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %345 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = mul nsw i32 %346, %348
  %350 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %351 = load i32, i32* %350, align 8
  %352 = mul nsw i32 %349, %351
  %353 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = mul nsw i32 %352, %354
  %356 = sext i32 %355 to i64
  %357 = mul i64 %356, 4
  %358 = trunc i64 %357 to i32
  %359 = bitcast { i64, i32 }* %28 to i8*
  %360 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %359, i8* align 4 %360, i64 12, i1 false)
  %361 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %362 = load i64, i64* %361, align 4
  %363 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %335, i8** %336, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %337, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i64 %362, i32 %364, %struct.dim3* byval(%struct.dim3) align 8 %27, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %342, %struct.CUgraphNode_st** %343, %"class.std::vector"* nonnull align 8 dereferenceable(24) %344, i32 %358)
  %366 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %366) #3
  %367 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %368 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 39
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %367, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %368)
  %369 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %370 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 0
  %371 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 49
  %372 = bitcast %struct.dim3* %29 to i8*
  %373 = bitcast %struct.dim3* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %372, i8* align 4 %373, i64 12, i1 false)
  %374 = bitcast %struct.dim3* %30 to i8*
  %375 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %374, i8* align 4 %375, i64 12, i1 false)
  %376 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %377 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 41
  %378 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %379 = bitcast { i64, i32 }* %31 to i8*
  %380 = bitcast %struct.dim3* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %379, i8* align 4 %380, i64 12, i1 false)
  %381 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 0
  %382 = load i64, i64* %381, align 4
  %383 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %369, i8** %370, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %371, i8* bitcast (void (i32, float*, float*, i32, i32, i32, i32, i32)* @_Z27__device_stub__mean_poolingiPfS_iiiii to i8*), i64 %382, i32 %384, %struct.dim3* byval(%struct.dim3) align 8 %30, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %376, %struct.CUgraphNode_st** %377, %"class.std::vector"* nonnull align 8 dereferenceable(24) %378, i32 0)
  %386 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %386) #3
  %387 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %388 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 40
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %387, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %388)
  %389 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %390 = getelementptr inbounds [8 x i8*], [8 x i8*]* %11, i64 0, i64 0
  %391 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 50
  %392 = bitcast %struct.dim3* %32 to i8*
  %393 = bitcast %struct.dim3* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %392, i8* align 4 %393, i64 12, i1 false)
  %394 = bitcast %struct.dim3* %33 to i8*
  %395 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* align 4 %395, i64 12, i1 false)
  %396 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %397 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 42
  %398 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %399 = bitcast { i64, i32 }* %34 to i8*
  %400 = bitcast %struct.dim3* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 12, i1 false)
  %401 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 0
  %402 = load i64, i64* %401, align 4
  %403 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %389, i8** %390, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %391, i8* bitcast (void (i32, float*, float*, i32, i32, i32, i32, i32)* @_Z27__device_stub__mean_poolingiPfS_iiiii to i8*), i64 %402, i32 %404, %struct.dim3* byval(%struct.dim3) align 8 %33, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %396, %struct.CUgraphNode_st** %397, %"class.std::vector"* nonnull align 8 dereferenceable(24) %398, i32 0)
  %406 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %406) #3
  %407 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %408 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 41
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %407, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %408)
  %409 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %410 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0
  %411 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 51
  %412 = bitcast %struct.dim3* %35 to i8*
  %413 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %412, i8* align 4 %413, i64 12, i1 false)
  %414 = bitcast %struct.dim3* %36 to i8*
  %415 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %414, i8* align 4 %415, i64 12, i1 false)
  %416 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %417 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 43
  %418 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %419 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %422 = load i32, i32* %421, align 4
  %423 = mul nsw i32 %420, %422
  %424 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %425 = load i32, i32* %424, align 8
  %426 = mul nsw i32 %423, %425
  %427 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 5
  %428 = load i32, i32* %427, align 4
  %429 = mul nsw i32 %426, %428
  %430 = sext i32 %429 to i64
  %431 = mul i64 %430, 4
  %432 = trunc i64 %431 to i32
  %433 = bitcast { i64, i32 }* %37 to i8*
  %434 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %433, i8* align 4 %434, i64 12, i1 false)
  %435 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %436 = load i64, i64* %435, align 4
  %437 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %409, i8** %410, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %411, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i64 %436, i32 %438, %struct.dim3* byval(%struct.dim3) align 8 %36, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %416, %struct.CUgraphNode_st** %417, %"class.std::vector"* nonnull align 8 dereferenceable(24) %418, i32 %432)
  %440 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %440) #3
  %441 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %442 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 42
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %441, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %442)
  %443 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %444 = getelementptr inbounds [10 x i8*], [10 x i8*]* %13, i64 0, i64 0
  %445 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 52
  %446 = bitcast %struct.dim3* %38 to i8*
  %447 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %446, i8* align 4 %447, i64 12, i1 false)
  %448 = bitcast %struct.dim3* %39 to i8*
  %449 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %448, i8* align 4 %449, i64 12, i1 false)
  %450 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %451 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 44
  %452 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %453 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = mul nsw i32 %454, %456
  %458 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 4
  %459 = load i32, i32* %458, align 8
  %460 = mul nsw i32 %457, %459
  %461 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 5
  %462 = load i32, i32* %461, align 4
  %463 = mul nsw i32 %460, %462
  %464 = sext i32 %463 to i64
  %465 = mul i64 %464, 4
  %466 = trunc i64 %465 to i32
  %467 = bitcast { i64, i32 }* %40 to i8*
  %468 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %467, i8* align 4 %468, i64 12, i1 false)
  %469 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %470 = load i64, i64* %469, align 4
  %471 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %443, i8** %444, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %445, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i64 %470, i32 %472, %struct.dim3* byval(%struct.dim3) align 8 %39, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %450, %struct.CUgraphNode_st** %451, %"class.std::vector"* nonnull align 8 dereferenceable(24) %452, i32 %466)
  %474 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %474) #3
  %475 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %476 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 43
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %475, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %476)
  %477 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %478 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 44
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %477, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %478)
  %479 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %480 = getelementptr inbounds [5 x i8*], [5 x i8*]* %14, i64 0, i64 0
  %481 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 53
  %482 = bitcast %struct.dim3* %41 to i8*
  %483 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %482, i8* align 4 %483, i64 12, i1 false)
  %484 = bitcast %struct.dim3* %42 to i8*
  %485 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %484, i8* align 4 %485, i64 12, i1 false)
  %486 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %487 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 45
  %488 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %489 = bitcast { i64, i32 }* %43 to i8*
  %490 = bitcast %struct.dim3* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %489, i8* align 4 %490, i64 12, i1 false)
  %491 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 0
  %492 = load i64, i64* %491, align 4
  %493 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %479, i8** %480, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %481, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__concatiPfS_S_i to i8*), i64 %492, i32 %494, %struct.dim3* byval(%struct.dim3) align 8 %42, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %486, %struct.CUgraphNode_st** %487, %"class.std::vector"* nonnull align 8 dereferenceable(24) %488, i32 0)
  %496 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %496) #3
  %497 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %498 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 45
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %497, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %498)
  %499 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %500 = getelementptr inbounds [5 x i8*], [5 x i8*]* %15, i64 0, i64 0
  %501 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 54
  %502 = bitcast %struct.dim3* %44 to i8*
  %503 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %502, i8* align 4 %503, i64 12, i1 false)
  %504 = bitcast %struct.dim3* %45 to i8*
  %505 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %504, i8* align 4 %505, i64 12, i1 false)
  %506 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %507 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 46
  %508 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 38
  %509 = bitcast { i64, i32 }* %46 to i8*
  %510 = bitcast %struct.dim3* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %509, i8* align 4 %510, i64 12, i1 false)
  %511 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 0
  %512 = load i64, i64* %511, align 4
  %513 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 1
  %514 = load i32, i32* %513, align 4
  %515 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %499, i8** %500, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %501, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z26__device_stub__dot_productiPfS_S_i to i8*), i64 %512, i32 %514, %struct.dim3* byval(%struct.dim3) align 8 %45, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %506, %struct.CUgraphNode_st** %507, %"class.std::vector"* nonnull align 8 dereferenceable(24) %508, i32 0)
  %516 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 37
  %517 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 36
  %518 = load %struct.CUgraph_st*, %struct.CUgraph_st** %517, align 8
  %519 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %516, %struct.CUgraph_st* %518, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %520

520:                                              ; preds = %50, %2
  %521 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 37
  %522 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %521, align 8
  %523 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 34
  %524 = load %struct.CUstream_st*, %struct.CUstream_st** %523, align 8
  %525 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %522, %struct.CUstream_st* %524)
  %526 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %47, i32 0, i32 34
  %527 = load %struct.CUstream_st*, %struct.CUstream_st** %526, align 8
  %528 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %527)
  %529 = bitcast %class.Benchmark10* %47 to %struct.Benchmark*
  %530 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %529, i32 0, i32 14
  store i32 %528, i32* %530, align 4
  ret void
}

declare dso_local i32 @cudaGraphCreate(%struct.CUgraph_st**, i32) #1

declare dso_local i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60), i8**, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56), i8*, i64, i32, %struct.dim3* byval(%struct.dim3) align 8, %struct.CUgraph_st** nonnull align 8 dereferenceable(8), %struct.CUgraphNode_st**, %"class.std::vector"* nonnull align 8 dereferenceable(24), i32) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %3, %struct.CUgraphNode_st** %7) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %1) #6 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 2
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = icmp ne %struct.CUgraphNode_st** %10, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %2
  %17 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %18 to %"class.std::allocator"*
  %20 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %21, i32 0, i32 1
  %23 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %22, align 8
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %19, %struct.CUgraphNode_st** %23, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %24)
  %25 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %27, align 8
  %29 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %28, i32 1
  store %struct.CUgraphNode_st** %29, %struct.CUgraphNode_st*** %27, align 8
  br label %36

30:                                               ; preds = %2
  %31 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %31, %struct.CUgraphNode_st*** %32, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %35 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %34, align 8
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6, %struct.CUgraphNode_st** %35, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %33)
  br label %36

36:                                               ; preds = %30, %16
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1024execute_cudagraph_singleEi(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark10*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca %struct.dim3, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca { i64, i32 }, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca %struct.dim3, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca { i64, i32 }, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %3, align 8
  store i32 %1, i32* %4, align 4
  %42 = load %class.Benchmark10*, %class.Benchmark10** %3, align 8
  %43 = load i32, i32* %4, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %505

45:                                               ; preds = %2
  %46 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %47 = load %struct.CUstream_st*, %struct.CUstream_st** %46, align 8
  %48 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %47, i32 0)
  %49 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 8
  %52 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %53 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %52, i32 0, i32 5
  %54 = load i32, i32* %53, align 8
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %51, i32 %54, i32 1)
  %55 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 4
  %58 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %59 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %58, i32 0, i32 6
  %60 = load i32, i32* %59, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %57, i32 %60, i32 1)
  %61 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %62 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %61, i32 0, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = sdiv i32 %63, 2
  %65 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %66 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %65, i32 0, i32 6
  %67 = load i32, i32* %66, align 4
  %68 = sdiv i32 %67, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %64, i32 %68, i32 1)
  %69 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %70 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = sdiv i32 %71, 2
  %73 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %74 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %73, i32 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = sdiv i32 %75, 2
  %77 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %78 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %77, i32 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = sdiv i32 %79, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %8, i32 %72, i32 %76, i32 %80)
  %81 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %82 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %81, i32 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = sdiv i32 %83, 2
  %85 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %86 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %85, i32 0, i32 6
  %87 = load i32, i32* %86, align 4
  %88 = sdiv i32 %87, 2
  %89 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %90 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %89, i32 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = sdiv i32 %91, 2
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %84, i32 %88, i32 %92)
  %93 = bitcast %struct.dim3* %10 to i8*
  %94 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 12, i1 false)
  %95 = bitcast %struct.dim3* %11 to i8*
  %96 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 12, i1 false)
  %97 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = mul nsw i32 %98, %100
  %102 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = mul nsw i32 %101, %103
  %105 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = mul nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = mul i64 %108, 4
  %110 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %111 = load %struct.CUstream_st*, %struct.CUstream_st** %110, align 8
  %112 = bitcast %struct.CUstream_st* %111 to i8*
  %113 = bitcast { i64, i32 }* %12 to i8*
  %114 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 12, i1 false)
  %115 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %116 = load i64, i64* %115, align 4
  %117 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = bitcast { i64, i32 }* %13 to i8*
  %120 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 12, i1 false)
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %122 = load i64, i64* %121, align 4
  %123 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = call i32 @__cudaPushCallConfiguration(i64 %116, i32 %118, i64 %122, i32 %124, i64 %109, i8* %112)
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %148, label %127

127:                                              ; preds = %45
  %128 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 8
  %129 = load float*, float** %128, align 8
  %130 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 7
  %131 = load float*, float** %130, align 8
  %132 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 15
  %133 = load float*, float** %132, align 8
  %134 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %135 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %138 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %137, i32 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %129, float* %131, float* %133, i32 %136, i32 %139, i32 %141, i32 %143, i32 %145, i32 %147)
  br label %148

148:                                              ; preds = %127, %45
  %149 = bitcast %struct.dim3* %14 to i8*
  %150 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 12, i1 false)
  %151 = bitcast %struct.dim3* %15 to i8*
  %152 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %152, i64 12, i1 false)
  %153 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %154, %156
  %158 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %159 = load i32, i32* %158, align 8
  %160 = mul nsw i32 %157, %159
  %161 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = mul nsw i32 %160, %162
  %164 = sext i32 %163 to i64
  %165 = mul i64 %164, 4
  %166 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %167 = load %struct.CUstream_st*, %struct.CUstream_st** %166, align 8
  %168 = bitcast %struct.CUstream_st* %167 to i8*
  %169 = bitcast { i64, i32 }* %16 to i8*
  %170 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %169, i8* align 4 %170, i64 12, i1 false)
  %171 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %172 = load i64, i64* %171, align 4
  %173 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = bitcast { i64, i32 }* %17 to i8*
  %176 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 12, i1 false)
  %177 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %178 = load i64, i64* %177, align 4
  %179 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = call i32 @__cudaPushCallConfiguration(i64 %172, i32 %174, i64 %178, i32 %180, i64 %165, i8* %168)
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %204, label %183

183:                                              ; preds = %148
  %184 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 12
  %185 = load float*, float** %184, align 8
  %186 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 11
  %187 = load float*, float** %186, align 8
  %188 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 17
  %189 = load float*, float** %188, align 8
  %190 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %191 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %190, i32 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %194 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %193, i32 0, i32 3
  %195 = load i32, i32* %194, align 8
  %196 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %201 = load i32, i32* %200, align 8
  %202 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %185, float* %187, float* %189, i32 %192, i32 %195, i32 %197, i32 %199, i32 %201, i32 %203)
  br label %204

204:                                              ; preds = %183, %148
  %205 = bitcast %struct.dim3* %18 to i8*
  %206 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 12, i1 false)
  %207 = bitcast %struct.dim3* %19 to i8*
  %208 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %208, i64 12, i1 false)
  %209 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %210 = load %struct.CUstream_st*, %struct.CUstream_st** %209, align 8
  %211 = bitcast %struct.CUstream_st* %210 to i8*
  %212 = bitcast { i64, i32 }* %20 to i8*
  %213 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 12, i1 false)
  %214 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %215 = load i64, i64* %214, align 4
  %216 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = bitcast { i64, i32 }* %21 to i8*
  %219 = bitcast %struct.dim3* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 12, i1 false)
  %220 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %221 = load i64, i64* %220, align 4
  %222 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = call i32 @__cudaPushCallConfiguration(i64 %215, i32 %217, i64 %221, i32 %223, i64 0, i8* %211)
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %249, label %226

226:                                              ; preds = %204
  %227 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 22
  %228 = load float*, float** %227, align 8
  %229 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 8
  %230 = load float*, float** %229, align 8
  %231 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %232 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %231, i32 0, i32 3
  %233 = load i32, i32* %232, align 8
  %234 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = sdiv i32 %233, %235
  %237 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %238 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %237, i32 0, i32 3
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = sdiv i32 %239, %241
  %243 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %244 = load i32, i32* %243, align 8
  %245 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %246 = load i32, i32* %245, align 8
  %247 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %248 = load i32, i32* %247, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %228, float* %230, i32 %236, i32 %242, i32 %244, i32 %246, i32 %248)
  br label %249

249:                                              ; preds = %226, %204
  %250 = bitcast %struct.dim3* %22 to i8*
  %251 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %251, i64 12, i1 false)
  %252 = bitcast %struct.dim3* %23 to i8*
  %253 = bitcast %struct.dim3* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 12, i1 false)
  %254 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %255 = load %struct.CUstream_st*, %struct.CUstream_st** %254, align 8
  %256 = bitcast %struct.CUstream_st* %255 to i8*
  %257 = bitcast { i64, i32 }* %24 to i8*
  %258 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %257, i8* align 4 %258, i64 12, i1 false)
  %259 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %260 = load i64, i64* %259, align 4
  %261 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = bitcast { i64, i32 }* %25 to i8*
  %264 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 12, i1 false)
  %265 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %266 = load i64, i64* %265, align 4
  %267 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = call i32 @__cudaPushCallConfiguration(i64 %260, i32 %262, i64 %266, i32 %268, i64 0, i8* %256)
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %294, label %271

271:                                              ; preds = %249
  %272 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 23
  %273 = load float*, float** %272, align 8
  %274 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 12
  %275 = load float*, float** %274, align 8
  %276 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %277 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %276, i32 0, i32 3
  %278 = load i32, i32* %277, align 8
  %279 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %280 = load i32, i32* %279, align 4
  %281 = sdiv i32 %278, %280
  %282 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %283 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %282, i32 0, i32 3
  %284 = load i32, i32* %283, align 8
  %285 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %286 = load i32, i32* %285, align 4
  %287 = sdiv i32 %284, %286
  %288 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %289 = load i32, i32* %288, align 8
  %290 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %291 = load i32, i32* %290, align 8
  %292 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %293 = load i32, i32* %292, align 8
  call void @_Z27__device_stub__mean_poolingiPfS_iiiii(i32 1, float* %273, float* %275, i32 %281, i32 %287, i32 %289, i32 %291, i32 %293)
  br label %294

294:                                              ; preds = %271, %249
  %295 = bitcast %struct.dim3* %26 to i8*
  %296 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %295, i8* align 4 %296, i64 12, i1 false)
  %297 = bitcast %struct.dim3* %27 to i8*
  %298 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %297, i8* align 4 %298, i64 12, i1 false)
  %299 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = mul nsw i32 %300, %302
  %304 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %305 = load i32, i32* %304, align 8
  %306 = mul nsw i32 %303, %305
  %307 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %308 = load i32, i32* %307, align 4
  %309 = mul nsw i32 %306, %308
  %310 = sext i32 %309 to i64
  %311 = mul i64 %310, 4
  %312 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %313 = load %struct.CUstream_st*, %struct.CUstream_st** %312, align 8
  %314 = bitcast %struct.CUstream_st* %313 to i8*
  %315 = bitcast { i64, i32 }* %28 to i8*
  %316 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %315, i8* align 4 %316, i64 12, i1 false)
  %317 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %318 = load i64, i64* %317, align 4
  %319 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = bitcast { i64, i32 }* %29 to i8*
  %322 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* align 4 %322, i64 12, i1 false)
  %323 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %324 = load i64, i64* %323, align 4
  %325 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = call i32 @__cudaPushCallConfiguration(i64 %318, i32 %320, i64 %324, i32 %326, i64 %311, i8* %314)
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %362, label %329

329:                                              ; preds = %294
  %330 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 9
  %331 = load float*, float** %330, align 8
  %332 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 22
  %333 = load float*, float** %332, align 8
  %334 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 16
  %335 = load float*, float** %334, align 8
  %336 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %337 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %336, i32 0, i32 3
  %338 = load i32, i32* %337, align 8
  %339 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = sdiv i32 %338, %340
  %342 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %343 = load i32, i32* %342, align 8
  %344 = sdiv i32 %341, %343
  %345 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %346 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %345, i32 0, i32 3
  %347 = load i32, i32* %346, align 8
  %348 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %349 = load i32, i32* %348, align 4
  %350 = sdiv i32 %347, %349
  %351 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %352 = load i32, i32* %351, align 8
  %353 = sdiv i32 %350, %352
  %354 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %355 = load i32, i32* %354, align 8
  %356 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %359 = load i32, i32* %358, align 4
  %360 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %361 = load i32, i32* %360, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %331, float* %333, float* %335, i32 %344, i32 %353, i32 %355, i32 %357, i32 %359, i32 %361)
  br label %362

362:                                              ; preds = %329, %294
  %363 = bitcast %struct.dim3* %30 to i8*
  %364 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %363, i8* align 4 %364, i64 12, i1 false)
  %365 = bitcast %struct.dim3* %31 to i8*
  %366 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 12, i1 false)
  %367 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = mul nsw i32 %368, %370
  %372 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %373 = load i32, i32* %372, align 8
  %374 = mul nsw i32 %371, %373
  %375 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %376 = load i32, i32* %375, align 4
  %377 = mul nsw i32 %374, %376
  %378 = sext i32 %377 to i64
  %379 = mul i64 %378, 4
  %380 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %381 = load %struct.CUstream_st*, %struct.CUstream_st** %380, align 8
  %382 = bitcast %struct.CUstream_st* %381 to i8*
  %383 = bitcast { i64, i32 }* %32 to i8*
  %384 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %383, i8* align 4 %384, i64 12, i1 false)
  %385 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %386 = load i64, i64* %385, align 4
  %387 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = bitcast { i64, i32 }* %33 to i8*
  %390 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %389, i8* align 4 %390, i64 12, i1 false)
  %391 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %392 = load i64, i64* %391, align 4
  %393 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = call i32 @__cudaPushCallConfiguration(i64 %386, i32 %388, i64 %392, i32 %394, i64 %379, i8* %382)
  %396 = icmp ne i32 %395, 0
  br i1 %396, label %430, label %397

397:                                              ; preds = %362
  %398 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 13
  %399 = load float*, float** %398, align 8
  %400 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 23
  %401 = load float*, float** %400, align 8
  %402 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 18
  %403 = load float*, float** %402, align 8
  %404 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %405 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %404, i32 0, i32 3
  %406 = load i32, i32* %405, align 8
  %407 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %408 = load i32, i32* %407, align 4
  %409 = sdiv i32 %406, %408
  %410 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %411 = load i32, i32* %410, align 8
  %412 = sdiv i32 %409, %411
  %413 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %414 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %413, i32 0, i32 3
  %415 = load i32, i32* %414, align 8
  %416 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %417 = load i32, i32* %416, align 4
  %418 = sdiv i32 %415, %417
  %419 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 6
  %420 = load i32, i32* %419, align 8
  %421 = sdiv i32 %418, %420
  %422 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 4
  %423 = load i32, i32* %422, align 8
  %424 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 1
  %425 = load i32, i32* %424, align 4
  %426 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 5
  %427 = load i32, i32* %426, align 4
  %428 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 3
  %429 = load i32, i32* %428, align 4
  call void @_Z21__device_stub__conv2diPfS_S_iiiiii(i32 1, float* %399, float* %401, float* %403, i32 %412, i32 %421, i32 %423, i32 %425, i32 %427, i32 %429)
  br label %430

430:                                              ; preds = %397, %362
  %431 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %432 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %431, i32 0, i32 6
  %433 = load i32, i32* %432, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %433, i32 1, i32 1)
  %434 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %435 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %434, i32 0, i32 4
  %436 = load i32, i32* %435, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %35, i32 %436, i32 1, i32 1)
  %437 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %438 = load %struct.CUstream_st*, %struct.CUstream_st** %437, align 8
  %439 = bitcast %struct.CUstream_st* %438 to i8*
  %440 = bitcast { i64, i32 }* %36 to i8*
  %441 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 12, i1 false)
  %442 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %443 = load i64, i64* %442, align 4
  %444 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %445 = load i32, i32* %444, align 4
  %446 = bitcast { i64, i32 }* %37 to i8*
  %447 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %446, i8* align 4 %447, i64 12, i1 false)
  %448 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %449 = load i64, i64* %448, align 4
  %450 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %451 = load i32, i32* %450, align 4
  %452 = call i32 @__cudaPushCallConfiguration(i64 %443, i32 %445, i64 %449, i32 %451, i64 0, i8* %439)
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %463, label %454

454:                                              ; preds = %430
  %455 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 19
  %456 = load float*, float** %455, align 8
  %457 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 9
  %458 = load float*, float** %457, align 8
  %459 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 13
  %460 = load float*, float** %459, align 8
  %461 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 29
  %462 = load i32, i32* %461, align 4
  call void @_Z21__device_stub__concatiPfS_S_i(i32 1, float* %456, float* %458, float* %460, i32 %462)
  br label %463

463:                                              ; preds = %454, %430
  %464 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %465 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %464, i32 0, i32 6
  %466 = load i32, i32* %465, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %466, i32 1, i32 1)
  %467 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %468 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %467, i32 0, i32 4
  %469 = load i32, i32* %468, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %39, i32 %469, i32 1, i32 1)
  %470 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %471 = load %struct.CUstream_st*, %struct.CUstream_st** %470, align 8
  %472 = bitcast %struct.CUstream_st* %471 to i8*
  %473 = bitcast { i64, i32 }* %40 to i8*
  %474 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %473, i8* align 4 %474, i64 12, i1 false)
  %475 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %476 = load i64, i64* %475, align 4
  %477 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = bitcast { i64, i32 }* %41 to i8*
  %480 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %479, i8* align 4 %480, i64 12, i1 false)
  %481 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %482 = load i64, i64* %481, align 4
  %483 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = call i32 @__cudaPushCallConfiguration(i64 %476, i32 %478, i64 %482, i32 %484, i64 0, i8* %472)
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %496, label %487

487:                                              ; preds = %463
  %488 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 21
  %489 = load float*, float** %488, align 8
  %490 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 19
  %491 = load float*, float** %490, align 8
  %492 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 20
  %493 = load float*, float** %492, align 8
  %494 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 29
  %495 = load i32, i32* %494, align 4
  call void @_Z26__device_stub__dot_productiPfS_S_i(i32 1, float* %489, float* %491, float* %493, i32 %495)
  br label %496

496:                                              ; preds = %487, %463
  %497 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %498 = load %struct.CUstream_st*, %struct.CUstream_st** %497, align 8
  %499 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 36
  %500 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %498, %struct.CUgraph_st** %499)
  %501 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 37
  %502 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 36
  %503 = load %struct.CUgraph_st*, %struct.CUgraph_st** %502, align 8
  %504 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %501, %struct.CUgraph_st* %503, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %505

505:                                              ; preds = %496, %2
  %506 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 37
  %507 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %506, align 8
  %508 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %509 = load %struct.CUstream_st*, %struct.CUstream_st** %508, align 8
  %510 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %507, %struct.CUstream_st* %509)
  %511 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %42, i32 0, i32 34
  %512 = load %struct.CUstream_st*, %struct.CUstream_st** %511, align 8
  %513 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %512)
  %514 = bitcast %class.Benchmark10* %42 to %struct.Benchmark*
  %515 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %514, i32 0, i32 14
  store i32 %513, i32* %515, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN11Benchmark1012print_resultB5cxx11Eb(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %class.Benchmark10* nonnull align 8 dereferenceable(840) %1, i1 zeroext %2) unnamed_addr #6 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %class.Benchmark10*, align 8
  %6 = alloca i8, align 1
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %7, i8** %4, align 8
  store %class.Benchmark10* %1, %class.Benchmark10** %5, align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  %9 = load %class.Benchmark10*, %class.Benchmark10** %5, align 8
  %10 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %9, i32 0, i32 21
  %11 = load float*, float** %10, align 8
  %12 = getelementptr inbounds float, float* %11, i64 0
  %13 = load float, float* %12, align 4
  call void @_ZNSt7__cxx119to_stringEf(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, float %13)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx119to_stringEf(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, float %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca float, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %6, i8** %3, align 8
  store float %1, float* %4, align 4
  store i32 58, i32* %5, align 4
  %7 = load float, float* %4, align 4
  %8 = fpext float %7 to double
  call void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* @vsnprintf, i64 58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN11Benchmark10D2Ev(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0) unnamed_addr #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Benchmark10*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark10* %0, %class.Benchmark10** %2, align 8
  %5 = load %class.Benchmark10*, %class.Benchmark10** %2, align 8
  %6 = bitcast %class.Benchmark10* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV11Benchmark10, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 24
  %8 = load float*, float** %7, align 8
  %9 = bitcast float* %8 to i8*
  call void @free(i8* %9) #3
  %10 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 25
  %11 = load float*, float** %10, align 8
  %12 = bitcast float* %11 to i8*
  call void @free(i8* %12) #3
  %13 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 7
  %14 = load float*, float** %13, align 8
  %15 = bitcast float* %14 to i8*
  %16 = invoke i32 @cudaFree(i8* %15)
          to label %17 unwind label %108

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 8
  %19 = load float*, float** %18, align 8
  %20 = bitcast float* %19 to i8*
  %21 = invoke i32 @cudaFree(i8* %20)
          to label %22 unwind label %108

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 9
  %24 = load float*, float** %23, align 8
  %25 = bitcast float* %24 to i8*
  %26 = invoke i32 @cudaFree(i8* %25)
          to label %27 unwind label %108

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 10
  %29 = load float*, float** %28, align 8
  %30 = bitcast float* %29 to i8*
  %31 = invoke i32 @cudaFree(i8* %30)
          to label %32 unwind label %108

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 11
  %34 = load float*, float** %33, align 8
  %35 = bitcast float* %34 to i8*
  %36 = invoke i32 @cudaFree(i8* %35)
          to label %37 unwind label %108

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 12
  %39 = load float*, float** %38, align 8
  %40 = bitcast float* %39 to i8*
  %41 = invoke i32 @cudaFree(i8* %40)
          to label %42 unwind label %108

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 13
  %44 = load float*, float** %43, align 8
  %45 = bitcast float* %44 to i8*
  %46 = invoke i32 @cudaFree(i8* %45)
          to label %47 unwind label %108

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 14
  %49 = load float*, float** %48, align 8
  %50 = bitcast float* %49 to i8*
  %51 = invoke i32 @cudaFree(i8* %50)
          to label %52 unwind label %108

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 15
  %54 = load float*, float** %53, align 8
  %55 = bitcast float* %54 to i8*
  %56 = invoke i32 @cudaFree(i8* %55)
          to label %57 unwind label %108

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 16
  %59 = load float*, float** %58, align 8
  %60 = bitcast float* %59 to i8*
  %61 = invoke i32 @cudaFree(i8* %60)
          to label %62 unwind label %108

62:                                               ; preds = %57
  %63 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 17
  %64 = load float*, float** %63, align 8
  %65 = bitcast float* %64 to i8*
  %66 = invoke i32 @cudaFree(i8* %65)
          to label %67 unwind label %108

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 18
  %69 = load float*, float** %68, align 8
  %70 = bitcast float* %69 to i8*
  %71 = invoke i32 @cudaFree(i8* %70)
          to label %72 unwind label %108

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 19
  %74 = load float*, float** %73, align 8
  %75 = bitcast float* %74 to i8*
  %76 = invoke i32 @cudaFree(i8* %75)
          to label %77 unwind label %108

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 20
  %79 = load float*, float** %78, align 8
  %80 = bitcast float* %79 to i8*
  %81 = invoke i32 @cudaFree(i8* %80)
          to label %82 unwind label %108

82:                                               ; preds = %77
  %83 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 21
  %84 = load float*, float** %83, align 8
  %85 = bitcast float* %84 to i8*
  %86 = invoke i32 @cudaFree(i8* %85)
          to label %87 unwind label %108

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 22
  %89 = load float*, float** %88, align 8
  %90 = bitcast float* %89 to i8*
  %91 = invoke i32 @cudaFree(i8* %90)
          to label %92 unwind label %108

92:                                               ; preds = %87
  %93 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 23
  %94 = load float*, float** %93, align 8
  %95 = bitcast float* %94 to i8*
  %96 = invoke i32 @cudaFree(i8* %95)
          to label %97 unwind label %108

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 34
  %99 = load %struct.CUstream_st*, %struct.CUstream_st** %98, align 8
  %100 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %99)
          to label %101 unwind label %108

101:                                              ; preds = %97
  %102 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 35
  %103 = load %struct.CUstream_st*, %struct.CUstream_st** %102, align 8
  %104 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %103)
          to label %105 unwind label %108

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %106) #3
  %107 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %107) #3
  ret void

108:                                              ; preds = %101, %97, %92, %87, %82, %77, %72, %67, %62, %57, %52, %47, %42, %37, %32, %27, %22, %17, %1
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %3, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %4, align 4
  %112 = getelementptr inbounds %class.Benchmark10, %class.Benchmark10* %5, i32 0, i32 38
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %112) #3
  %113 = bitcast %class.Benchmark10* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %113) #3
  br label %114

114:                                              ; preds = %108
  %115 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %115) #15
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

declare dso_local i32 @cudaFree(i8*) #1

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local i32 @cudaStreamDestroy(%struct.CUstream_st*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %14) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %13, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %15)
          to label %16 unwind label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %17) #3
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %22) #3
  br label %23

23:                                               ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #15
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %struct.Benchmark*, align 8
  store %struct.Benchmark* %0, %struct.Benchmark** %2, align 8
  %3 = load %struct.Benchmark*, %struct.Benchmark** %2, align 8
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #9 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN11Benchmark10D0Ev(%class.Benchmark10* nonnull align 8 dereferenceable(840) %0) unnamed_addr #8 align 2 {
  %2 = alloca %class.Benchmark10*, align 8
  store %class.Benchmark10* %0, %class.Benchmark10** %2, align 8
  %3 = load %class.Benchmark10*, %class.Benchmark10** %2, align 8
  call void @_ZN11Benchmark10D1Ev(%class.Benchmark10* nonnull align 8 dereferenceable(840) %3) #3
  %4 = bitcast %class.Benchmark10* %3 to i8*
  call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #10

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) #6 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i8*, align 8
  %6 = alloca i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [1 x %struct.__va_list_tag], align 16
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.0", align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %15, i8** %5, align 8
  store i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %16 = load i64, i64* %7, align 8
  %17 = mul i64 1, %16
  %18 = alloca i8, i64 %17, align 16
  store i8* %18, i8** %9, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %20 = bitcast %struct.__va_list_tag* %19 to i8*
  call void @llvm.va_start(i8* %20)
  %21 = load i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %26 = call i32 %21(i8* %22, i64 %23, i8* %24, %struct.__va_list_tag* %25)
  store i32 %26, i32* %11, align 4
  %27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %28 = bitcast %struct.__va_list_tag* %27 to i8*
  call void @llvm.va_end(i8* %28)
  %29 = load i8*, i8** %9, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = load i32, i32* %11, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %29, i8* %33, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12)
          to label %34 unwind label %35

34:                                               ; preds = %4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  ret void

35:                                               ; preds = %4
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %13, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %14, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  br label %39

39:                                               ; preds = %35
  %40 = load i8*, i8** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43
}

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %3) unnamed_addr #12 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i32 0, i32 0
  %13 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12, i8* %13, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %14)
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %15, i8* %16)
          to label %17 unwind label %18

17:                                               ; preds = %4
  ret void

18:                                               ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12) #3
  br label %22

22:                                               ; preds = %18
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* %10, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8), i8*, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %9, i8* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, align 8
  store %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %0, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %3 = load %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %4 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::__false_type", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %11, i8* %12)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %12)
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = icmp ne i8* %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #17
  unreachable

19:                                               ; preds = %14, %3
  %20 = load i8*, i8** %6, align 8
  %21 = load i8*, i8** %7, align 8
  %22 = call i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %20, i8* %21)
  store i64 %22, i64* %8, align 8
  %23 = load i64, i64* %8, align 8
  %24 = icmp ugt i64 %23, 15
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %8, i64 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %26)
  %27 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %27)
  br label %28

28:                                               ; preds = %25, %19
  %29 = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %30 unwind label %33

30:                                               ; preds = %28
  %31 = load i8*, i8** %6, align 8
  %32 = load i8*, i8** %7, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8* %29, i8* %31, i8* %32) #3
  br label %46

33:                                               ; preds = %28
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  br label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %9, align 8
  %39 = call i8* @__cxa_begin_catch(i8* %38) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %40 unwind label %41

40:                                               ; preds = %37
  invoke void @__cxa_rethrow() #17
          to label %56 unwind label %41

41:                                               ; preds = %40, %37
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %9, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %45 unwind label %53

45:                                               ; preds = %41
  br label %48

46:                                               ; preds = %30
  %47 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %47)
  ret void

48:                                               ; preds = %45
  %49 = load i8*, i8** %9, align 8
  %50 = load i32, i32* %10, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

53:                                               ; preds = %41
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #15
  unreachable

56:                                               ; preds = %40
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %0) #7 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  ret i1 %4
}

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %0, i8* %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i8*, i8** %4, align 8
  call void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %7, i8* %8)
  ret i64 %9
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) #1

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8*, i8*, i8*) #2

declare dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @__cxa_rethrow()

declare dso_local void @__cxa_end_catch()

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %0, i8* %1) #7 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = ptrtoint i8* %6 to i64
  %9 = ptrtoint i8* %7 to i64
  %10 = sub i64 %8, %9
  ret i64 %10
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  call void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %7, %struct.CUgraphNode_st** %8)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %16 = ptrtoint %struct.CUgraphNode_st** %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %5, %struct.CUgraphNode_st** %8, i64 %18)
          to label %19 unwind label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %20) #3
  ret void

21:                                               ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %25) #3
  br label %26

26:                                               ; preds = %21
  %27 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %27) #15
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #6 comdat {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %5, %struct.CUgraphNode_st** %6)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = icmp ne %struct.CUgraphNode_st** %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11 to %"class.std::allocator"*
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %12, %struct.CUgraphNode_st** %13, i64 %14)
  br label %15

15:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %0, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, i64 %10)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

declare dso_local i32 @cudaMallocManaged(i8**, i64, i32) #1

declare dso_local i32 @cudaStreamAttachMemAsync(%struct.CUstream_st*, i8*, i64, i32) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %12 = ptrtoint %struct.CUgraphNode_st** %10 to i64
  %13 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  store i64 %15, i64* %5, align 8
  %16 = load i64, i64* %5, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %2
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %20 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %21, i32 0, i32 1
  %23 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %22, align 8
  %24 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %25 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %24) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %23, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %25)
          to label %26 unwind label %32

26:                                               ; preds = %18
  %27 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %28 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %29, i32 0, i32 1
  store %struct.CUgraphNode_st** %27, %struct.CUgraphNode_st*** %30, align 8
  br label %31

31:                                               ; preds = %26, %2
  ret void

32:                                               ; preds = %18
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #15
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.CUgraphNode_st**, align 8
  %9 = alloca %struct.CUgraphNode_st**, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %struct.CUgraphNode_st**, align 8
  %13 = alloca %struct.CUgraphNode_st**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %16, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %17 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  store %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st*** %8, align 8
  %23 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %24, i32 0, i32 1
  %26 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %25, align 8
  store %struct.CUgraphNode_st** %26, %struct.CUgraphNode_st*** %9, align 8
  %27 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17) #3
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.CUgraphNode_st** %27, %struct.CUgraphNode_st*** %28, align 8
  %29 = call i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %11) #3
  store i64 %29, i64* %10, align 8
  %30 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %31 = load i64, i64* %7, align 8
  %32 = call %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %30, i64 %31)
  store %struct.CUgraphNode_st** %32, %struct.CUgraphNode_st*** %12, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %33, %struct.CUgraphNode_st*** %13, align 8
  %34 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %35 to %"class.std::allocator"*
  %37 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %37, i64 %38
  %40 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %41 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %40) #3
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %36, %struct.CUgraphNode_st** %39, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %41)
          to label %42 unwind label %61

42:                                               ; preds = %3
  store %struct.CUgraphNode_st** null, %struct.CUgraphNode_st*** %13, align 8
  %43 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %44 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %45 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %44, align 8
  %46 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %47 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %48 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %47) #3
  %49 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %43, %struct.CUgraphNode_st** %45, %struct.CUgraphNode_st** %46, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %48)
          to label %50 unwind label %61

50:                                               ; preds = %42
  store %struct.CUgraphNode_st** %49, %struct.CUgraphNode_st*** %13, align 8
  %51 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %52 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %51, i32 1
  store %struct.CUgraphNode_st** %52, %struct.CUgraphNode_st*** %13, align 8
  %53 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %54 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %53, align 8
  %55 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %56 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %57 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %58 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %57) #3
  %59 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %54, %struct.CUgraphNode_st** %55, %struct.CUgraphNode_st** %56, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %58)
          to label %60 unwind label %61

60:                                               ; preds = %50
  store %struct.CUgraphNode_st** %59, %struct.CUgraphNode_st*** %13, align 8
  br label %94

61:                                               ; preds = %50, %42, %3
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %14, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %15, align 4
  br label %65

65:                                               ; preds = %61
  %66 = load i8*, i8** %14, align 8
  %67 = call i8* @__cxa_begin_catch(i8* %66) #3
  %68 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %69 = icmp ne %struct.CUgraphNode_st** %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %72 to %"class.std::allocator"*
  %74 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %75 = load i64, i64* %10, align 8
  %76 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %74, i64 %75
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %73, %struct.CUgraphNode_st** %76)
          to label %77 unwind label %78

77:                                               ; preds = %70
  br label %88

78:                                               ; preds = %92, %88, %82, %70
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %14, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %93 unwind label %129

82:                                               ; preds = %65
  %83 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %84 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %85 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %86 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %85) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %83, %struct.CUgraphNode_st** %84, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %86)
          to label %87 unwind label %78

87:                                               ; preds = %82
  br label %88

88:                                               ; preds = %87, %77
  %89 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %90 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %91 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %89, %struct.CUgraphNode_st** %90, i64 %91)
          to label %92 unwind label %78

92:                                               ; preds = %88
  invoke void @__cxa_rethrow() #17
          to label %132 unwind label %78

93:                                               ; preds = %78
  br label %124

94:                                               ; preds = %60
  %95 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %96 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %97 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %98 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %97) #3
  call void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %95, %struct.CUgraphNode_st** %96, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %98)
  %99 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %100 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %101 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %102, i32 0, i32 2
  %104 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %103, align 8
  %105 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %106 = ptrtoint %struct.CUgraphNode_st** %104 to i64
  %107 = ptrtoint %struct.CUgraphNode_st** %105 to i64
  %108 = sub i64 %106, %107
  %109 = sdiv exact i64 %108, 8
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %99, %struct.CUgraphNode_st** %100, i64 %109)
  %110 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %111 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %112, i32 0, i32 0
  store %struct.CUgraphNode_st** %110, %struct.CUgraphNode_st*** %113, align 8
  %114 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %115 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %116, i32 0, i32 1
  store %struct.CUgraphNode_st** %114, %struct.CUgraphNode_st*** %117, align 8
  %118 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %119 = load i64, i64* %7, align 8
  %120 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %118, i64 %119
  %121 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %122, i32 0, i32 2
  store %struct.CUgraphNode_st** %120, %struct.CUgraphNode_st*** %123, align 8
  ret void

124:                                              ; preds = %93
  %125 = load i8*, i8** %14, align 8
  %126 = load i32, i32* %15, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

129:                                              ; preds = %78
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #15
  unreachable

132:                                              ; preds = %92
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  %10 = bitcast i8* %9 to %struct.CUgraphNode_st**
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11) #3
  %13 = load %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %12, align 8
  store %struct.CUgraphNode_st* %13, %struct.CUgraphNode_st** %10, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %11 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #17
  unreachable

17:                                               ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %19 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  store i64 %19, i64* %8, align 8
  %20 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %8, i64* nonnull align 8 dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  br label %34

32:                                               ; preds = %26
  %33 = load i64, i64* %7, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %5) #3
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %8) #3
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %12 = ptrtoint %struct.CUgraphNode_st** %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9 to %"class.std::allocator"*
  %11 = load i64, i64* %4, align 8
  %12 = call %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %10, i64 %11)
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %8
  %15 = phi %struct.CUgraphNode_st** [ %12, %8 ], [ null, %13 ]
  ret %struct.CUgraphNode_st** %15
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %6, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.CUgraphNode_st** %12, %struct.CUgraphNode_st*** %13, align 8
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.CUgraphNode_st** %15, %struct.CUgraphNode_st*** %16, align 8
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  %23 = call %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st** %17, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %18)
  ret %struct.CUgraphNode_st** %23
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.CUgraphNode_st*** %4
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, %struct.CUgraphNode_st** %7)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %13 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  ret i64 %15
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %0, i64* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret i64 %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.CUgraphNode_st*** %1, %struct.CUgraphNode_st**** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st***, %struct.CUgraphNode_st**** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  store %struct.CUgraphNode_st** %8, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, i64 %7, i8* null)
  ret %struct.CUgraphNode_st** %8
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18
  %16 = bitcast i8* %15 to %struct.CUgraphNode_st**
  ret %struct.CUgraphNode_st** %16
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #13

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) #14

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %20, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %21, %struct.CUgraphNode_st** %17)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  call void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st** %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  ret %struct.CUgraphNode_st** %6
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %11, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false)
  %16 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = call %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %18, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %16)
  ret %struct.CUgraphNode_st** %21
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %17, %struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %15)
  ret %struct.CUgraphNode_st** %20
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %19)
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %15, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %21)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %7)
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %9)
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %11)
  %13 = call %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %10, %struct.CUgraphNode_st** %12)
  ret %struct.CUgraphNode_st** %13
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = call %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2)
  %5 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %4)
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %10)
  ret %struct.CUgraphNode_st** %11
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #7 comdat align 2 {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %10 = ptrtoint %struct.CUgraphNode_st** %8 to i64
  %11 = ptrtoint %struct.CUgraphNode_st** %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %18 = bitcast %struct.CUgraphNode_st** %17 to i8*
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %20 = bitcast %struct.CUgraphNode_st** %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 %22, i1 false)
  br label %23

23:                                               ; preds = %16, %3
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %24, i64 %25
  ret %struct.CUgraphNode_st** %26
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st** %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %7, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_b10.cu() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

define internal void @__cuda_register_globals(i8** %0) {
  %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32, i32, i32, i32)* @_Z21__device_stub__conv2diPfS_S_iiiiii to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %3 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32, i32, i32, i32, i32)* @_Z27__device_stub__mean_poolingiPfS_iiiii to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %4 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32, i32, i32)* @_Z18__device_stub__gapiPfS_iii to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @2, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %5 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z26__device_stub__dot_productiPfS_S_i to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @3, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %6 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__concatiPfS_S_i to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @4, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  ret void
}

declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*)

declare dso_local void @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i64, i32, i32)

declare dso_local void @__cudaRegisterManagedVar(i8**, i8*, i8*, i8*, i64, i32)

declare dso_local void @__cudaRegisterSurface(i8**, i8*, i8*, i8*, i32, i32)

declare dso_local void @__cudaRegisterTexture(i8**, i8*, i8*, i8*, i32, i32, i32)

declare dso_local i8** @__cudaRegisterFatBinary(i8*)

define internal void @__cuda_module_ctor(i8* %0) {
  %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*))
  store i8** %2, i8*** @__cuda_gpubin_handle, align 8
  call void @__cuda_register_globals(i8** %2)
  call void @__cudaRegisterFatBinaryEnd(i8** %2)
  %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor)
  ret void
}

declare dso_local void @__cudaRegisterFatBinaryEnd(i8**)

declare dso_local void @__cudaUnregisterFatBinary(i8**)

define internal void @__cuda_module_dtor(i8* %0) {
  %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8
  call void @__cudaUnregisterFatBinary(i8** %2)
  ret void
}

declare dso_local i32 @atexit(void (i8*)*)

attributes #0 = { noinline uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { mustprogress noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nobuiltin allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn }
attributes #18 = { allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 11, i32 2]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 13.0.0"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
