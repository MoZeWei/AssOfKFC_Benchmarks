; ModuleID = '/home/mozw/Exp2/src/b1.cu'
source_filename = "/home/mozw/Exp2/src/b1.cu"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.Benchmark1 = type { %struct.Benchmark.base, float*, float*, float*, float*, float*, %struct.CUstream_st*, %struct.CUstream_st*, %struct.CUgraph_st*, %struct.CUgraphExec_st*, %"class.std::vector", %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams }
%struct.Benchmark.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%struct.CUstream_st = type opaque
%struct.CUgraph_st = type opaque
%struct.CUgraphExec_st = type opaque
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" }
%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" = type { %struct.CUgraphNode_st**, %struct.CUgraphNode_st**, %struct.CUgraphNode_st** }
%struct.CUgraphNode_st = type opaque
%struct.cudaKernelNodeParams = type { i8*, %struct.dim3, %struct.dim3, i32, i8**, i8** }
%struct.dim3 = type { i32, i32, i32 }
%struct.Benchmark = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%struct.CUevent_st = type opaque
%"class.__gnu_cxx::__normal_iterator" = type { %struct.CUgraphNode_st** }
%"class.std::allocator" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.std::allocator.0" = type { i8 }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %struct.CUgraphNode_st** }

$_ZN4dim3C2Ejjj = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_ = comdat any

$_ZNSt7__cxx119to_stringEf = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZN9BenchmarkD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_ = comdat any

$_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_ = comdat any

$_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m = comdat any

$_ZNSaIP14CUgraphNode_stED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E = comdat any

$_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv = comdat any

$_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_ = comdat any

$_ZTS9Benchmark = comdat any

$_ZTI9Benchmark = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@_ZTV10Benchmark1 = dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10Benchmark1 to i8*), i8* bitcast (void (%class.Benchmark1*)* @_ZN10Benchmark15allocEv to i8*), i8* bitcast (void (%class.Benchmark1*)* @_ZN10Benchmark14initEv to i8*), i8* bitcast (void (%class.Benchmark1*)* @_ZN10Benchmark15resetEv to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark113execute_asyncEi to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark112execute_syncEi to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark117execute_cudagraphEi to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark124execute_cudagraph_manualEi to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark124execute_cudagraph_singleEi to i8*), i8* bitcast (void (%class.Benchmark1*, i32)* @_ZN10Benchmark116execute_AssOfKFCEi to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.Benchmark1*, i1)* @_ZN10Benchmark112print_resultB5cxx11Eb to i8*), i8* bitcast (void (%class.Benchmark1*)* @_ZN10Benchmark1D1Ev to i8*), i8* bitcast (void (%class.Benchmark1*)* @_ZN10Benchmark1D0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS10Benchmark1 = dso_local constant [13 x i8] c"10Benchmark1\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS9Benchmark = linkonce_odr dso_local constant [11 x i8] c"9Benchmark\00", comdat, align 1
@_ZTI9Benchmark = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS9Benchmark, i32 0, i32 0) }, comdat, align 8
@_ZTI10Benchmark1 = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10Benchmark1, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9Benchmark to i8*) }, align 8
@.str = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@0 = private unnamed_addr constant [16 x i8] c"_Z6squareiPfS_i\00", align 1
@1 = private unnamed_addr constant [18 x i8] c"_Z6reduceiPfS_S_i\00", align 1
@2 = private constant [11105 x i8] c"P\EDU\BA\01\00\10\00P+\00\00\00\00\00\00\02\00\01\01@\00\00\00h!\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00F\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00q\00\00\00\00\00\00\00\00\00\00\00\C0 \00\00\00\00\00\00\00\1D\00\00\00\00\00\00F\05F\00@\008\00\03\00@\00\0F\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text._Z6reduceiPfS_S_i\00.nv.info._Z6reduceiPfS_S_i\00.nv.shared._Z6reduceiPfS_S_i\00.nv.global\00.rela.text._Z6reduceiPfS_S_i\00.rel.text._Z6reduceiPfS_S_i\00.nv.constant0._Z6reduceiPfS_S_i\00.text._Z6squareiPfS_i\00.nv.info._Z6squareiPfS_i\00.nv.shared._Z6squareiPfS_i\00.nv.constant0._Z6squareiPfS_i\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00_Z6reduceiPfS_S_i\00.text._Z6reduceiPfS_S_i\00.nv.info._Z6reduceiPfS_S_i\00.nv.shared._Z6reduceiPfS_S_i\00.nv.global\00blockIdx\00blockDim\00threadIdx\00gridDim\00$_Z6reduceiPfS_S_i$_Z11warp_reducef\00$_Z6reduceiPfS_S_i$_Z16__shfl_down_syncjfji\00$_Z6reduceiPfS_S_i$_ZL9atomicAddPff\00$_Z6reduceiPfS_S_i$__cuda_sm70_shflsync_down\00.rela.text._Z6reduceiPfS_S_i\00.rel.text._Z6reduceiPfS_S_i\00.nv.constant0._Z6reduceiPfS_S_i\00_param\00_Z6squareiPfS_i\00.text._Z6squareiPfS_i\00.nv.info._Z6squareiPfS_i\00.nv.shared._Z6squareiPfS_i\00.nv.constant0._Z6squareiPfS_i\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.actionl\02\00\00\03\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\002\00\00\00\12\10\0C\00\00\00\00\00\00\00\00\00\00\0B\00\00\00\00\00\00\C4\01\00\00\12\10\0D\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\04\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(P\04\0C\01\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\80\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\80\80\80(\16\81\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\80\04\00\00\00\00\00\000\02\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\8C\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\8C\80\80(\16\8D\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\D8\00\00\00\00\00\00\00\C0\06\00\00\00\00\00\00p\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\8A\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\8A\80\80(\16\8B\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00@\01\00\00\00\00\00\00@\08\00\00\00\00\00\00\E0\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\89\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\89\80\80(\16\8A\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\A8\01\00\00\00\00\00\000\0A\00\00\00\00\00\00\C0\00\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|q\00\00\00\04\0A\08\00\0B\00\00\00`\01$\00\03\19$\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04(\08\00\B0\07\00\00 \08\00\00\04\1C\08\00\F0\03\00\00p\04\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\0D\00\00\00`\01\1C\00\03\19\1C\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00@\01\00\00\90\02\00\00\04\1E\04\00\00\00\00\00\00\00\00\00K\00\00\00\00\00\00\00\00\02\02\08\10\0A/\22\00\00\00\08\00\00\00\00\00\00\08\08\00\00\00\00\00\00\10\08\00\00\00\00\00\00\18\08\00\00\00\00\00\00 \08\00\00\00\00\00\00(\08\00\00\00\00\00\000\08\00\00\00\00\00\008\08\00\00\00\00\01\00\00\08\00\00\00\00\01\00\08\08\00\00\00\00\01\00\10\08\00\00\00\00\01\00\18\08\00\00\00\00\01\00 \08\00\00\00\00\01\00(\08\00\00\00\00\01\000\08\00\00\00\00\01\008\08\00\00\00\00\02\00\00\08\00\00\00\00\02\00\08\08\00\00\00\00\02\00\10\08\00\00\00\00\02\00\18\08\00\00\00\00\02\00 \08\00\00\00\00\02\00(\08\00\00\00\00\02\000\08\00\00\00\00\02\008\08\00\00\00\00\00\00\00\14,\00\00\00X\02\00\00\00\00\00\00\02\00\00\00\11\00\00\00\00\02\00\00\00\00\00\00\02\00\00\00\10\00\00\00\98\01\00\00\00\00\00\00\02\00\00\00\10\00\00\000\01\00\00\00\00\00\00\02\00\00\00\10\00\00\00\C8\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00H\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\B0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$t\0F\FF \00\00\00\FF\00\8E\07\00\E4\0F\00$r\10\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00$z\11\00\00\00\00\00\03\02\8E\07\00\E2\1F\00\10z\03\FF\00\09\00\00\FF\E4\7F\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\01\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00\02z\08\00\00^\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E2\0F\00Ey\00\00 \02\00\00\00\00\80\03\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\C4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E4\0F\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\01\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00G\09\00\00\80\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\06\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\08\02,\00\00\00\00\E9\10\00\00h\0F\00\80y\0D\02 \00\00\00\00\E9\10\00\00b\0F\00$x\0B\00\04\00\00\00\FF\00\8E\07\00\E2O\00\19x\09\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\09\00\02\00\00\00\09\02\01\00\00\E4\0F\00\10r\04\04\0B\00\00\00\FF\E0\F1\07\00\E4\8F\08\10r\06\06\0B\00\00\00\FF\E0\F3\07\00\C6\0F\01$x\05\05\01\00\00\00\09\06\0E\00\00\E2\0F\00\10r\07\07\09\00\00\00\FF\E4\FF\00\00\E2\0F\00$v\0B\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\80y\09\02(\00\00\00\00\E9\10\00\00\AA\0E\00\80y\04\04\00\00\00\00\00\E9\10\00\00\E8\0E\00\80y\07\06\00\00\00\00\00\E9\10\00\00\E2\0E\00$z\0B\0B\00\03\00\00\08\02\8E\07\00\D0\0F\02\85s\00\02,\00\00\00\0B\E9\10\00\00\E8\01\00\80y\08\02,\00\00\00\00\E9\10\00\00\22\0F\00!r\00\04\07\00\00\80\00\00\00\00\00\C8\8F\00!r\09\00\09\00\00\00\00\00\00\00\00\D0O\00\85s\00\02(\00\00\00\09\E9\10\00\00\E2\01\00\0Cr\00\08\0D\00\00\00pb\F0\03\00\D8\0F\01G\89\00\00\80\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\07\02(\00\00\00\00\E9\10\00\00b\01\00\02x\00\00\A0\03\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\E0\00\00\00\00\00\C0\03\00\EA\1F\02\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\19y\07\00\00\00\00\00\00!\00\00\00(\0E\00\85s\00\02(\00\00\00\05\E9\10\00\00\E2\03\00\10x\00\00\FF\FF\FF\FF\FF\E0\FF\07\00\C8O\00\12r\FF\07\00\00\00\00\FF\C0\80\07\00\D8\1F\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\0D\02(\00\00\00\00\E9\10\00\00h!\00\80y\04\02\08\00\00\00\00\EB\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\000\00\00\00\00\00\80\03\00\E2\0F\00\02x\0A\00`\04\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\E0\03\00\00\00\00\C0\03\00\EA\1F\02Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\10x\04\010\00\00\00\FF\E0\FF\07\00\E2\0F\00$t\0B\FF \00\00\00\FF\00\8E\07\00\C6\0F\00\10z\04\04\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\05\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\04\04\00\00\00\0B\E9\10\00\00\E8\01\00\80y\06\04\04\00\00\00\00\E9\10\00\00\A4\0E\00\11r\06\06\06\00\00\00\FF\08\8F\07\00\C8O\00\19x\09\FF\01\00\00\00\06\14\01\00\00\D0\0F\00\85s\00\04\08\00\00\00\09\E9\10\00\00\E8\01\00\80y\06\04\08\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00@\01\00\00\00\00\80\03\00\E4\0F\00\85s\00\04\00\00\00\00\07\E9\10\00\00\E2\01\00\0Cx\00\06\01\00\00\00pb\F0\03\00\D8O\00G\89\00\00\00\01\00\00\00\00\80\03\00\EA\1F\00\80y\09\04\00\00\00\00\00\E9\10\00\00h\01\00\80y\0B\04\08\00\00\00\00\E9\10\00\00b\01\00\02x\0C\00\B0\05\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\10\01\00\00\00\00\C0\03\00\EA\1F\02\80y\07\04\08\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\04\00\00\00\00\00\E9\10\00\00\E2\0E\00\11r\07\07\07\00\00\00\FF\08\8F\07\00\C8O\00\19x\09\FF\01\00\00\00\07\14\01\00\00\D0\0F\00\85s\00\04\08\00\00\00\09\E9\10\00\00\E8\01\00\80y\08\04\08\00\00\00\00\E9\10\00\00\A2\0E\00!r\07\06\0B\00\00\00\00\00\00\00\00\D0\8F\00\85s\00\04\00\00\00\00\07\E9\10\00\00\E2\01\00\0Cx\00\08\01\00\00\00pb\F0\03\00\D8O\00F\09\00\00\00\00\00\00\00\00\80\03\00\E2\0F\00\82\FB\FF\FF\00\00\00\00\00\08\00\00\00\E2\0F\00G\09\00\00\00\FF\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\04\00\00\00\00\00\E9\10\00\00\22\00\00$r\06\FF\FF\00\00\00\00\00\8E\07\00\E2\0F\00\02x\07\00\00\00\00\00\00\0F\00\00\00\CC\0F\00Py\00\06@\F9\FF\FF\FF\FF\C3\03\00\EA\1F\00\10x\06\01<\00\00\00\FF\E0\FF\07\00\E2\0F\00$t\11\FF \00\00\00\FF\00\8E\07\00\C6\0F\00\10z\06\06\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\07\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\06\0C\00\00\00\11\E9\10\00\00\E8\01\00\80y\0A\06\0C\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\06\04\00\00\00\09\E9\10\00\00\E8\01\00\85s\00\06\08\00\00\00\0B\E9\10\00\00\E8\01\00\80y\08\06\04\00\00\00\00\E9\10\00\00h\01\00\80y\0D\06\08\00\00\00\00\E9\10\00\00b\01\00$t\0F\FF\FF\FF\FF\FF\FF\00\8E\07\00\D0\0F\00\85s\00\06\00\00\00\00\0F\E9\10\00\00\E2\01\00\10x\0A\0A \00\00\00\FF\E1\FF\07\00\C8O\00\11x\0A\0A\1F\00\00\00\FF@\8E\07\00\E2\0F\00Gy\00\00R\00\00\00\00\00\80\03\00\EE\0F\00\89s\08\08\0D\00\00\08\0A\00\0E\00\00d\10\02$r\06\FF\FF\00\00\00\0C\00\8E\07\00\E2\0F\00\02r\0B\00\08\00\00\00\00\0F\00\00\00\E2/\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06\00\F8\FF\FF\FF\FF\C3\03\00\EA\1F\00\80y\06\06\00\00\00\00\00\E9\10\00\00b\11\00\02x\09\000\08\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00\00\02\00\00\00\00\C0\03\00\EA\1F\02Gy\00\00\80\FF\FF\FF\FF\FF\83\03\00\EA\0F\00\10x\02\010\00\00\00\FF\E0\FF\07\00\C8\0F\00\10z\02\02\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\0F\00\85s\00\02\18\00\00\00\0D\E9\10\00\00\E8\0F\00\80y\06\02\10\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0F\02\18\00\00\00\00\E9\10\00\00\E8\0E\00\85s\00\02\00\00\00\00\06\EB\10\00\00\E8O\00\85s\00\02\08\00\00\00\0F\E9\10\00\00\E8\81\00\80y\11\02\08\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02\00\00\00\00\00\EB\10\00\00\A2\0E\00\02x\0B\00\00\00\00\00\00\0F\00\00\00\C6\0F\00\8As\FF\08\11\00\00\00\FFG\11\00\00&N\00P\09\00\0A\E0\F6\FF\FF\FF\FF\C3\03\00\EA\1F\00\AAs\FF\08\00\00\00\00\00\05\00\00\00$\0E\00G\89\00\00\90\00\00\00\00\00\80\03\00\EA\1F\00\12x\08\08\FF\FF\FF\00\FF\C0\8E\07\00\D0\0F\00\84y\02\08\00\00\00\00\00\18\00\00\00$\0E\00!r\03\11\02\00\00\00\00\00\00\00\00\D0\1F\00\8Ds\03\08\02\00\00\00\03\00\80\01\00$\0E\00\0Cx\00\03\01\00\00\00p \F0\03\00\D8\1F\00G\89\00\00\B0\FF\FF\FF\FF\FF\83\03\00\EA\0F\00$r\02\FF\FF\00\00\00\0A\00\8E\07\00\E4\0F\00$t\03\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\020\F6\FF\FF\FF\FF\C3\03\00\EA\0F\00\80y\00\08\00\00\00\00\00\E9\10\00\00\A2\0E\00$r\02\FF\FF\00\00\00\0A\00\8E\07\00\E2\0F\00\02x\03\00\00\00\00\00\00\0F\00\00\00\E2\0F\00!r\11\11\00\00\00\00\00\00\00\00\00\D0O\00\85s\00\08\00\00\00\00\11\E9\10\00\00\E4\01\00Py\00\02\D0\F5\FF\FF\FF\FF\C3\03\00\EA\1F\00Hs\00\00\06\00\00\00\00\00\80\03\00\E8\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\89s\08\08\0D\00\00\08\0A\00\0E\00\00\22\0E\00$r\06\FF\FF\00\00\00\09\00\8E\07\00\CC\0F\00Py\00\06\80\F5\FF\FF\FF\FF\C3\03\00\EA\1F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\E0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0A\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$z\0B\00\00\00\00\00\03\02\8E\07\00\C6\1F\00\10z\03\FF\00\09\00\00\FF\E4\7F\00\00\D0\0F\00\85s\00\02\18\00\00\00\0A\EB\10\00\00\E8\01\00\80y\0C\02\18\00\00\00\00\EB\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00\02z\06\00\00\\\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\02z\09\00\00X\00\00\00\0F\00\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\CC\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\01\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\09\E9\10\00\00\E2\01\00\0Cr\00\0D\0C\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\80y\00\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E2\0E\00$x\09\00\04\00\00\00\FF\00\8E\07\00\E2O\00\19x\07\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\0B\00\02\00\00\00\07\02\01\00\00\E4\0F\00\10r\06\04\09\00\00\00\FF\E0\F1\07\00\C8\8F\00\10r\07\05\0B\00\00\00\FF\E4\7F\00\00\E4\0F\00\80y\04\02\08\00\00\00\00\EB\10\00\00\AC\0E\00\80y\06\06\00\00\00\00\00\E9\10\00\00\E2\0E\00\10r\04\04\09\00\00\00\FF\E0\F1\07\00\CAO\00$x\05\05\01\00\00\00\0B\06\0E\00\00\E4\0F\00 r\09\06\06\00\00\00\00\00@\00\00\D0\8F\00\85s\00\04\00\00\00\00\09\E9\10\00\00\E8\01\00\80y\00\02\1C\00\00\00\00\E9\10\00\00\A2\0E\00\02z\0B\00\00\00\00\00\00\0F\00\00\00\CA\0F\00$z\0B\0B\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02\1C\00\00\00\0B\E9\10\00\00\E8\01\00\80y\0C\02\18\00\00\00\00\EB\10\00\00\A4\0E\00\0Cr\00\0D\0C\00\00\00pb\F0\03\00\D8O\00G\89\00\00\C0\FE\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y{\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\04\00\00\00\00\00\00\B0\01\00\00\00\00\00\00\02\00\00\00\0F\00\00\00\08\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00N\01\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F8\05\00\00\00\00\00\00\80\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\08\00\00\00\00\00\00\F0\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00h\09\00\00\00\00\00\00\9C\00\00\00\00\00\00\00\03\00\00\00\0C\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FC\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\0A\00\00\00\00\00\00\80\00\00\00\00\00\00\00\03\00\00\00\0D\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00~\01\00\00\0B\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\88\0A\00\00\00\00\00\00\D8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00[\01\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\0B\00\00\00\00\00\00`\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\C6\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C0\0B\00\00\00\00\00\00\84\01\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\01\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00D\0D\00\00\00\00\00\00|`\09\00\00\00\00\00\00\\\09\00\00@\00\00\00\02\00\07\00P\00\00\00\00\00\00\00\00\00\00\00\11 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\CB\1D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0 \0A\0A\0A\0A.version 7.2\0A.target sm_70\0A.address_size 64.\00\F0\09weak .func (.param .b32 \12\00\F8\0E_retval0) _Z11warp_reducef\0A(\0A-\00\0C\1F\00\11_\1C\00\7F_0\0A)\0A;\0A]\00\10\D9L9atomicAddPf]\00-64\1F\00\04]\00\1B,\83\00\0F&\00\02\121\83\00\0F\E6\00\16\FE\066__shfl_down_syncjfji\EE\00\0F'\00\02\0E\99\00\0F.\00\10\1F1.\00\1A\1F2.\00\1A\123\FD\00\FF\10global .align 1 .b8 blockIdx[1]\22\00\09?Dim\22\00\07othreadE\00\0ADgridD\00\F6\11\0A.visible .entry _Z6squareiPfS_ie\01<u32\1D\00\0E\\\01?u64%\00\04\1F1%\00\11/2,o\00\10\00A\01f{\0A.loc\D9\00\118\D9\00!__\15\00\A0_depot0[32\02\012reg\B3\02;%SP\0F\00\14L\10\00\A4pred %p<2>\12\00\85f32 %f<3\11\00\00\DA\01i%r<15>E\00@rd<1%\00c\0Amov.uW\00\1B,\8A\00b;\0Acvta\B2\00\04%\00\13,\81\00\22ld\F2\00\01\F1\00o%r2, [\F7\00\04\18]-\00\02|\00\0F.\00\07\1F2.\00\00\1F1.\00\06-1]\89\00\0F-\00\07#0]\D0\00#to_\02\04a\00 3,\06\00\132\1F\00\0A\1C\00\114\1C\00\1F3;\00\05\115\1F\00\1F1;\00\02\116\1C\00Q5;\0Ast\9D\00p[%SP+0]\16\00\121\15\00\2264\15\00\118\15\00*d6\16\00\2216\17\00\1A4B\00!24\17\00\222;\BC\01\01\F6\00\00\C2\00xctaid.x\17\00\00\BD\00#nt\16\00qul.lo.s\19\00#5,5\00(r40\00\00\B2\00\03/\003add,\00$7,1\00\03\A0\00\05\89\00\02\B7\00\F2\047;\0Abra.uni LBB0_1;\0A\08\00\10:\9C\01\02Y\00%8,3\00\16;\16\00%9,\D2\00\92;\0Asetp.geu\002p1,6\00\D2%r9;\0A@%p1 bra`\00\1B4p\00\132p\00\122p\00\02|\01%7,D\01\01q\00\02\CB\00\19d\88\004shl\0D\03#9,\1E\00\132\FA\00\02\17\00310,M\00\00$\00\01I\00\02a\03\00f\02\01 \00\12]Y\01#rn\19\00\222,\1E\00G%f1;\8F\00411,\EA\01\0Aa\00$2,\1F\00\02b\00!stI\00\01]\00\102_\01+f2\EF\00\133\EF\00'3:\B9\01(10\EA\01\06\17\00\00X\00\16n\19\02\08\03\02\02{\00\019\00#r1\AD\00\025\00\183%\01\01\AD\00\021\00#4,\1E\00\00=\00\0F\0B\02\02/14\0C\02\04\AF4:\0Aret;\0A\0A}\BA\05\02\02\EA\07\01\AE\03\0F\BC\05\01\0A\1F\00\0F\BE\05\06\0F'\00\02\1F1'\00\13\1F2'\00\13/3,\9C\00\12\1F4\EB\05\13Y1[48]\97\05\0F\EB\05\0F\1C3\EB\05,12\EC\05921>F\00\00\EC\05\1F7\EC\05\0C\1F1\EC\05\1F\0F\FA\00\03\09\92\05\05_\05\0E0\00\0F\1E\06\0F\0E0\00\0F \06\0B\0E0\00\0F\22\06\0A\0E/\00\0F$\06\0A\0A\08\06\0F\05\06\01\1F4;\00\05\1F6_\06\08\147\F9\05\0F;\00\03\01\02\05\0F_\06\04\03\B4\04\0F_\06\17\1F9_\06\03\1A7\17\00\03_\06\0C\B8\06/32v\06\02\1B3\09\04\123U\00\1B3\86\06\1A0&\00=40]|\06\1F5\C3\06\03\1F6\C3\06\05\09\97\06\060\00\1F8\C3\06\01$9,1\00\0B/\01\124\ED\00\199\B7\04\131\B7\04\191\C3\06\00*\05\044\00\08.\05%1,!\01\0F\C5\06\02\06b\05\08\C7\06\1B1\C7\06\131\C7\06\1A1\C7\06/11\C8\06\03(12\8D\00\07\C9\06\02\9F\05\01 \00\0B\CB\06\184j\06'13\CD\06\137\CD\06\04\D8\00\03{\00\185\9E\07\08J\00$6, \00\0CJ\00\138J\00\00\AD\006sub\17\07\229,h\007%f8/\00\06S\01\130c\00\051\00\01\A8\00\01!\00(%f\17\07\05=\02;f11A\01\133A\01\0A\19\07\09@\02\06\17\00\1F7\19\07\08$8,9\008r17\EB\01\189u\01$ad\8E\01320,\1E\00\00=\00\0Fa\02\02/20b\02\04+4:U\08\04\0E\01F{ \0A\09\D6\05Ctemp\A3\04Ereg;\85\06\00\1C\00\01\0B\00\02a\03\01\0B\00\02*\01\02\16\00\13+,\01\0A2\00\03\A4\0Ea;\0Acall\94\00\14(\B7\0E<, \0A\80\0FR, \0A(\0AO\00'\0A)N\05\05\F1\08\13[=\00\10+\B8\00O} \0A\09\AE\01\00\098\04&12\A5\03\0Ew\08/36w\08\04\92-1;\0Aand.b\18\00$5,K\00\01x\08\01{\03\14n{\03#2,#\00\110x\03\162x\03\1B6\8A\01\135\8A\01\195x\03\170\B0\09\05\A1\01\1F4\A1\01 .64\A1\01\00\15\00\09\A1\01\00q\00\0F\D5\01\00\1F1\D5\01\02\131\D5\01\1F4\D5\01\1B\0A\D2\10\07\D5\01\22, \09\00\1F1\DE\01\00\1F5\DE\01\00\09>\01\136>\01\186\E1\09\0F\07\12#\19(\CF\00\0F\06\12\08\0CZ\09\1E4Z\09Y2[12]\05\09\0FE\0F \168G\09\03E\0F\1F4F\09\0C\1F2F\09\12\06\EE\03\0F\E5\00\05\1A]\F2\04\05\C5\03\07C\03\0E{\07\144\FB\07'ld\A9\09\02\1A\00\00$\06\16r\B6\07\01\1B\00(31g\03\134\16\00\01\BC\07\00-\00\15s\96\07\00\1C\00\03R\08(32R\08\195K\03\132\D5\04\1927\07\176I\03\01\A3\03(lt\1E\07;6, \1A\07\1B2\1A\07\132\1A\0772_2,\05\04-\04'0]\F0\00\177l\00\09\12\08\19-<\01\129<\01\0Fb\05(\1Cbb\05/r8\BF\03\1E\1F32\00\00\1F2d\00\02\132d\00\1F72\00\00\1F32\00\02\1332\00\1F9\F8\05\1C\0F\00\14\02\0F+\04\01\04\09\00\142\09\00\1F3=\04\00\1F4=\04\00\05\C1\01\176\C1\01\09\FA\07\227,\1E\00\01\E1\04\0E\06\03\1B7\1D\02\133\1D\02\1F3\AB\09\01\198\F9\02\151\90\09\0A\FB\02$12\18\00\02\A8\09\06\FE\02$13d\06\0F\00\03\02/13\01\03\04\08\D6\07\172\E9\00\0A\0F\02\08\0F\05\15+'\07\04G\05\0F@\05\10\0A\D3\05\07@\05/64\E9\16/\0F\C0\0E\10\1F3\AB\14\18\02\0D\01\1E<\87\14\0FT\05\0D\1F3T\05\1E\0F\D3\00\03\1E]9\0E\0F/\00\08/0]-\0D\03\1A1\94\02$24\9B\05(ld\BF\0E\033\00\1E;\07\02+24Z\00$0]\1F\0E\08Y\00\148\0F\02(ldG\0F\04I\02\0D\08\05\00\EA\02\00\C7\00\00\96\19\08\AE\084rd3n\04\0F}\02\0E/4;\C4\07!\0F4\04\02\0D\CC\07\0FZ\18\09/0,.\00\19\1F1.\00\1A\1F2\E4\18\1E\0F^\08\10!4[\DC\01\07\C8\02\0F\F8\02\0E%4>!\00\03L\08\1F1\F8\02\0C\1F4\92\11\18\00\06\02\0F\DB\00\0D\1D]6\00\1F26\00\0F.2]d\03\0F6\00\0F\0Fu\11\00\0F6\00\10\04s\03.32\CB\10\19f\E5\08*f1*\00\02\8E\05\1A2\15\00\02?\15'r3 \08/4,B\03\00\08%\09\05*\00\175W\03\0D\CB\08)12`\08\137\8B\09Eub.s\83\10\00\16\00\021\17\00\9C\0F\06\85\10\838, 8;\0Aor\14\00\02u\06\129\92\06\00\1A\01\10.\15\01\10.\1F\01\00\22\00\11\09\E1\03\01\A4\00\03\8B\09\02\A6\06\1F4\CE\03\10\C03;\0Aret;\0A\0A}\0A\00\00\00\00\00\00", section ".nv_fatbin", align 8
@__cuda_fatbin_wrapper = internal constant { i32, i32, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([11105 x i8], [11105 x i8]* @2, i64 0, i64 0), i8* null }, section ".nvFatBinSegment", align 8
@__cuda_gpubin_handle = internal global i8** null, align 8
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_b1.cu, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor to void ()*), i8* null }]

@_ZN10Benchmark1D1Ev = dso_local unnamed_addr alias void (%class.Benchmark1*), void (%class.Benchmark1*)* @_ZN10Benchmark1D2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z21__device_stub__squareiPfS_i(i32 %0, float* %1, float* %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca float*, align 8
  %7 = alloca float*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.dim3, align 8
  %10 = alloca %struct.dim3, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca { i64, i32 }, align 8
  %14 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %5, align 4
  store float* %1, float** %6, align 8
  store float* %2, float** %7, align 8
  store i32 %3, i32* %8, align 4
  %15 = alloca i8*, i64 4, align 16
  %16 = bitcast i32* %5 to i8*
  %17 = getelementptr i8*, i8** %15, i32 0
  store i8* %16, i8** %17, align 8
  %18 = bitcast float** %6 to i8*
  %19 = getelementptr i8*, i8** %15, i32 1
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %15, i32 2
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32* %8 to i8*
  %23 = getelementptr i8*, i8** %15, i32 3
  store i8* %22, i8** %23, align 8
  %24 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %9, %struct.dim3* %10, i64* %11, i8** %12)
  %25 = load i64, i64* %11, align 8
  %26 = load i8*, i8** %12, align 8
  %27 = bitcast { i64, i32 }* %13 to i8*
  %28 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 12, i1 false)
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = bitcast { i64, i32 }* %14 to i8*
  %34 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 12, i1 false)
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = bitcast i8* %26 to %struct.CUstream_st*
  %40 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32)* @_Z21__device_stub__squareiPfS_i to i8*), i64 %30, i32 %32, i64 %36, i32 %38, i8** %15, i64 %25, %struct.CUstream_st* %39)
  br label %41

41:                                               ; preds = %4
  ret void
}

declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**)

declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*)

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z21__device_stub__reduceiPfS_S_i(i32 %0, float* %1, float* %2, float* %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store float* %3, float** %9, align 8
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__reduceiPfS_S_i to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark18prefetchERP11CUstream_stS2_(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, %struct.CUstream_st** nonnull align 8 dereferenceable(8) %1, %struct.CUstream_st** nonnull align 8 dereferenceable(8) %2) #6 align 2 {
  %4 = alloca %class.Benchmark1*, align 8
  %5 = alloca %struct.CUstream_st**, align 8
  %6 = alloca %struct.CUstream_st**, align 8
  store %class.Benchmark1* %0, %class.Benchmark1** %4, align 8
  store %struct.CUstream_st** %1, %struct.CUstream_st*** %5, align 8
  store %struct.CUstream_st** %2, %struct.CUstream_st*** %6, align 8
  %7 = load %class.Benchmark1*, %class.Benchmark1** %4, align 8
  %8 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %9 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %8, i32 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %69

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %7, i32 0, i32 1
  %14 = load float*, float** %13, align 8
  %15 = bitcast float* %14 to i8*
  %16 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %17 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = mul i64 4, %19
  %21 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %22 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %21, i32 0, i32 15
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.CUstream_st**, %struct.CUstream_st*** %5, align 8
  %25 = load %struct.CUstream_st*, %struct.CUstream_st** %24, align 8
  %26 = call i32 @cudaMemPrefetchAsync(i8* %15, i64 %20, i32 %23, %struct.CUstream_st* %25)
  %27 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %7, i32 0, i32 2
  %28 = load float*, float** %27, align 8
  %29 = bitcast float* %28 to i8*
  %30 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %31 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %36 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %35, i32 0, i32 15
  %37 = load i32, i32* %36, align 8
  %38 = load %struct.CUstream_st**, %struct.CUstream_st*** %6, align 8
  %39 = load %struct.CUstream_st*, %struct.CUstream_st** %38, align 8
  %40 = call i32 @cudaMemPrefetchAsync(i8* %29, i64 %34, i32 %37, %struct.CUstream_st* %39)
  %41 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %7, i32 0, i32 3
  %42 = load float*, float** %41, align 8
  %43 = bitcast float* %42 to i8*
  %44 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %45 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = mul i64 4, %47
  %49 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 15
  %51 = load i32, i32* %50, align 8
  %52 = load %struct.CUstream_st**, %struct.CUstream_st*** %5, align 8
  %53 = load %struct.CUstream_st*, %struct.CUstream_st** %52, align 8
  %54 = call i32 @cudaMemPrefetchAsync(i8* %43, i64 %48, i32 %51, %struct.CUstream_st* %53)
  %55 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %7, i32 0, i32 4
  %56 = load float*, float** %55, align 8
  %57 = bitcast float* %56 to i8*
  %58 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %59 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = sext i32 %60 to i64
  %62 = mul i64 4, %61
  %63 = bitcast %class.Benchmark1* %7 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 15
  %65 = load i32, i32* %64, align 8
  %66 = load %struct.CUstream_st**, %struct.CUstream_st*** %6, align 8
  %67 = load %struct.CUstream_st*, %struct.CUstream_st** %66, align 8
  %68 = call i32 @cudaMemPrefetchAsync(i8* %57, i64 %62, i32 %65, %struct.CUstream_st* %67)
  br label %69

69:                                               ; preds = %12, %3
  ret void
}

declare dso_local i32 @cudaMemPrefetchAsync(i8*, i64, i32, %struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark15allocEv(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0) unnamed_addr #6 align 2 {
  %2 = alloca %class.Benchmark1*, align 8
  store %class.Benchmark1* %0, %class.Benchmark1** %2, align 8
  %3 = load %class.Benchmark1*, %class.Benchmark1** %2, align 8
  %4 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 1
  %5 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %6 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = mul i64 4, %8
  %10 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %4, i64 %9, i32 1)
  %11 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %12 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %11, i32 0, i32 14
  store i32 %10, i32* %12, align 4
  %13 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 2
  %14 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %15 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = mul i64 4, %17
  %19 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %13, i64 %18, i32 1)
  %20 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %21 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %20, i32 0, i32 14
  store i32 %19, i32* %21, align 4
  %22 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 3
  %23 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %24 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = mul i64 4, %26
  %28 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %22, i64 %27, i32 1)
  %29 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %30 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %29, i32 0, i32 14
  store i32 %28, i32* %30, align 4
  %31 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 4
  %32 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %33 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = mul i64 4, %35
  %37 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %31, i64 %36, i32 1)
  %38 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %39 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %38, i32 0, i32 14
  store i32 %37, i32* %39, align 4
  %40 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 5
  %41 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %40, i64 4, i32 1)
  %42 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %43 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %42, i32 0, i32 14
  store i32 %41, i32* %43, align 4
  %44 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 6
  %45 = call i32 @cudaStreamCreate(%struct.CUstream_st** %44)
  %46 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %47 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %46, i32 0, i32 14
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %3, i32 0, i32 7
  %49 = call i32 @cudaStreamCreate(%struct.CUstream_st** %48)
  %50 = bitcast %class.Benchmark1* %3 to %struct.Benchmark*
  %51 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %50, i32 0, i32 14
  store i32 %49, i32* %51, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %0, i64 %1, i32 %2) #6 {
  %4 = alloca float**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store float** %0, float*** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load float**, float*** %4, align 8
  %8 = bitcast float** %7 to i8*
  %9 = bitcast i8* %8 to i8**
  %10 = load i64, i64* %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @cudaMallocManaged(i8** %9, i64 %10, i32 %11)
  ret i32 %12
}

declare dso_local i32 @cudaStreamCreate(%struct.CUstream_st**) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark14initEv(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark1*, align 8
  %3 = alloca i32, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %2, align 8
  %4 = load %class.Benchmark1*, %class.Benchmark1** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %32, %1
  %6 = load i32, i32* %3, align 4
  %7 = bitcast %class.Benchmark1* %4 to %struct.Benchmark*
  %8 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  %12 = load i32, i32* %3, align 4
  %13 = add nsw i32 %12, 1
  %14 = sitofp i32 %13 to double
  %15 = fdiv contract double 1.000000e+00, %14
  %16 = fptrunc double %15 to float
  %17 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %4, i32 0, i32 1
  %18 = load float*, float** %17, align 8
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %18, i64 %20
  store float %16, float* %21, align 4
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  %24 = sitofp i32 %23 to double
  %25 = fdiv contract double 2.000000e+00, %24
  %26 = fptrunc double %25 to float
  %27 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %4, i32 0, i32 2
  %28 = load float*, float** %27, align 8
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, float* %28, i64 %30
  store float %26, float* %31, align 4
  br label %32

32:                                               ; preds = %11
  %33 = load i32, i32* %3, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %3, align 4
  br label %5, !llvm.loop !5

35:                                               ; preds = %5
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark15resetEv(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark1*, align 8
  %3 = alloca i32, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %2, align 8
  %4 = load %class.Benchmark1*, %class.Benchmark1** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %32, %1
  %6 = load i32, i32* %3, align 4
  %7 = bitcast %class.Benchmark1* %4 to %struct.Benchmark*
  %8 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  %12 = load i32, i32* %3, align 4
  %13 = add nsw i32 %12, 1
  %14 = sitofp i32 %13 to double
  %15 = fdiv contract double 1.000000e+00, %14
  %16 = fptrunc double %15 to float
  %17 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %4, i32 0, i32 1
  %18 = load float*, float** %17, align 8
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %18, i64 %20
  store float %16, float* %21, align 4
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  %24 = sitofp i32 %23 to double
  %25 = fdiv contract double 2.000000e+00, %24
  %26 = fptrunc double %25 to float
  %27 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %4, i32 0, i32 2
  %28 = load float*, float** %27, align 8
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float, float* %28, i64 %30
  store float %26, float* %31, align 4
  br label %32

32:                                               ; preds = %11
  %33 = load i32, i32* %3, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %3, align 4
  br label %5, !llvm.loop !7

35:                                               ; preds = %5
  %36 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %4, i32 0, i32 5
  %37 = load float*, float** %36, align 8
  %38 = getelementptr inbounds float, float* %37, i64 0
  store float 0.000000e+00, float* %38, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark112execute_syncEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.dim3, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca { i64, i32 }, align 4
  %16 = alloca { i64, i32 }, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %17 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %18 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %19 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %18, i32 0, i32 8
  %20 = load i8, i8* %19, align 4
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %88

22:                                               ; preds = %2
  %23 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %24 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %23, i32 0, i32 11
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %88

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 1
  %29 = load float*, float** %28, align 8
  %30 = bitcast float* %29 to i8*
  %31 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %32 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = mul i64 4, %34
  %36 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %37 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %36, i32 0, i32 15
  %38 = load i32, i32* %37, align 8
  %39 = call i32 @cudaMemPrefetchAsync(i8* %30, i64 %35, i32 %38, %struct.CUstream_st* null)
  %40 = call i32 @cudaDeviceSynchronize()
  %41 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 3
  %42 = load float*, float** %41, align 8
  %43 = bitcast float* %42 to i8*
  %44 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %45 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %44, i32 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = mul i64 4, %47
  %49 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %50 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %49, i32 0, i32 15
  %51 = load i32, i32* %50, align 8
  %52 = call i32 @cudaMemPrefetchAsync(i8* %43, i64 %48, i32 %51, %struct.CUstream_st* null)
  %53 = call i32 @cudaDeviceSynchronize()
  %54 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 2
  %55 = load float*, float** %54, align 8
  %56 = bitcast float* %55 to i8*
  %57 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %58 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %57, i32 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = mul i64 4, %60
  %62 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %63 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %62, i32 0, i32 15
  %64 = load i32, i32* %63, align 8
  %65 = call i32 @cudaMemPrefetchAsync(i8* %56, i64 %61, i32 %64, %struct.CUstream_st* null)
  %66 = call i32 @cudaDeviceSynchronize()
  %67 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 4
  %68 = load float*, float** %67, align 8
  %69 = bitcast float* %68 to i8*
  %70 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %71 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %70, i32 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  %74 = mul i64 4, %73
  %75 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %76 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %75, i32 0, i32 15
  %77 = load i32, i32* %76, align 8
  %78 = call i32 @cudaMemPrefetchAsync(i8* %69, i64 %74, i32 %77, %struct.CUstream_st* null)
  %79 = call i32 @cudaDeviceSynchronize()
  %80 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 5
  %81 = load float*, float** %80, align 8
  %82 = bitcast float* %81 to i8*
  %83 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %84 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %83, i32 0, i32 15
  %85 = load i32, i32* %84, align 8
  %86 = call i32 @cudaMemPrefetchAsync(i8* %82, i64 4, i32 %85, %struct.CUstream_st* null)
  %87 = call i32 @cudaDeviceSynchronize()
  br label %88

88:                                               ; preds = %27, %22, %2
  %89 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %90 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %89, i32 0, i32 6
  %91 = load i32, i32* %90, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %91, i32 1, i32 1)
  %92 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %93 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %92, i32 0, i32 4
  %94 = load i32, i32* %93, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %94, i32 1, i32 1)
  %95 = bitcast { i64, i32 }* %7 to i8*
  %96 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 12, i1 false)
  %97 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %98 = load i64, i64* %97, align 4
  %99 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = bitcast { i64, i32 }* %8 to i8*
  %102 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 12, i1 false)
  %103 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %104 = load i64, i64* %103, align 4
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = call i32 @__cudaPushCallConfiguration(i64 %98, i32 %100, i64 %104, i32 %106, i64 0, i8* null)
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %88
  %110 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 3
  %111 = load float*, float** %110, align 8
  %112 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 1
  %113 = load float*, float** %112, align 8
  %114 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %115 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %111, float* %113, i32 %116)
  br label %117

117:                                              ; preds = %109, %88
  %118 = call i32 @cudaDeviceSynchronize()
  %119 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %120 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %119, i32 0, i32 14
  store i32 %118, i32* %120, align 4
  %121 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %122 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %121, i32 0, i32 6
  %123 = load i32, i32* %122, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %123, i32 1, i32 1)
  %124 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %125 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %124, i32 0, i32 4
  %126 = load i32, i32* %125, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %126, i32 1, i32 1)
  %127 = bitcast { i64, i32 }* %11 to i8*
  %128 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 12, i1 false)
  %129 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %130 = load i64, i64* %129, align 4
  %131 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = bitcast { i64, i32 }* %12 to i8*
  %134 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 12, i1 false)
  %135 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %136 = load i64, i64* %135, align 4
  %137 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = call i32 @__cudaPushCallConfiguration(i64 %130, i32 %132, i64 %136, i32 %138, i64 0, i8* null)
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %117
  %142 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 4
  %143 = load float*, float** %142, align 8
  %144 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 2
  %145 = load float*, float** %144, align 8
  %146 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %147 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %146, i32 0, i32 3
  %148 = load i32, i32* %147, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %143, float* %145, i32 %148)
  br label %149

149:                                              ; preds = %141, %117
  %150 = call i32 @cudaDeviceSynchronize()
  %151 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %152 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %151, i32 0, i32 14
  store i32 %150, i32* %152, align 4
  %153 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %154 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %153, i32 0, i32 6
  %155 = load i32, i32* %154, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %13, i32 %155, i32 1, i32 1)
  %156 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %157 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %156, i32 0, i32 4
  %158 = load i32, i32* %157, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %158, i32 1, i32 1)
  %159 = bitcast { i64, i32 }* %15 to i8*
  %160 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 12, i1 false)
  %161 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %162 = load i64, i64* %161, align 4
  %163 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = bitcast { i64, i32 }* %16 to i8*
  %166 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 12, i1 false)
  %167 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %168 = load i64, i64* %167, align 4
  %169 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = call i32 @__cudaPushCallConfiguration(i64 %162, i32 %164, i64 %168, i32 %170, i64 0, i8* null)
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %183, label %173

173:                                              ; preds = %149
  %174 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 5
  %175 = load float*, float** %174, align 8
  %176 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 3
  %177 = load float*, float** %176, align 8
  %178 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 4
  %179 = load float*, float** %178, align 8
  %180 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %181 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %180, i32 0, i32 3
  %182 = load i32, i32* %181, align 8
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %175, float* %177, float* %179, i32 %182)
  br label %183

183:                                              ; preds = %173, %149
  %184 = call i32 @cudaDeviceSynchronize()
  %185 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %186 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %185, i32 0, i32 14
  store i32 %184, i32* %186, align 4
  ret void
}

declare dso_local i32 @cudaDeviceSynchronize() #1

declare dso_local i32 @__cudaPushCallConfiguration(i64, i32, i64, i32, i64, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %0, i32 %1, i32 %2, i32 %3) unnamed_addr #8 comdat align 2 {
  %5 = alloca %struct.dim3*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.dim3* %0, %struct.dim3** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.dim3*, %struct.dim3** %5, align 8
  %10 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 1
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 2
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z6FUNCb1PfS_S_S_S_iii(float* %0, float* %1, float* %2, float* %3, float* %4, i32 %5, i32 %6, i32 %7) #6 {
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca { i64, i32 }, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca { i64, i32 }, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca %struct.dim3, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca { i64, i32 }, align 4
  %28 = alloca { i64, i32 }, align 4
  store float* %0, float** %9, align 8
  store float* %1, float** %10, align 8
  store float* %2, float** %11, align 8
  store float* %3, float** %12, align 8
  store float* %4, float** %13, align 8
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32 %7, i32* %16, align 4
  %29 = load i32, i32* %15, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %29, i32 1, i32 1)
  %30 = load i32, i32* %16, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %30, i32 1, i32 1)
  %31 = bitcast { i64, i32 }* %19 to i8*
  %32 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %34 = load i64, i64* %33, align 4
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast { i64, i32 }* %20 to i8*
  %38 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %40 = load i64, i64* %39, align 4
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = call i32 @__cudaPushCallConfiguration(i64 %34, i32 %36, i64 %40, i32 %42, i64 0, i8* null)
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %8
  %46 = load float*, float** %10, align 8
  %47 = load float*, float** %9, align 8
  %48 = load i32, i32* %14, align 4
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %46, float* %47, i32 %48)
  br label %49

49:                                               ; preds = %45, %8
  %50 = load i32, i32* %15, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %21, i32 %50, i32 1, i32 1)
  %51 = load i32, i32* %16, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %51, i32 1, i32 1)
  %52 = bitcast { i64, i32 }* %23 to i8*
  %53 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 12, i1 false)
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0
  %55 = load i64, i64* %54, align 4
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = bitcast { i64, i32 }* %24 to i8*
  %59 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 12, i1 false)
  %60 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %61 = load i64, i64* %60, align 4
  %62 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = call i32 @__cudaPushCallConfiguration(i64 %55, i32 %57, i64 %61, i32 %63, i64 0, i8* null)
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %49
  %67 = load float*, float** %12, align 8
  %68 = load float*, float** %11, align 8
  %69 = load i32, i32* %14, align 4
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %67, float* %68, i32 %69)
  br label %70

70:                                               ; preds = %66, %49
  %71 = load i32, i32* %15, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %25, i32 %71, i32 1, i32 1)
  %72 = load i32, i32* %16, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %26, i32 %72, i32 1, i32 1)
  %73 = bitcast { i64, i32 }* %27 to i8*
  %74 = bitcast %struct.dim3* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  %76 = load i64, i64* %75, align 4
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = bitcast { i64, i32 }* %28 to i8*
  %80 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 12, i1 false)
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %82 = load i64, i64* %81, align 4
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = call i32 @__cudaPushCallConfiguration(i64 %76, i32 %78, i64 %82, i32 %84, i64 0, i8* null)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %70
  %88 = load float*, float** %13, align 8
  %89 = load float*, float** %10, align 8
  %90 = load float*, float** %12, align 8
  %91 = load i32, i32* %14, align 4
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %88, float* %89, float* %90, i32 %91)
  br label %92

92:                                               ; preds = %87, %70
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z15FUNCb1_prefetchPfS_S_S_S_iiiiii(float* %0, float* %1, float* %2, float* %3, float* %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10) #6 {
  %12 = alloca float*, align 8
  %13 = alloca float*, align 8
  %14 = alloca float*, align 8
  %15 = alloca float*, align 8
  %16 = alloca float*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca %struct.dim3, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca { i64, i32 }, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca %struct.dim3, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca { i64, i32 }, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca %struct.dim3, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca { i64, i32 }, align 4
  store float* %0, float** %12, align 8
  store float* %1, float** %13, align 8
  store float* %2, float** %14, align 8
  store float* %3, float** %15, align 8
  store float* %4, float** %16, align 8
  store i32 %5, i32* %17, align 4
  store i32 %6, i32* %18, align 4
  store i32 %7, i32* %19, align 4
  store i32 %8, i32* %20, align 4
  store i32 %9, i32* %21, align 4
  store i32 %10, i32* %22, align 4
  %35 = load float*, float** %12, align 8
  %36 = bitcast float* %35 to i8*
  %37 = load i32, i32* %20, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32, i32* %22, align 4
  %40 = call i32 @cudaMemPrefetchAsync(i8* %36, i64 %38, i32 %39, %struct.CUstream_st* null)
  %41 = load float*, float** %13, align 8
  %42 = bitcast float* %41 to i8*
  %43 = load i32, i32* %20, align 4
  %44 = sext i32 %43 to i64
  %45 = load i32, i32* %22, align 4
  %46 = call i32 @cudaMemPrefetchAsync(i8* %42, i64 %44, i32 %45, %struct.CUstream_st* null)
  %47 = load float*, float** %14, align 8
  %48 = bitcast float* %47 to i8*
  %49 = load i32, i32* %20, align 4
  %50 = sext i32 %49 to i64
  %51 = load i32, i32* %22, align 4
  %52 = call i32 @cudaMemPrefetchAsync(i8* %48, i64 %50, i32 %51, %struct.CUstream_st* null)
  %53 = load float*, float** %15, align 8
  %54 = bitcast float* %53 to i8*
  %55 = load i32, i32* %20, align 4
  %56 = sext i32 %55 to i64
  %57 = load i32, i32* %22, align 4
  %58 = call i32 @cudaMemPrefetchAsync(i8* %54, i64 %56, i32 %57, %struct.CUstream_st* null)
  %59 = load float*, float** %16, align 8
  %60 = bitcast float* %59 to i8*
  %61 = load i32, i32* %21, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32, i32* %22, align 4
  %64 = call i32 @cudaMemPrefetchAsync(i8* %60, i64 %62, i32 %63, %struct.CUstream_st* null)
  %65 = load i32, i32* %18, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %23, i32 %65, i32 1, i32 1)
  %66 = load i32, i32* %19, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %24, i32 %66, i32 1, i32 1)
  %67 = bitcast { i64, i32 }* %25 to i8*
  %68 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false)
  %69 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %70 = load i64, i64* %69, align 4
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = bitcast { i64, i32 }* %26 to i8*
  %74 = bitcast %struct.dim3* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0
  %76 = load i64, i64* %75, align 4
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = call i32 @__cudaPushCallConfiguration(i64 %70, i32 %72, i64 %76, i32 %78, i64 0, i8* null)
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %11
  %82 = load float*, float** %13, align 8
  %83 = load float*, float** %12, align 8
  %84 = load i32, i32* %17, align 4
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %82, float* %83, i32 %84)
  br label %85

85:                                               ; preds = %81, %11
  %86 = load i32, i32* %18, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %27, i32 %86, i32 1, i32 1)
  %87 = load i32, i32* %19, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %28, i32 %87, i32 1, i32 1)
  %88 = bitcast { i64, i32 }* %29 to i8*
  %89 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 12, i1 false)
  %90 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %91 = load i64, i64* %90, align 4
  %92 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = bitcast { i64, i32 }* %30 to i8*
  %95 = bitcast %struct.dim3* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 12, i1 false)
  %96 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 0
  %97 = load i64, i64* %96, align 4
  %98 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %30, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = call i32 @__cudaPushCallConfiguration(i64 %91, i32 %93, i64 %97, i32 %99, i64 0, i8* null)
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %85
  %103 = load float*, float** %15, align 8
  %104 = load float*, float** %14, align 8
  %105 = load i32, i32* %17, align 4
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %103, float* %104, i32 %105)
  br label %106

106:                                              ; preds = %102, %85
  %107 = load i32, i32* %18, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %31, i32 %107, i32 1, i32 1)
  %108 = load i32, i32* %19, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %32, i32 %108, i32 1, i32 1)
  %109 = bitcast { i64, i32 }* %33 to i8*
  %110 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 12, i1 false)
  %111 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %112 = load i64, i64* %111, align 4
  %113 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = bitcast { i64, i32 }* %34 to i8*
  %116 = bitcast %struct.dim3* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %116, i64 12, i1 false)
  %117 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 0
  %118 = load i64, i64* %117, align 4
  %119 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = call i32 @__cudaPushCallConfiguration(i64 %112, i32 %114, i64 %118, i32 %120, i64 0, i8* null)
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %106
  %124 = load float*, float** %16, align 8
  %125 = load float*, float** %13, align 8
  %126 = load float*, float** %15, align 8
  %127 = load i32, i32* %17, align 4
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %124, float* %125, float* %126, i32 %127)
  br label %128

128:                                              ; preds = %123, %106
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark116execute_AssOfKFCEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %6 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %7 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %6, i32 0, i32 8
  %8 = load i8, i8* %7, align 4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %44

10:                                               ; preds = %2
  %11 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %12 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %11, i32 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %44

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 1
  %17 = load float*, float** %16, align 8
  %18 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 3
  %19 = load float*, float** %18, align 8
  %20 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 2
  %21 = load float*, float** %20, align 8
  %22 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 4
  %23 = load float*, float** %22, align 8
  %24 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 5
  %25 = load float*, float** %24, align 8
  %26 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %27 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %26, i32 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %30 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %29, i32 0, i32 6
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %33 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %36 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = mul i64 4, %38
  %40 = trunc i64 %39 to i32
  %41 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %42 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %41, i32 0, i32 15
  %43 = load i32, i32* %42, align 8
  call void @_Z15FUNCb1_prefetchPfS_S_S_S_iiiiii(float* %17, float* %19, float* %21, float* %23, float* %25, i32 %28, i32 %31, i32 %34, i32 %40, i32 4, i32 %43)
  br label %64

44:                                               ; preds = %10, %2
  %45 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 1
  %46 = load float*, float** %45, align 8
  %47 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 3
  %48 = load float*, float** %47, align 8
  %49 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 2
  %50 = load float*, float** %49, align 8
  %51 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 4
  %52 = load float*, float** %51, align 8
  %53 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 5
  %54 = load float*, float** %53, align 8
  %55 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %59 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %58, i32 0, i32 6
  %60 = load i32, i32* %59, align 4
  %61 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %62 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %61, i32 0, i32 4
  %63 = load i32, i32* %62, align 4
  call void @_Z6FUNCb1PfS_S_S_S_iii(float* %46, float* %48, float* %50, float* %52, float* %54, i32 %57, i32 %60, i32 %63)
  br label %64

64:                                               ; preds = %44, %15
  %65 = call i32 @cudaGetLastError()
  %66 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %67 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %66, i32 0, i32 14
  store i32 %65, i32* %67, align 4
  %68 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %69 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %83

72:                                               ; preds = %64
  %73 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %74 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %73, i32 0, i32 14
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  %79 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %78, i32 0, i32 14
  %80 = load i32, i32* %79, align 4
  %81 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %80)
  %82 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %81, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %83

83:                                               ; preds = %77, %72, %64
  ret void
}

declare dso_local i32 @cudaGetLastError() #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark113execute_asyncEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.CUevent_st*, align 8
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca { i64, i32 }, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %18 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %19 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %20 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %19, i32 0, i32 11
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %25 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %24, i32 0, i32 9
  %26 = load i8, i8* %25, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %69

28:                                               ; preds = %23, %2
  %29 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %30 = load %struct.CUstream_st*, %struct.CUstream_st** %29, align 8
  %31 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 1
  %32 = load float*, float** %31, align 8
  %33 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %34 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = mul i64 4, %36
  %38 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %30, float* %32, i64 %37, i32 4)
  %39 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %40 = load %struct.CUstream_st*, %struct.CUstream_st** %39, align 8
  %41 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 3
  %42 = load float*, float** %41, align 8
  %43 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %44 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = mul i64 4, %46
  %48 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %40, float* %42, i64 %47, i32 4)
  %49 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %50 = load %struct.CUstream_st*, %struct.CUstream_st** %49, align 8
  %51 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 2
  %52 = load float*, float** %51, align 8
  %53 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %54 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  %57 = mul i64 4, %56
  %58 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %50, float* %52, i64 %57, i32 4)
  %59 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %60 = load %struct.CUstream_st*, %struct.CUstream_st** %59, align 8
  %61 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 4
  %62 = load float*, float** %61, align 8
  %63 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = mul i64 4, %66
  %68 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %60, float* %62, i64 %67, i32 4)
  br label %69

69:                                               ; preds = %28, %23
  %70 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %71 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %70, i32 0, i32 11
  %72 = load i32, i32* %71, align 8
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %145

74:                                               ; preds = %69
  %75 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %76 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %75, i32 0, i32 8
  %77 = load i8, i8* %76, align 4
  %78 = trunc i8 %77 to i1
  br i1 %78, label %79, label %145

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 1
  %81 = load float*, float** %80, align 8
  %82 = bitcast float* %81 to i8*
  %83 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %84 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %83, i32 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = mul i64 4, %86
  %88 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %89 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %88, i32 0, i32 15
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %92 = load %struct.CUstream_st*, %struct.CUstream_st** %91, align 8
  %93 = call i32 @cudaMemPrefetchAsync(i8* %82, i64 %87, i32 %90, %struct.CUstream_st* %92)
  %94 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 3
  %95 = load float*, float** %94, align 8
  %96 = bitcast float* %95 to i8*
  %97 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %98 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %97, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = sext i32 %99 to i64
  %101 = mul i64 4, %100
  %102 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %103 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %102, i32 0, i32 15
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %106 = load %struct.CUstream_st*, %struct.CUstream_st** %105, align 8
  %107 = call i32 @cudaMemPrefetchAsync(i8* %96, i64 %101, i32 %104, %struct.CUstream_st* %106)
  %108 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 2
  %109 = load float*, float** %108, align 8
  %110 = bitcast float* %109 to i8*
  %111 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %112 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = mul i64 4, %114
  %116 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %117 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %116, i32 0, i32 15
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %120 = load %struct.CUstream_st*, %struct.CUstream_st** %119, align 8
  %121 = call i32 @cudaMemPrefetchAsync(i8* %110, i64 %115, i32 %118, %struct.CUstream_st* %120)
  %122 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 4
  %123 = load float*, float** %122, align 8
  %124 = bitcast float* %123 to i8*
  %125 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %126 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %125, i32 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = sext i32 %127 to i64
  %129 = mul i64 4, %128
  %130 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %131 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %130, i32 0, i32 15
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %134 = load %struct.CUstream_st*, %struct.CUstream_st** %133, align 8
  %135 = call i32 @cudaMemPrefetchAsync(i8* %124, i64 %129, i32 %132, %struct.CUstream_st* %134)
  %136 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 5
  %137 = load float*, float** %136, align 8
  %138 = bitcast float* %137 to i8*
  %139 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %140 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %139, i32 0, i32 15
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %143 = load %struct.CUstream_st*, %struct.CUstream_st** %142, align 8
  %144 = call i32 @cudaMemPrefetchAsync(i8* %138, i64 4, i32 %141, %struct.CUstream_st* %143)
  br label %145

145:                                              ; preds = %79, %74, %69
  %146 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %147 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %146, i32 0, i32 6
  %148 = load i32, i32* %147, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %148, i32 1, i32 1)
  %149 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %150 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %149, i32 0, i32 4
  %151 = load i32, i32* %150, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %151, i32 1, i32 1)
  %152 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %153 = load %struct.CUstream_st*, %struct.CUstream_st** %152, align 8
  %154 = bitcast %struct.CUstream_st* %153 to i8*
  %155 = bitcast { i64, i32 }* %7 to i8*
  %156 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %156, i64 12, i1 false)
  %157 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %158 = load i64, i64* %157, align 4
  %159 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = bitcast { i64, i32 }* %8 to i8*
  %162 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 12, i1 false)
  %163 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %164 = load i64, i64* %163, align 4
  %165 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = call i32 @__cudaPushCallConfiguration(i64 %158, i32 %160, i64 %164, i32 %166, i64 0, i8* %154)
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %177, label %169

169:                                              ; preds = %145
  %170 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 3
  %171 = load float*, float** %170, align 8
  %172 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 1
  %173 = load float*, float** %172, align 8
  %174 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %175 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %174, i32 0, i32 3
  %176 = load i32, i32* %175, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %171, float* %173, i32 %176)
  br label %177

177:                                              ; preds = %169, %145
  %178 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %179 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %178, i32 0, i32 6
  %180 = load i32, i32* %179, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %180, i32 1, i32 1)
  %181 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %182 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %181, i32 0, i32 4
  %183 = load i32, i32* %182, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %183, i32 1, i32 1)
  %184 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %185 = load %struct.CUstream_st*, %struct.CUstream_st** %184, align 8
  %186 = bitcast %struct.CUstream_st* %185 to i8*
  %187 = bitcast { i64, i32 }* %11 to i8*
  %188 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 12, i1 false)
  %189 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %190 = load i64, i64* %189, align 4
  %191 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = bitcast { i64, i32 }* %12 to i8*
  %194 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 12, i1 false)
  %195 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %196 = load i64, i64* %195, align 4
  %197 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = call i32 @__cudaPushCallConfiguration(i64 %190, i32 %192, i64 %196, i32 %198, i64 0, i8* %186)
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %177
  %202 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 4
  %203 = load float*, float** %202, align 8
  %204 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 2
  %205 = load float*, float** %204, align 8
  %206 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %207 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %206, i32 0, i32 3
  %208 = load i32, i32* %207, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %203, float* %205, i32 %208)
  br label %209

209:                                              ; preds = %201, %177
  %210 = call i32 @cudaEventCreate(%struct.CUevent_st** %13)
  %211 = load %struct.CUevent_st*, %struct.CUevent_st** %13, align 8
  %212 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 7
  %213 = load %struct.CUstream_st*, %struct.CUstream_st** %212, align 8
  %214 = call i32 @cudaEventRecord(%struct.CUevent_st* %211, %struct.CUstream_st* %213)
  %215 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %216 = load %struct.CUstream_st*, %struct.CUstream_st** %215, align 8
  %217 = load %struct.CUevent_st*, %struct.CUevent_st** %13, align 8
  %218 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %216, %struct.CUevent_st* %217, i32 0)
  %219 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %220 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %219, i32 0, i32 6
  %221 = load i32, i32* %220, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %221, i32 1, i32 1)
  %222 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %223 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %222, i32 0, i32 4
  %224 = load i32, i32* %223, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %15, i32 %224, i32 1, i32 1)
  %225 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %226 = load %struct.CUstream_st*, %struct.CUstream_st** %225, align 8
  %227 = bitcast %struct.CUstream_st* %226 to i8*
  %228 = bitcast { i64, i32 }* %16 to i8*
  %229 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 12, i1 false)
  %230 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %231 = load i64, i64* %230, align 4
  %232 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = bitcast { i64, i32 }* %17 to i8*
  %235 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 12, i1 false)
  %236 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %237 = load i64, i64* %236, align 4
  %238 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = call i32 @__cudaPushCallConfiguration(i64 %231, i32 %233, i64 %237, i32 %239, i64 0, i8* %227)
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %252, label %242

242:                                              ; preds = %209
  %243 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 5
  %244 = load float*, float** %243, align 8
  %245 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 3
  %246 = load float*, float** %245, align 8
  %247 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 4
  %248 = load float*, float** %247, align 8
  %249 = bitcast %class.Benchmark1* %18 to %struct.Benchmark*
  %250 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %249, i32 0, i32 3
  %251 = load i32, i32* %250, align 8
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %244, float* %246, float* %248, i32 %251)
  br label %252

252:                                              ; preds = %242, %209
  %253 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %18, i32 0, i32 6
  %254 = load %struct.CUstream_st*, %struct.CUstream_st** %253, align 8
  %255 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %254)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %0, float* %1, i64 %2, i32 %3) #6 {
  %5 = alloca %struct.CUstream_st*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.CUstream_st* %0, %struct.CUstream_st** %5, align 8
  store float* %1, float** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.CUstream_st*, %struct.CUstream_st** %5, align 8
  %10 = load float*, float** %6, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load i64, i64* %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = call i32 @cudaStreamAttachMemAsync(%struct.CUstream_st* %9, i8* %11, i64 %12, i32 %13)
  ret i32 %14
}

declare dso_local i32 @cudaEventCreate(%struct.CUevent_st**) #1

declare dso_local i32 @cudaEventRecord(%struct.CUevent_st*, %struct.CUstream_st*) #1

declare dso_local i32 @cudaStreamWaitEvent(%struct.CUstream_st*, %struct.CUevent_st*, i32) #1

declare dso_local i32 @cudaStreamSynchronize(%struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark117execute_cudagraphEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.CUevent_st*, align 8
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca { i64, i32 }, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.CUevent_st*, align 8
  %15 = alloca %struct.dim3, align 4
  %16 = alloca %struct.dim3, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca { i64, i32 }, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %19 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %20 = load i32, i32* %4, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %150

22:                                               ; preds = %2
  %23 = call i32 @cudaEventCreate(%struct.CUevent_st** %5)
  %24 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %25 = load %struct.CUstream_st*, %struct.CUstream_st** %24, align 8
  %26 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %25, i32 0)
  %27 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %28 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %29 = load %struct.CUstream_st*, %struct.CUstream_st** %28, align 8
  %30 = call i32 @cudaEventRecord(%struct.CUevent_st* %27, %struct.CUstream_st* %29)
  %31 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 7
  %32 = load %struct.CUstream_st*, %struct.CUstream_st** %31, align 8
  %33 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %34 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %32, %struct.CUevent_st* %33, i32 0)
  %35 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %36 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %35, i32 0, i32 6
  %37 = load i32, i32* %36, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %37, i32 1, i32 1)
  %38 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %39 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %38, i32 0, i32 4
  %40 = load i32, i32* %39, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %40, i32 1, i32 1)
  %41 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %42 = load %struct.CUstream_st*, %struct.CUstream_st** %41, align 8
  %43 = bitcast %struct.CUstream_st* %42 to i8*
  %44 = bitcast { i64, i32 }* %8 to i8*
  %45 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 12, i1 false)
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %47 = load i64, i64* %46, align 4
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = bitcast { i64, i32 }* %9 to i8*
  %51 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false)
  %52 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %9, i32 0, i32 0
  %53 = load i64, i64* %52, align 4
  %54 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %9, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @__cudaPushCallConfiguration(i64 %47, i32 %49, i64 %53, i32 %55, i64 0, i8* %43)
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %22
  %59 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 3
  %60 = load float*, float** %59, align 8
  %61 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 1
  %62 = load float*, float** %61, align 8
  %63 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 3
  %65 = load i32, i32* %64, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %60, float* %62, i32 %65)
  br label %66

66:                                               ; preds = %58, %22
  %67 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %68 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %67, i32 0, i32 6
  %69 = load i32, i32* %68, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %69, i32 1, i32 1)
  %70 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %71 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %70, i32 0, i32 4
  %72 = load i32, i32* %71, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %11, i32 %72, i32 1, i32 1)
  %73 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 7
  %74 = load %struct.CUstream_st*, %struct.CUstream_st** %73, align 8
  %75 = bitcast %struct.CUstream_st* %74 to i8*
  %76 = bitcast { i64, i32 }* %12 to i8*
  %77 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false)
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %79 = load i64, i64* %78, align 4
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = bitcast { i64, i32 }* %13 to i8*
  %83 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 12, i1 false)
  %84 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %85 = load i64, i64* %84, align 4
  %86 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = call i32 @__cudaPushCallConfiguration(i64 %79, i32 %81, i64 %85, i32 %87, i64 0, i8* %75)
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %66
  %91 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 4
  %92 = load float*, float** %91, align 8
  %93 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 2
  %94 = load float*, float** %93, align 8
  %95 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %96 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %95, i32 0, i32 3
  %97 = load i32, i32* %96, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %92, float* %94, i32 %97)
  br label %98

98:                                               ; preds = %90, %66
  %99 = call i32 @cudaEventCreate(%struct.CUevent_st** %14)
  %100 = load %struct.CUevent_st*, %struct.CUevent_st** %14, align 8
  %101 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 7
  %102 = load %struct.CUstream_st*, %struct.CUstream_st** %101, align 8
  %103 = call i32 @cudaEventRecord(%struct.CUevent_st* %100, %struct.CUstream_st* %102)
  %104 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %105 = load %struct.CUstream_st*, %struct.CUstream_st** %104, align 8
  %106 = load %struct.CUevent_st*, %struct.CUevent_st** %14, align 8
  %107 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %105, %struct.CUevent_st* %106, i32 0)
  %108 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %109 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %108, i32 0, i32 6
  %110 = load i32, i32* %109, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %15, i32 %110, i32 1, i32 1)
  %111 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %112 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %111, i32 0, i32 4
  %113 = load i32, i32* %112, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %16, i32 %113, i32 1, i32 1)
  %114 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %115 = load %struct.CUstream_st*, %struct.CUstream_st** %114, align 8
  %116 = bitcast %struct.CUstream_st* %115 to i8*
  %117 = bitcast { i64, i32 }* %17 to i8*
  %118 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 12, i1 false)
  %119 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %120 = load i64, i64* %119, align 4
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = bitcast { i64, i32 }* %18 to i8*
  %124 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %124, i64 12, i1 false)
  %125 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 0
  %126 = load i64, i64* %125, align 4
  %127 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = call i32 @__cudaPushCallConfiguration(i64 %120, i32 %122, i64 %126, i32 %128, i64 0, i8* %116)
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %98
  %132 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 5
  %133 = load float*, float** %132, align 8
  %134 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 3
  %135 = load float*, float** %134, align 8
  %136 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 4
  %137 = load float*, float** %136, align 8
  %138 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %139 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %138, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %133, float* %135, float* %137, i32 %140)
  br label %141

141:                                              ; preds = %131, %98
  %142 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %143 = load %struct.CUstream_st*, %struct.CUstream_st** %142, align 8
  %144 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 8
  %145 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %143, %struct.CUgraph_st** %144)
  %146 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 9
  %147 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 8
  %148 = load %struct.CUgraph_st*, %struct.CUgraph_st** %147, align 8
  %149 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %146, %struct.CUgraph_st* %148, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %150

150:                                              ; preds = %141, %2
  %151 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 9
  %152 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %151, align 8
  %153 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %154 = load %struct.CUstream_st*, %struct.CUstream_st** %153, align 8
  %155 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %152, %struct.CUstream_st* %154)
  %156 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %19, i32 0, i32 6
  %157 = load %struct.CUstream_st*, %struct.CUstream_st** %156, align 8
  %158 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %157)
  %159 = bitcast %class.Benchmark1* %19 to %struct.Benchmark*
  %160 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %159, i32 0, i32 14
  store i32 %158, i32* %160, align 4
  ret void
}

declare dso_local i32 @cudaStreamBeginCapture(%struct.CUstream_st*, i32) #1

declare dso_local i32 @cudaStreamEndCapture(%struct.CUstream_st*, %struct.CUgraph_st**) #1

declare dso_local i32 @cudaGraphInstantiate(%struct.CUgraphExec_st**, %struct.CUgraph_st*, %struct.CUgraphNode_st**, i8*, i64) #1

declare dso_local i32 @cudaGraphLaunch(%struct.CUgraphExec_st*, %struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark124execute_cudagraph_manualEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [4 x i8*], align 16
  %7 = alloca [4 x i8*], align 16
  %8 = alloca [5 x i8*], align 16
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca %struct.dim3, align 8
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 8
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 8
  %19 = alloca { i64, i32 }, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %20 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %130

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 8
  %25 = call i32 @cudaGraphCreate(%struct.CUgraph_st** %24, i32 0)
  store i32 1, i32* %5, align 4
  %26 = getelementptr inbounds [4 x i8*], [4 x i8*]* %6, i64 0, i64 0
  %27 = bitcast i32* %5 to i8*
  store i8* %27, i8** %26, align 8
  %28 = getelementptr inbounds i8*, i8** %26, i64 1
  %29 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 3
  %30 = bitcast float** %29 to i8*
  store i8* %30, i8** %28, align 8
  %31 = getelementptr inbounds i8*, i8** %28, i64 1
  %32 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 1
  %33 = bitcast float** %32 to i8*
  store i8* %33, i8** %31, align 8
  %34 = getelementptr inbounds i8*, i8** %31, i64 1
  %35 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %36 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %35, i32 0, i32 3
  %37 = bitcast i32* %36 to i8*
  store i8* %37, i8** %34, align 8
  %38 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 0
  %39 = bitcast i32* %5 to i8*
  store i8* %39, i8** %38, align 8
  %40 = getelementptr inbounds i8*, i8** %38, i64 1
  %41 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 4
  %42 = bitcast float** %41 to i8*
  store i8* %42, i8** %40, align 8
  %43 = getelementptr inbounds i8*, i8** %40, i64 1
  %44 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 2
  %45 = bitcast float** %44 to i8*
  store i8* %45, i8** %43, align 8
  %46 = getelementptr inbounds i8*, i8** %43, i64 1
  %47 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %48 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %47, i32 0, i32 3
  %49 = bitcast i32* %48 to i8*
  store i8* %49, i8** %46, align 8
  %50 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 0
  %51 = bitcast i32* %5 to i8*
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds i8*, i8** %50, i64 1
  %53 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 5
  %54 = bitcast float** %53 to i8*
  store i8* %54, i8** %52, align 8
  %55 = getelementptr inbounds i8*, i8** %52, i64 1
  %56 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 3
  %57 = bitcast float** %56 to i8*
  store i8* %57, i8** %55, align 8
  %58 = getelementptr inbounds i8*, i8** %55, i64 1
  %59 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 4
  %60 = bitcast float** %59 to i8*
  store i8* %60, i8** %58, align 8
  %61 = getelementptr inbounds i8*, i8** %58, i64 1
  %62 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %63 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %62, i32 0, i32 3
  %64 = bitcast i32* %63 to i8*
  store i8* %64, i8** %61, align 8
  %65 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %66 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %65, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %67, i32 1, i32 1)
  %68 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %69 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %68, i32 0, i32 6
  %70 = load i32, i32* %69, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %70, i32 1, i32 1)
  %71 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %72 = getelementptr inbounds [4 x i8*], [4 x i8*]* %6, i64 0, i64 0
  %73 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 14
  %74 = bitcast %struct.dim3* %11 to i8*
  %75 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %75, i64 12, i1 false)
  %76 = bitcast %struct.dim3* %12 to i8*
  %77 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false)
  %78 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 8
  %79 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 11
  %80 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 10
  %81 = bitcast { i64, i32 }* %13 to i8*
  %82 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %82, i64 12, i1 false)
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %84 = load i64, i64* %83, align 4
  %85 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %71, i8** %72, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %73, i8* bitcast (void (i32, float*, float*, i32)* @_Z21__device_stub__squareiPfS_i to i8*), i64 %84, i32 %86, %struct.dim3* byval(%struct.dim3) align 8 %12, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %78, %struct.CUgraphNode_st** %79, %"class.std::vector"* nonnull align 8 dereferenceable(24) %80, i32 0)
  %88 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %89 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 0
  %90 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 15
  %91 = bitcast %struct.dim3* %14 to i8*
  %92 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 12, i1 false)
  %93 = bitcast %struct.dim3* %15 to i8*
  %94 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 12, i1 false)
  %95 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 8
  %96 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 12
  %97 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 10
  %98 = bitcast { i64, i32 }* %16 to i8*
  %99 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 12, i1 false)
  %100 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %101 = load i64, i64* %100, align 4
  %102 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %88, i8** %89, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %90, i8* bitcast (void (i32, float*, float*, i32)* @_Z21__device_stub__squareiPfS_i to i8*), i64 %101, i32 %103, %struct.dim3* byval(%struct.dim3) align 8 %15, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %95, %struct.CUgraphNode_st** %96, %"class.std::vector"* nonnull align 8 dereferenceable(24) %97, i32 0)
  %105 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 10
  %106 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 11
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %105, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %106)
  %107 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 10
  %108 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 12
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %107, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %108)
  %109 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %110 = getelementptr inbounds [5 x i8*], [5 x i8*]* %8, i64 0, i64 0
  %111 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 16
  %112 = bitcast %struct.dim3* %17 to i8*
  %113 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 12, i1 false)
  %114 = bitcast %struct.dim3* %18 to i8*
  %115 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %115, i64 12, i1 false)
  %116 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 8
  %117 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 13
  %118 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 10
  %119 = bitcast { i64, i32 }* %19 to i8*
  %120 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 12, i1 false)
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %122 = load i64, i64* %121, align 4
  %123 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %109, i8** %110, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %111, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__reduceiPfS_S_i to i8*), i64 %122, i32 %124, %struct.dim3* byval(%struct.dim3) align 8 %18, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %116, %struct.CUgraphNode_st** %117, %"class.std::vector"* nonnull align 8 dereferenceable(24) %118, i32 0)
  %126 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 9
  %127 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 8
  %128 = load %struct.CUgraph_st*, %struct.CUgraph_st** %127, align 8
  %129 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %126, %struct.CUgraph_st* %128, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %130

130:                                              ; preds = %23, %2
  %131 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 9
  %132 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %131, align 8
  %133 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 6
  %134 = load %struct.CUstream_st*, %struct.CUstream_st** %133, align 8
  %135 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %132, %struct.CUstream_st* %134)
  %136 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %20, i32 0, i32 6
  %137 = load %struct.CUstream_st*, %struct.CUstream_st** %136, align 8
  %138 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %137)
  %139 = bitcast %class.Benchmark1* %20 to %struct.Benchmark*
  %140 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %139, i32 0, i32 14
  store i32 %138, i32* %140, align 4
  ret void
}

declare dso_local i32 @cudaGraphCreate(%struct.CUgraph_st**, i32) #1

declare dso_local i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60), i8**, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56), i8*, i64, i32, %struct.dim3* byval(%struct.dim3) align 8, %struct.CUgraph_st** nonnull align 8 dereferenceable(8), %struct.CUgraphNode_st**, %"class.std::vector"* nonnull align 8 dereferenceable(24), i32) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %1) #6 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 2
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = icmp ne %struct.CUgraphNode_st** %10, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %2
  %17 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %18 to %"class.std::allocator"*
  %20 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %21, i32 0, i32 1
  %23 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %22, align 8
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %19, %struct.CUgraphNode_st** %23, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %24)
  %25 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %27, align 8
  %29 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %28, i32 1
  store %struct.CUgraphNode_st** %29, %struct.CUgraphNode_st*** %27, align 8
  br label %36

30:                                               ; preds = %2
  %31 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %31, %struct.CUgraphNode_st*** %32, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %35 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %34, align 8
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6, %struct.CUgraphNode_st** %35, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %33)
  br label %36

36:                                               ; preds = %30, %16
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark124execute_cudagraph_singleEi(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark1*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.dim3, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca { i64, i32 }, align 4
  %16 = alloca { i64, i32 }, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %3, align 8
  store i32 %1, i32* %4, align 4
  %17 = load %class.Benchmark1*, %class.Benchmark1** %3, align 8
  %18 = load i32, i32* %4, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %130

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %22 = load %struct.CUstream_st*, %struct.CUstream_st** %21, align 8
  %23 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %22, i32 0)
  %24 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %25 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %24, i32 0, i32 6
  %26 = load i32, i32* %25, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %26, i32 1, i32 1)
  %27 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %28 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %29, i32 1, i32 1)
  %30 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %31 = load %struct.CUstream_st*, %struct.CUstream_st** %30, align 8
  %32 = bitcast %struct.CUstream_st* %31 to i8*
  %33 = bitcast { i64, i32 }* %7 to i8*
  %34 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 12, i1 false)
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %36 = load i64, i64* %35, align 4
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = bitcast { i64, i32 }* %8 to i8*
  %40 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false)
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %42 = load i64, i64* %41, align 4
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = call i32 @__cudaPushCallConfiguration(i64 %36, i32 %38, i64 %42, i32 %44, i64 0, i8* %32)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %20
  %48 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 3
  %49 = load float*, float** %48, align 8
  %50 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 1
  %51 = load float*, float** %50, align 8
  %52 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %53 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %49, float* %51, i32 %54)
  br label %55

55:                                               ; preds = %47, %20
  %56 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %57 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %56, i32 0, i32 6
  %58 = load i32, i32* %57, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %58, i32 1, i32 1)
  %59 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %60 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %59, i32 0, i32 4
  %61 = load i32, i32* %60, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %61, i32 1, i32 1)
  %62 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %63 = load %struct.CUstream_st*, %struct.CUstream_st** %62, align 8
  %64 = bitcast %struct.CUstream_st* %63 to i8*
  %65 = bitcast { i64, i32 }* %11 to i8*
  %66 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 12, i1 false)
  %67 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %68 = load i64, i64* %67, align 4
  %69 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = bitcast { i64, i32 }* %12 to i8*
  %72 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 12, i1 false)
  %73 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %74 = load i64, i64* %73, align 4
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = call i32 @__cudaPushCallConfiguration(i64 %68, i32 %70, i64 %74, i32 %76, i64 0, i8* %64)
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %55
  %80 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 4
  %81 = load float*, float** %80, align 8
  %82 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 2
  %83 = load float*, float** %82, align 8
  %84 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %85 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  call void @_Z21__device_stub__squareiPfS_i(i32 1, float* %81, float* %83, i32 %86)
  br label %87

87:                                               ; preds = %79, %55
  %88 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %89 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %88, i32 0, i32 6
  %90 = load i32, i32* %89, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %13, i32 %90, i32 1, i32 1)
  %91 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %92 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %91, i32 0, i32 4
  %93 = load i32, i32* %92, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %93, i32 1, i32 1)
  %94 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %95 = load %struct.CUstream_st*, %struct.CUstream_st** %94, align 8
  %96 = bitcast %struct.CUstream_st* %95 to i8*
  %97 = bitcast { i64, i32 }* %15 to i8*
  %98 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 12, i1 false)
  %99 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %100 = load i64, i64* %99, align 4
  %101 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = bitcast { i64, i32 }* %16 to i8*
  %104 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false)
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %106 = load i64, i64* %105, align 4
  %107 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = call i32 @__cudaPushCallConfiguration(i64 %100, i32 %102, i64 %106, i32 %108, i64 0, i8* %96)
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %87
  %112 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 5
  %113 = load float*, float** %112, align 8
  %114 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 3
  %115 = load float*, float** %114, align 8
  %116 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 4
  %117 = load float*, float** %116, align 8
  %118 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %119 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %118, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  call void @_Z21__device_stub__reduceiPfS_S_i(i32 1, float* %113, float* %115, float* %117, i32 %120)
  br label %121

121:                                              ; preds = %111, %87
  %122 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %123 = load %struct.CUstream_st*, %struct.CUstream_st** %122, align 8
  %124 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 8
  %125 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %123, %struct.CUgraph_st** %124)
  %126 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 9
  %127 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 8
  %128 = load %struct.CUgraph_st*, %struct.CUgraph_st** %127, align 8
  %129 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %126, %struct.CUgraph_st* %128, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %130

130:                                              ; preds = %121, %2
  %131 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 9
  %132 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %131, align 8
  %133 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %134 = load %struct.CUstream_st*, %struct.CUstream_st** %133, align 8
  %135 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %132, %struct.CUstream_st* %134)
  %136 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %17, i32 0, i32 6
  %137 = load %struct.CUstream_st*, %struct.CUstream_st** %136, align 8
  %138 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %137)
  %139 = bitcast %class.Benchmark1* %17 to %struct.Benchmark*
  %140 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %139, i32 0, i32 14
  store i32 %138, i32* %140, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark112print_resultB5cxx11Eb(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %class.Benchmark1* nonnull align 8 dereferenceable(352) %1, i1 zeroext %2) unnamed_addr #6 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %class.Benchmark1*, align 8
  %6 = alloca i8, align 1
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %7, i8** %4, align 8
  store %class.Benchmark1* %1, %class.Benchmark1** %5, align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  %9 = load %class.Benchmark1*, %class.Benchmark1** %5, align 8
  %10 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %9, i32 0, i32 5
  %11 = load float*, float** %10, align 8
  %12 = getelementptr inbounds float, float* %11, i64 0
  %13 = load float, float* %12, align 4
  call void @_ZNSt7__cxx119to_stringEf(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, float %13)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx119to_stringEf(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, float %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca float, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %6, i8** %3, align 8
  store float %1, float* %4, align 4
  store i32 58, i32* %5, align 4
  %7 = load float, float* %4, align 4
  %8 = fpext float %7 to double
  call void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* @vsnprintf, i64 58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark1D2Ev(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0) unnamed_addr #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Benchmark1*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark1* %0, %class.Benchmark1** %2, align 8
  %5 = load %class.Benchmark1*, %class.Benchmark1** %2, align 8
  %6 = bitcast %class.Benchmark1* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV10Benchmark1, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = bitcast float* %8 to i8*
  %10 = invoke i32 @cudaFree(i8* %9)
          to label %11 unwind label %42

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 2
  %13 = load float*, float** %12, align 8
  %14 = bitcast float* %13 to i8*
  %15 = invoke i32 @cudaFree(i8* %14)
          to label %16 unwind label %42

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 3
  %18 = load float*, float** %17, align 8
  %19 = bitcast float* %18 to i8*
  %20 = invoke i32 @cudaFree(i8* %19)
          to label %21 unwind label %42

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 4
  %23 = load float*, float** %22, align 8
  %24 = bitcast float* %23 to i8*
  %25 = invoke i32 @cudaFree(i8* %24)
          to label %26 unwind label %42

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 5
  %28 = load float*, float** %27, align 8
  %29 = bitcast float* %28 to i8*
  %30 = invoke i32 @cudaFree(i8* %29)
          to label %31 unwind label %42

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 6
  %33 = load %struct.CUstream_st*, %struct.CUstream_st** %32, align 8
  %34 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %33)
          to label %35 unwind label %42

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 7
  %37 = load %struct.CUstream_st*, %struct.CUstream_st** %36, align 8
  %38 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %37)
          to label %39 unwind label %42

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 10
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %40) #3
  %41 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %41) #3
  ret void

42:                                               ; preds = %35, %31, %26, %21, %16, %11, %1
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %3, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %4, align 4
  %46 = getelementptr inbounds %class.Benchmark1, %class.Benchmark1* %5, i32 0, i32 10
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %46) #3
  %47 = bitcast %class.Benchmark1* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %47) #3
  br label %48

48:                                               ; preds = %42
  %49 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %49) #15
  unreachable
}

declare dso_local i32 @cudaFree(i8*) #1

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local i32 @cudaStreamDestroy(%struct.CUstream_st*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %14) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %13, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %15)
          to label %16 unwind label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %17) #3
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %22) #3
  br label %23

23:                                               ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #15
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %struct.Benchmark*, align 8
  store %struct.Benchmark* %0, %struct.Benchmark** %2, align 8
  %3 = load %struct.Benchmark*, %struct.Benchmark** %2, align 8
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #9 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark1D0Ev(%class.Benchmark1* nonnull align 8 dereferenceable(352) %0) unnamed_addr #8 align 2 {
  %2 = alloca %class.Benchmark1*, align 8
  store %class.Benchmark1* %0, %class.Benchmark1** %2, align 8
  %3 = load %class.Benchmark1*, %class.Benchmark1** %2, align 8
  call void @_ZN10Benchmark1D1Ev(%class.Benchmark1* nonnull align 8 dereferenceable(352) %3) #3
  %4 = bitcast %class.Benchmark1* %3 to i8*
  call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #10

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) #6 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i8*, align 8
  %6 = alloca i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [1 x %struct.__va_list_tag], align 16
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.0", align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %15, i8** %5, align 8
  store i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %16 = load i64, i64* %7, align 8
  %17 = mul i64 1, %16
  %18 = alloca i8, i64 %17, align 16
  store i8* %18, i8** %9, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %20 = bitcast %struct.__va_list_tag* %19 to i8*
  call void @llvm.va_start(i8* %20)
  %21 = load i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %26 = call i32 %21(i8* %22, i64 %23, i8* %24, %struct.__va_list_tag* %25)
  store i32 %26, i32* %11, align 4
  %27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %28 = bitcast %struct.__va_list_tag* %27 to i8*
  call void @llvm.va_end(i8* %28)
  %29 = load i8*, i8** %9, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = load i32, i32* %11, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %29, i8* %33, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12)
          to label %34 unwind label %35

34:                                               ; preds = %4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  ret void

35:                                               ; preds = %4
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %13, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %14, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  br label %39

39:                                               ; preds = %35
  %40 = load i8*, i8** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43
}

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %3) unnamed_addr #12 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i32 0, i32 0
  %13 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12, i8* %13, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %14)
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %15, i8* %16)
          to label %17 unwind label %18

17:                                               ; preds = %4
  ret void

18:                                               ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12) #3
  br label %22

22:                                               ; preds = %18
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* %10, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8), i8*, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %9, i8* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, align 8
  store %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %0, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %3 = load %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %4 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::__false_type", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %11, i8* %12)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %12)
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = icmp ne i8* %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #17
  unreachable

19:                                               ; preds = %14, %3
  %20 = load i8*, i8** %6, align 8
  %21 = load i8*, i8** %7, align 8
  %22 = call i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %20, i8* %21)
  store i64 %22, i64* %8, align 8
  %23 = load i64, i64* %8, align 8
  %24 = icmp ugt i64 %23, 15
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %8, i64 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %26)
  %27 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %27)
  br label %28

28:                                               ; preds = %25, %19
  %29 = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %30 unwind label %33

30:                                               ; preds = %28
  %31 = load i8*, i8** %6, align 8
  %32 = load i8*, i8** %7, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8* %29, i8* %31, i8* %32) #3
  br label %46

33:                                               ; preds = %28
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  br label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %9, align 8
  %39 = call i8* @__cxa_begin_catch(i8* %38) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %40 unwind label %41

40:                                               ; preds = %37
  invoke void @__cxa_rethrow() #17
          to label %56 unwind label %41

41:                                               ; preds = %40, %37
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %9, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %45 unwind label %53

45:                                               ; preds = %41
  br label %48

46:                                               ; preds = %30
  %47 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %47)
  ret void

48:                                               ; preds = %45
  %49 = load i8*, i8** %9, align 8
  %50 = load i32, i32* %10, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

53:                                               ; preds = %41
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #15
  unreachable

56:                                               ; preds = %40
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %0) #7 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  ret i1 %4
}

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %0, i8* %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i8*, i8** %4, align 8
  call void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %7, i8* %8)
  ret i64 %9
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) #1

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8*, i8*, i8*) #2

declare dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @__cxa_rethrow()

declare dso_local void @__cxa_end_catch()

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %0, i8* %1) #7 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = ptrtoint i8* %6 to i64
  %9 = ptrtoint i8* %7 to i64
  %10 = sub i64 %8, %9
  ret i64 %10
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  call void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %7, %struct.CUgraphNode_st** %8)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %16 = ptrtoint %struct.CUgraphNode_st** %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %5, %struct.CUgraphNode_st** %8, i64 %18)
          to label %19 unwind label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %20) #3
  ret void

21:                                               ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %25) #3
  br label %26

26:                                               ; preds = %21
  %27 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %27) #15
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #6 comdat {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %5, %struct.CUgraphNode_st** %6)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = icmp ne %struct.CUgraphNode_st** %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11 to %"class.std::allocator"*
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %12, %struct.CUgraphNode_st** %13, i64 %14)
  br label %15

15:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %0, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, i64 %10)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

declare dso_local i32 @cudaMallocManaged(i8**, i64, i32) #1

declare dso_local i32 @cudaStreamAttachMemAsync(%struct.CUstream_st*, i8*, i64, i32) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.CUgraphNode_st**, align 8
  %9 = alloca %struct.CUgraphNode_st**, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %struct.CUgraphNode_st**, align 8
  %13 = alloca %struct.CUgraphNode_st**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %16, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %17 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  store %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st*** %8, align 8
  %23 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %24, i32 0, i32 1
  %26 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %25, align 8
  store %struct.CUgraphNode_st** %26, %struct.CUgraphNode_st*** %9, align 8
  %27 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17) #3
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.CUgraphNode_st** %27, %struct.CUgraphNode_st*** %28, align 8
  %29 = call i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %11) #3
  store i64 %29, i64* %10, align 8
  %30 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %31 = load i64, i64* %7, align 8
  %32 = call %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %30, i64 %31)
  store %struct.CUgraphNode_st** %32, %struct.CUgraphNode_st*** %12, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %33, %struct.CUgraphNode_st*** %13, align 8
  %34 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %35 to %"class.std::allocator"*
  %37 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %37, i64 %38
  %40 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %41 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %40) #3
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %36, %struct.CUgraphNode_st** %39, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %41)
          to label %42 unwind label %61

42:                                               ; preds = %3
  store %struct.CUgraphNode_st** null, %struct.CUgraphNode_st*** %13, align 8
  %43 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %44 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %45 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %44, align 8
  %46 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %47 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %48 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %47) #3
  %49 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %43, %struct.CUgraphNode_st** %45, %struct.CUgraphNode_st** %46, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %48)
          to label %50 unwind label %61

50:                                               ; preds = %42
  store %struct.CUgraphNode_st** %49, %struct.CUgraphNode_st*** %13, align 8
  %51 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %52 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %51, i32 1
  store %struct.CUgraphNode_st** %52, %struct.CUgraphNode_st*** %13, align 8
  %53 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %54 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %53, align 8
  %55 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %56 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %57 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %58 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %57) #3
  %59 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %54, %struct.CUgraphNode_st** %55, %struct.CUgraphNode_st** %56, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %58)
          to label %60 unwind label %61

60:                                               ; preds = %50
  store %struct.CUgraphNode_st** %59, %struct.CUgraphNode_st*** %13, align 8
  br label %94

61:                                               ; preds = %50, %42, %3
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %14, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %15, align 4
  br label %65

65:                                               ; preds = %61
  %66 = load i8*, i8** %14, align 8
  %67 = call i8* @__cxa_begin_catch(i8* %66) #3
  %68 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %69 = icmp ne %struct.CUgraphNode_st** %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %72 to %"class.std::allocator"*
  %74 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %75 = load i64, i64* %10, align 8
  %76 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %74, i64 %75
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %73, %struct.CUgraphNode_st** %76)
          to label %77 unwind label %78

77:                                               ; preds = %70
  br label %88

78:                                               ; preds = %92, %88, %82, %70
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %14, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %93 unwind label %129

82:                                               ; preds = %65
  %83 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %84 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %85 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %86 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %85) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %83, %struct.CUgraphNode_st** %84, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %86)
          to label %87 unwind label %78

87:                                               ; preds = %82
  br label %88

88:                                               ; preds = %87, %77
  %89 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %90 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %91 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %89, %struct.CUgraphNode_st** %90, i64 %91)
          to label %92 unwind label %78

92:                                               ; preds = %88
  invoke void @__cxa_rethrow() #17
          to label %132 unwind label %78

93:                                               ; preds = %78
  br label %124

94:                                               ; preds = %60
  %95 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %96 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %97 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %98 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %97) #3
  call void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %95, %struct.CUgraphNode_st** %96, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %98)
  %99 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %100 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %101 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %102, i32 0, i32 2
  %104 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %103, align 8
  %105 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %106 = ptrtoint %struct.CUgraphNode_st** %104 to i64
  %107 = ptrtoint %struct.CUgraphNode_st** %105 to i64
  %108 = sub i64 %106, %107
  %109 = sdiv exact i64 %108, 8
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %99, %struct.CUgraphNode_st** %100, i64 %109)
  %110 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %111 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %112, i32 0, i32 0
  store %struct.CUgraphNode_st** %110, %struct.CUgraphNode_st*** %113, align 8
  %114 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %115 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %116, i32 0, i32 1
  store %struct.CUgraphNode_st** %114, %struct.CUgraphNode_st*** %117, align 8
  %118 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %119 = load i64, i64* %7, align 8
  %120 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %118, i64 %119
  %121 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %122, i32 0, i32 2
  store %struct.CUgraphNode_st** %120, %struct.CUgraphNode_st*** %123, align 8
  ret void

124:                                              ; preds = %93
  %125 = load i8*, i8** %14, align 8
  %126 = load i32, i32* %15, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

129:                                              ; preds = %78
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #15
  unreachable

132:                                              ; preds = %92
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  %10 = bitcast i8* %9 to %struct.CUgraphNode_st**
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11) #3
  %13 = load %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %12, align 8
  store %struct.CUgraphNode_st* %13, %struct.CUgraphNode_st** %10, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %11 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #17
  unreachable

17:                                               ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %19 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  store i64 %19, i64* %8, align 8
  %20 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %8, i64* nonnull align 8 dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  br label %34

32:                                               ; preds = %26
  %33 = load i64, i64* %7, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %5) #3
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %8) #3
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %12 = ptrtoint %struct.CUgraphNode_st** %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9 to %"class.std::allocator"*
  %11 = load i64, i64* %4, align 8
  %12 = call %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %10, i64 %11)
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %8
  %15 = phi %struct.CUgraphNode_st** [ %12, %8 ], [ null, %13 ]
  ret %struct.CUgraphNode_st** %15
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %6, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.CUgraphNode_st** %12, %struct.CUgraphNode_st*** %13, align 8
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.CUgraphNode_st** %15, %struct.CUgraphNode_st*** %16, align 8
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  %23 = call %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st** %17, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %18)
  ret %struct.CUgraphNode_st** %23
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.CUgraphNode_st*** %4
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, %struct.CUgraphNode_st** %7)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %13 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  ret i64 %15
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %0, i64* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret i64 %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.CUgraphNode_st*** %1, %struct.CUgraphNode_st**** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st***, %struct.CUgraphNode_st**** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  store %struct.CUgraphNode_st** %8, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, i64 %7, i8* null)
  ret %struct.CUgraphNode_st** %8
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18
  %16 = bitcast i8* %15 to %struct.CUgraphNode_st**
  ret %struct.CUgraphNode_st** %16
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #13

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) #14

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %20, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %21, %struct.CUgraphNode_st** %17)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  call void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st** %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  ret %struct.CUgraphNode_st** %6
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %11, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false)
  %16 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = call %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %18, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %16)
  ret %struct.CUgraphNode_st** %21
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %17, %struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %15)
  ret %struct.CUgraphNode_st** %20
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %19)
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %15, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %21)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %7)
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %9)
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %11)
  %13 = call %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %10, %struct.CUgraphNode_st** %12)
  ret %struct.CUgraphNode_st** %13
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = call %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2)
  %5 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %4)
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %10)
  ret %struct.CUgraphNode_st** %11
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #7 comdat align 2 {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %10 = ptrtoint %struct.CUgraphNode_st** %8 to i64
  %11 = ptrtoint %struct.CUgraphNode_st** %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %18 = bitcast %struct.CUgraphNode_st** %17 to i8*
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %20 = bitcast %struct.CUgraphNode_st** %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 %22, i1 false)
  br label %23

23:                                               ; preds = %16, %3
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %24, i64 %25
  ret %struct.CUgraphNode_st** %26
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st** %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %7, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_b1.cu() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

define internal void @__cuda_register_globals(i8** %0) {
  %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32)* @_Z21__device_stub__squareiPfS_i to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %3 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32)* @_Z21__device_stub__reduceiPfS_S_i to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  ret void
}

declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*)

declare dso_local void @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i64, i32, i32)

declare dso_local void @__cudaRegisterManagedVar(i8**, i8*, i8*, i8*, i64, i32)

declare dso_local void @__cudaRegisterSurface(i8**, i8*, i8*, i8*, i32, i32)

declare dso_local void @__cudaRegisterTexture(i8**, i8*, i8*, i8*, i32, i32, i32)

declare dso_local i8** @__cudaRegisterFatBinary(i8*)

define internal void @__cuda_module_ctor(i8* %0) {
  %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*))
  store i8** %2, i8*** @__cuda_gpubin_handle, align 8
  call void @__cuda_register_globals(i8** %2)
  call void @__cudaRegisterFatBinaryEnd(i8** %2)
  %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor)
  ret void
}

declare dso_local void @__cudaRegisterFatBinaryEnd(i8**)

declare dso_local void @__cudaUnregisterFatBinary(i8**)

define internal void @__cuda_module_dtor(i8* %0) {
  %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8
  call void @__cudaUnregisterFatBinary(i8** %2)
  ret void
}

declare dso_local i32 @atexit(void (i8*)*)

attributes #0 = { noinline uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { mustprogress noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nobuiltin allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn }
attributes #18 = { allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 11, i32 2]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 13.0.0"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
