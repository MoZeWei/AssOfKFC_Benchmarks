; ModuleID = '/home/mozw/AssOfKFC_Benchmarks/src/b6.cu'
source_filename = "/home/mozw/AssOfKFC_Benchmarks/src/b6.cu"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.Benchmark6 = type { %struct.Benchmark.base, i32, i32, i32*, float*, float*, float*, float*, float*, float*, float*, float*, float*, i32*, %struct.CUstream_st*, %struct.CUstream_st*, %struct.CUgraph_st*, %struct.CUgraphExec_st*, %"class.std::vector", %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.CUgraphNode_st*, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams, %struct.cudaKernelNodeParams }
%struct.Benchmark.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%struct.CUstream_st = type opaque
%struct.CUgraph_st = type opaque
%struct.CUgraphExec_st = type opaque
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" }
%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl" = type { %struct.CUgraphNode_st**, %struct.CUgraphNode_st**, %struct.CUgraphNode_st** }
%struct.CUgraphNode_st = type opaque
%struct.cudaKernelNodeParams = type { i8*, %struct.dim3, %struct.dim3, i32, i8**, i8** }
%struct.dim3 = type { i32, i32, i32 }
%struct.Benchmark = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%struct.CUevent_st = type opaque
%"class.__gnu_cxx::__normal_iterator" = type { %struct.CUgraphNode_st** }
%"class.std::allocator" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator.0" = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %struct.CUgraphNode_st** }

$_ZN4dim3C2Ejjj = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_ = comdat any

$_ZNSt7__cxx119to_stringEi = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZN9BenchmarkD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_ = comdat any

$_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_ = comdat any

$_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m = comdat any

$_ZNSaIP14CUgraphNode_stED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E = comdat any

$_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_ = comdat any

$_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_ = comdat any

$_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv = comdat any

$_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_ = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZTS9Benchmark = comdat any

$_ZTI9Benchmark = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c", ...]\00", align 1
@_ZTV10Benchmark6 = dso_local unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10Benchmark6 to i8*), i8* bitcast (void (%class.Benchmark6*)* @_ZN10Benchmark65allocEv to i8*), i8* bitcast (void (%class.Benchmark6*)* @_ZN10Benchmark64initEv to i8*), i8* bitcast (void (%class.Benchmark6*)* @_ZN10Benchmark65resetEv to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark613execute_asyncEi to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark612execute_syncEi to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark617execute_cudagraphEi to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark624execute_cudagraph_manualEi to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark624execute_cudagraph_singleEi to i8*), i8* bitcast (void (%class.Benchmark6*, i32)* @_ZN10Benchmark616execute_AssOfKFCEi to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %class.Benchmark6*, i1)* @_ZN10Benchmark612print_resultB5cxx11Eb to i8*), i8* bitcast (void (%class.Benchmark6*)* @_ZN10Benchmark6D1Ev to i8*), i8* bitcast (void (%class.Benchmark6*)* @_ZN10Benchmark6D0Ev to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS10Benchmark6 = dso_local constant [13 x i8] c"10Benchmark6\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS9Benchmark = linkonce_odr dso_local constant [11 x i8] c"9Benchmark\00", comdat, align 1
@_ZTI9Benchmark = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZTS9Benchmark, i32 0, i32 0) }, comdat, align 8
@_ZTI10Benchmark6 = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10Benchmark6, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI9Benchmark to i8*) }, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@0 = private unnamed_addr constant [18 x i8] c"_Z4nb_1iPfPiS_iii\00", align 1
@1 = private unnamed_addr constant [15 x i8] c"_Z4nb_2iPfS_ii\00", align 1
@2 = private unnamed_addr constant [17 x i8] c"_Z4nb_3iPfS_S_ii\00", align 1
@3 = private unnamed_addr constant [15 x i8] c"_Z4nb_4iPfS_ii\00", align 1
@4 = private unnamed_addr constant [15 x i8] c"_Z4rr_1iPfPiii\00", align 1
@5 = private unnamed_addr constant [18 x i8] c"_Z4rr_2iPfS_S_iii\00", align 1
@6 = private unnamed_addr constant [15 x i8] c"_Z4rr_3iPfS_ii\00", align 1
@7 = private unnamed_addr constant [16 x i8] c"_Z7softmaxiPfii\00", align 1
@8 = private unnamed_addr constant [20 x i8] c"_Z6argmaxiPiPfS0_ii\00", align 1
@9 = private constant [40201 x i8] c"P\EDU\BA\01\00\10\00\F8\9C\00\00\00\00\00\00\02\00\01\01@\00\00\00\88\7F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00F\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00q\00\00\00\00\00\00\00\00\00\00\00\E0~\00\00\00\00\00\00\A0u\00\00\00\00\00\00F\05F\00@\008\00\03\00@\00%\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text._Z6argmaxiPiPfS0_ii\00.nv.info._Z6argmaxiPiPfS0_ii\00.nv.shared._Z6argmaxiPiPfS0_ii\00.nv.global\00.nv.global.init\00.nv.constant0._Z6argmaxiPiPfS0_ii\00.text._Z7softmaxiPfii\00.nv.info._Z7softmaxiPfii\00.nv.shared._Z7softmaxiPfii\00.nv.constant0._Z7softmaxiPfii\00.text._Z4rr_3iPfS_ii\00.nv.info._Z4rr_3iPfS_ii\00.nv.shared._Z4rr_3iPfS_ii\00.nv.constant0._Z4rr_3iPfS_ii\00.text._Z4rr_2iPfS_S_iii\00.nv.info._Z4rr_2iPfS_S_iii\00.nv.shared._Z4rr_2iPfS_S_iii\00.nv.constant0._Z4rr_2iPfS_S_iii\00.text._Z4rr_1iPfPiii\00.nv.info._Z4rr_1iPfPiii\00.nv.shared._Z4rr_1iPfPiii\00.nv.constant0._Z4rr_1iPfPiii\00.text._Z4nb_4iPfS_ii\00.nv.info._Z4nb_4iPfS_ii\00.nv.shared._Z4nb_4iPfS_ii\00.nv.constant0._Z4nb_4iPfS_ii\00.text._Z4nb_3iPfS_S_ii\00.nv.info._Z4nb_3iPfS_S_ii\00.nv.shared._Z4nb_3iPfS_S_ii\00.nv.constant0._Z4nb_3iPfS_S_ii\00.text._Z4nb_2iPfS_ii\00.nv.info._Z4nb_2iPfS_ii\00.nv.shared._Z4nb_2iPfS_ii\00.nv.constant0._Z4nb_2iPfS_ii\00.text._Z4nb_1iPfPiS_iii\00.nv.info._Z4nb_1iPfPiS_iii\00.nv.shared._Z4nb_1iPfPiS_iii\00.nv.constant0._Z4nb_1iPfPiS_iii\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00_Z6argmaxiPiPfS0_ii\00.text._Z6argmaxiPiPfS0_ii\00.nv.info._Z6argmaxiPiPfS0_ii\00.nv.shared._Z6argmaxiPiPfS0_ii\00.nv.global\00blockIdx\00blockDim\00threadIdx\00gridDim\00.nv.global.init\00_$_str\00_$_str_$_2\00.nv.constant0._Z6argmaxiPiPfS0_ii\00_param\00_Z7softmaxiPfii\00.text._Z7softmaxiPfii\00.nv.info._Z7softmaxiPfii\00.nv.shared._Z7softmaxiPfii\00$_Z7softmaxiPfii$__cuda_sm3x_div_rn_noftz_f32\00$_Z7softmaxiPfii$__cuda_sm3x_div_rn_noftz_f32_slowpath\00.nv.constant0._Z7softmaxiPfii\00_Z4rr_3iPfS_ii\00.text._Z4rr_3iPfS_ii\00.nv.info._Z4rr_3iPfS_ii\00.nv.shared._Z4rr_3iPfS_ii\00.nv.constant0._Z4rr_3iPfS_ii\00_Z4rr_2iPfS_S_iii\00.text._Z4rr_2iPfS_S_iii\00.nv.info._Z4rr_2iPfS_S_iii\00.nv.shared._Z4rr_2iPfS_S_iii\00.nv.constant0._Z4rr_2iPfS_S_iii\00_Z4rr_1iPfPiii\00.text._Z4rr_1iPfPiii\00.nv.info._Z4rr_1iPfPiii\00.nv.shared._Z4rr_1iPfPiii\00$_Z4rr_1iPfPiii$__cuda_sm3x_div_rn_noftz_f32\00$_Z4rr_1iPfPiii$__cuda_sm3x_div_rn_noftz_f32_slowpath\00.nv.constant0._Z4rr_1iPfPiii\00_Z4nb_4iPfS_ii\00.text._Z4nb_4iPfS_ii\00.nv.info._Z4nb_4iPfS_ii\00.nv.shared._Z4nb_4iPfS_ii\00.nv.constant0._Z4nb_4iPfS_ii\00_Z4nb_3iPfS_S_ii\00.text._Z4nb_3iPfS_S_ii\00.nv.info._Z4nb_3iPfS_S_ii\00.nv.shared._Z4nb_3iPfS_S_ii\00.nv.constant0._Z4nb_3iPfS_S_ii\00_Z4nb_2iPfS_ii\00.text._Z4nb_2iPfS_ii\00.nv.info._Z4nb_2iPfS_ii\00.nv.shared._Z4nb_2iPfS_ii\00.nv.constant0._Z4nb_2iPfS_ii\00_Z4nb_1iPfPiS_iii\00.text._Z4nb_1iPfPiS_iii\00.nv.info._Z4nb_1iPfPiS_iii\00.nv.shared._Z4nb_1iPfPiS_iii\00.nv.constant0._Z4nb_1iPfPiS_iii\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.actionp\01\00\00\22\00\1B\00\80\07\00\00\00\00\00\00\A0\01\00\00\00\00\00\00\9E\01\00\00\22\00\1B\00 \09\00\00\00\00\00\00`\07\00\00\00\00\00\00\D5\01\00\00\03\00\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\02\00\00\03\00\1C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00I\02\00\00\03\00\13\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\02\00\00\03\00\1D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C8\02\00\00\03\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F7\02\00\00\03\00\1E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00>\03\00\00\22\00\1E\00P\08\00\00\00\00\00\00p\01\00\00\00\00\00\00kf\02\00\00\12\10\1D\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\E8\02\00\00\12\10\1E\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\BE\03\00\00\12\10\1F\00\00\00\00\00\00\00\00\00\80\05\00\00\00\00\00\001\04\00\00\12\10 \00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\AE\04\00\00\12\10!\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00!\05\00\00\12\10\22\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\06\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(@\04t\01\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\07\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(0\04\CC\01\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\80\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\80\80\80(\16\81\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\80\07\00\00\00\00\00\00\90\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\84\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\84\80\80(\16\85\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00H\01\00\00\00\00\00\00 \09\00\00\00\00\00\00P\07\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\B0\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80((\04\E8\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00 \02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\05\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(8\04T\01\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\90\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\08\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(@\04\00\02\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\86\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\86\80\80(\16\87\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00P\08\00\00\00\00\00\00`\01\00\00\00\00\00\00\FF\FF\FF\FF8\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\88\80\80(\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\08\88\80\80(\16\89\80\80(\09\05\0C\00\00\00\00\00\00\00\00\00\00\00\FF\FF\FF\FF\18\00\00\00\00\00\00\00h\03\00\00\00\00\00\00\C0\09\00\00\00\00\00\00@\07\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\D0\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\05\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80((\044\01\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00@\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\07\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(@\04\DC\01\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\B0\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\04\00\00\00\00\00\00\04\04\00\00\00\04\0C\00\00\00\0C\81\80\80(8\04$\01\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|q\00\00\00\04\0A\08\00\0A\00\00\00`\01(\00\03\19(\00\04\17\0C\00\00\00\00\00\05\00$\00\00\F0\11\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00\A0\01\00\00\10\06\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\0E\00\00\00`\01\18\00\03\19\18\00\04\17\0C\00\00\00\00\00\03\00\14\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0\11\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\0C\00\10\00\00\00\80\07\00\00 \09\00\00\04\1C\08\00@\01\00\00p\07\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\10\00\00\00`\01 \00\03\19 \00\04\17\0C\00\00\00\00\00\04\00\1C\00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00p\01\00\00\E0\03\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\12\00\00\00`\01,\00\03\19,\00\04\17\0C\00\00\00\00\00\06\00(\00\00\F0\11\00\04\17\0C\00\00\00\00\00\05\00$\00\00\F0\11\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00\B0\01\00\00\90\05\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\16\00\00\00`\01 \00\03\19 \00\04\17\0C\00\00\00\00\00\04\00\1C\00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\0C\00\10\00\00\00P\08\00\00\C0\09\00\00\04\1C\08\00p\01\00\00@\08\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\18\00\00\00`\01 \00\03\19 \00\04\17\0C\00\00\00\00\00\04\00\1C\00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00p\01\00\00\10\05\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\1A\00\00\00`\01(\00\03\19(\00\04\17\0C\00\00\00\00\00\05\00$\00\00\F0\11\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00\A0\01\00\00\B0\07\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\1C\00\00\00`\01 \00\03\19 \00\04\17\0C\00\00\00\00\00\04\00\1C\00\00\F0\11\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0\11\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0\11\00\03\1B\FF\00\041\04\00\10\00\00\00\04\1C\08\00p\01\00\00\D0\04\00\00\04\1E\04\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00q\00\00\00\04\0A\08\00\1E\00\00\00`h\05\00\00\00\00\00\00\02\00\00\00)\00\00\00\F8\04\00\00\00\00\00\00\02\00\00\00(\00\00\00\88\04\00\00\00\00\00\00\02\00\00\00'\00\00\00\18\04\00\00\00\00\00\00\02\00\00\00&\00\00\00\C0\03\00\00\00\00\00\00\02\00\00\00%\00\00\00X\03\00\00\00\00\00\00\02\00\00\00%\00\00\00\D8\02\00\00\00\00\00\00\02\00\00\00%\00\00\00hv\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\0B\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\10\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\11\FF\00a\00\00\FF\00\8E\07\00\C8\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\10\EB\10\00\00\E8\03\00\80y\0D\02 \00\00\00\00\E9\10\00\00\A2\0E\00$z\0B\0B\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02(\00\00\00\0B\E9\10\00\00\E8\03\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00\02z\04\00\00Z\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\02z\08\00\00^\00\00\00\0F\00\00\00\E2\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\C4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E4\0F\00$v\0F\FF\00X\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\03\00\85s\00\02\00\00\00\00\0F\E9\10\00\00\E2\03\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\80y\00\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02\18\00\00\00\00\EB\10\00\00\E8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00(\0F\00\85s\00\02,\00\00\00\FF\E9\10\00\00\E8\01\00\80y\0F\02$\00\00\00\00\E9\10\00\00\22\0F\00$r\00\00\09\00\00\00\FF\02\8E\07\00\C8O\00$x\0B\00\04\00\00\00\FF\00\8E\07\00\E2\0F\00\19x\09\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\0D\00\02\00\00\00\09\02\01\00\00\E4\0F\00\10r\0A\06\0B\00\00\00\FF\E0\F3\07\00\E4\8F\08\10r\08\04\0B\00\00\00\FF\E0\F1\07\00\C6\0F\01$x\0B\07\01\00\00\00\0D\06\8E\00\00\E2\0F\00\10r\09\05\0D\00\00\00\FF\E4\7F\00\00\E2\0F\00\80y\07\02(\00\00\00\00\E9\10\00\00h\01\00\80y\04\02\08\00\00\00\00\EB\10\00\00h\01\00\80y\08\08\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\0A\00\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\024\00\00\00\FF\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\E2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\000\02\00\00\00\00\80\03\00\E2\0F\00!r\0D\08\0B\00\00\00\00\00\00\00\00\D0O\00\85s\00\020\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\0F\00\00\00pb\F0\03\00\D8\8F\00G\09\00\00\E0\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0D\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0A\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\15\02$\00\00\00\00\E9\10\00\00\22\0F\00$r\00\00\0D\00\00\00\06\02\8E\07\00\C6O\00\80y\06\024\00\00\00\00\E9\10\00\00\A2\0E\00$x\0F\00\04\00\00\00\FF\00\8E\07\00\E2\0F\00\19x\0D\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\0D\00\02\00\00\00\0D\02\01\00\00\E4\0F\00\10r\08\08\0F\00\00\00\FF\E0\F1\07\00\E2\8F\08\80y\00\020\00\00\00\00\E9\10\00\00\E2\0E\00\10r\0A\0A\0F\00\00\00\FF\E0\F3\07\00\C6\0F\01$x\09\09\01\00\00\00\0D\06\0E\00\00\E2\0F\00\10r\0B\0B\0D\00\00\00\FF\E4\FF\00\00\CE\0F\00\80y\08\08\00\00\00\00\00\E9\10\00\00(\0F\00\80y\0B\0A\00\00\00\00\00\E9\10\00\00$\0F\00!r\0D\08\0B\00\00\00\00\00\00\00\00\D0\0F\01\85s\00\028\00\00\00\0D\E9\10\00\00\E8\01\00\80y\0F\028\00\00\00\00\E9\10\00\00\E2\0E\00\10x\13\06\01\00\00\00\FF\E0\FF\07\00\E4O\00\0Br\00\0F\00\00\00\00\00@\F0\03\00\D8\8F\00\80\09\11\024\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\024\00\00\00\13\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\E8\0E\00\85\03\00\020\00\00\00\0F\E9\10\00\00\E8\01\00\85\03\00\02,\00\00\00\11\E9\10\00\00\E2A\00\0Cr\00\00\15\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00 \FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\09\02,\00\00\00\00\E9\10\00\00\A2\0E\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\02\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\0F\00\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\04\00\00\00\00\09\E9\10\00\00\E8A\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00$v\07\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\0B\02 \00\00\00\00\E9\10\00\00\E2\0E\00$z\07\07\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02(\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02(\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\A0\FB\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\07\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\D0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0C\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0D\FF\00]\00\00\FF\00\8E\07\00\C8\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\18\00\00\00\0C\EB\10\00\00\E8\03\00\80y\09\02\18\00\00\00\00\E9\10\00\00\A2\0E\00$z\07\07\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02 \00\00\00\07\E9\10\00\00\E8\03\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E4\0F\00$v\0B\FF\00X\00\00\FF\00\8E\07\00\CC\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\08\00\00\00\0B\E9\10\00\00\E2\03\00\0Cr\00\00\09\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\85s\00\02(\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02\1C\00\00\00\00\E9\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00 \02\00\00\00\00\80\03\00\E4\0F\00\85s\00\02$\00\00\00\FF\E9\10\00\00\E2\01\00\0Cr\00\04\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\E0\01\00\00\00\00\80\03\00\EA\1F\00\80y\06\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\A8.\00\80y\08\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0B\02\1C\00\00\00\00\E9\10\00\00\22\0F\00$r\07\06\07\00\00\00\08\02\8E\07\00\C6O\00\80y\08\02(\00\00\00\00\E9\10\00\00\A4\0E\00\19x\06\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\05\07\05\00\00\00\06\14\0F\00\00\E4\0F\00\80y\07\02$\00\00\00\00\E9\10\00\00\EC\0E\00\80y\05\04\00\00\00\00\00\E9\10\00\00\A2\0E\00$t\0D\FF\9D\98\BB;\FF\00\8E\07\00\C6\0F\00\85s\00\02\00\00\00\00\05\E9\10\00\00\E8A\00\80y\06\02\00\00\00\00\00\E9\10\00\00\A2\0E\00\10x\09\08\01\00\00\00\FF\E0\FF\07\00\D0\0F\00\85s\00\02(\00\00\00\09\E9\10\00\00\E8\03\00\80y\08\02(\00\00\00\00\E9\10\00\00\22\0F\00$t\0F\FF\00\00|C\FF\00\8E\07\00\E4\0F\00#t\04\06\00\00\00?\0D \00\00\00\C8O\00#t\04\04\01\00@K\0F@\00\00\00\C8\0F\00!t\05\04\7F\00@\CB\00\00\00\00\00\C8\1F\00#x\05\06;\AA\B8?\05\08\00\00\00\C8\0F\00#x\05\06`p\A52\05\00\00\00\00\CC\0F\00\08s\05\00\05\00\00\00\00\08\00\00\00\E2\0E\00$x\04\04\00\00\80\00\FF\00\8E\07\00\E2\0F\00\0Cr\00\08\0B\00\00\00pb\F0\03\00\C6\0F\01#r\07\04\05\00\00\00\07\00\00\00\00\D0\8F\00\85s\00\02$\00\00\00\07\E9\10\00\00\E2\03\00G\89\00\00 \FE\FF\FF\FF\FF\83\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\85s\00\02,\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02,\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00\E0\02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\05\00\00\00\00pb\F0\03\00\D8O\02G\09\00\00\B0\02\00\00\00\00\80\03\00\EA\1F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\A8.\00\80y\06\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\09\02$\00\00\00\00\E9\10\00\00b\01\00$r\07\00\07\00\00\00\06\02\8E\07\00\CAO\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\80y\05\04\00\00\00\00\00\E9\10\00\00\A2\0E\00$t\07\FF\9D\98\BB;\FF\00\8E\07\00\C6\0F\00\85s\00\02\04\00\00\00\05\E9\10\00\00\E8A\00\80y\00\02\04\00\00\00\00\E9\10\00\00\A2\0E\00$t\0B\FF\00\00|C\FF\00\8E\07\00\E2\0F\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00\B0\00\00\00\00\00\80\03\00\E2\0F\00#t\06\00\00\00\00?\07 \00\00\00\C8O\00#t\06\06\01\00@K\0B@\00\00\00\C8\0F\00!t\07\06\7F\00@\CB\00\00\00\00\00\C8\0F\00#x\07\00;\AA\B8?\07\08\00\00\00\C8\0F\00#x\07\00`p\A52\07\00\00\00\00\CC\0F\00\08s\07\00\07\00\00\00\00\08\00\00\00b\0E\00$x\06\06\00\00\80\00\FF\00\8E\07\00\E2\0F\00\02x\00\00\D0\05\00\00\00\0F\00\00\00\C6\0F\00 r\06\06\07\00\00\00\00\00@\00\00\C8/\00Dy\00\00\B0\01\00\00\00\00\C0\03\00\EA\1F\02Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E2\0E\00$r\07\00\07\00\00\00\06\02\8E\07\00\CAO\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\04\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02\1C\00\00\00\00\E9\10\00\00\E2\0E\00\10x\07\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02,\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\09\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00P\FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02\18\00\00\00\00\E9\10\00\00\E2.\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02 \00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02 \00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\E0\F9\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\02s\00\06\09\00\00\00\00\00\00\00\00$\0E\00G\09\00\00\C0\00\00\00\00\00\80\03\00\EA\1F\00\08s\04\00\09\00\00\00\00\10\00\00\00\22\0E\00!r\05\09\FF\00\00\80\00\01\01\00\00\C8\0F\00#t\07\04\00\00\80?\05\00\00\00\00\C8\1F\00#r\07\04\07\00\00\00\04\00\00\00\00\C8\0F\00#r\04\06\07\00\00\00\FF\00\00\00\00\C8\0F\00#r\08\05\04\00\00\00\06\00\00\00\00\C8\0F\00#r\08\07\08\00\00\00\04\00\00\00\00\E4\0F\00$r\04\FF\FF\00\00\00\00\00\8E\07\00\E4\0F\00#r\05\05\08\00\00\00\06\00\00\00\00\C8\0F\00#r\0B\07\05\00\00\00\08\00\00\00\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04\90\F7\FF\FF\FF\FF\C3\03\00\EA\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00P\00\00\00\00\00\80\03\00\E2\0F\00$r\07\FF\FF\00\00\00\06\00\8E\07\00\E2\0F\00\02x\04\00\D0\08\00\00\00\0F\00\00\00\E2\0F\00$r\08\FF\FF\00\00\00\09\00\8E\07\00\C8\0F\00Dy\00\00P\00\00\00\00\00\C0\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00$r\04\FF\FF\00\00\00\00\00\8E\07\00\E2\0F\00\02r\0B\00\07\00\00\00\00\0F\00\00\00\E2\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04\E0\F6\FF\FF\FF\FF\C3\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19x\06\FF\17\00\00\00\08\16\01\00\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00\19x\05\FF\17\00\00\00\07\16\01\00\00\E2\0F\00Ey\03\00P\02\00\00\00\00\80\03\00\E2\0F\00\12x\06\06\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\05\05\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\10x\0B\06\FF\FF\FF\FF\FF\E0\FF\07\00\E4\0F\00\10x\0A\05\FF\FF\FF\FF\FF\E0\FF\07\00\C4\0F\00\0Cx\00\0B\FD\00\00\00p@\F0\03\00\C8\0F\00\0Cx\00\0A\FD\00\00\00pDp\00\00\D8\0F\00$\82\09\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00G\89\00\00\C0\01\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\07\00\00\80\7F\00\C2\F1\03\00\E4\0F\00\0Bx\00\08\00\00\80\7F\00\C2\F3\03\00\C8\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00\E0\05\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\07\C8\80\07\00\D8\0F\00B\89\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\89\00\00\80\05\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\07\00\00\80\7F\00\D2\F5\03\00\E4\0F\04\0Bx\00\08\00\00\80\7F\00\D2\F3\03\00\E4\0F\00\0Bx\00\07\00\00\80\7F\00\D2\F1\03\00\D4\0F\00B\99\03\00\00\00\00\00\00\00\00\05\00\E2\0F\00G\99\00\000\05\00\00\00\00\00\05\00\EA\0F\00\12x\FF\07\FF\FF\FF\7F\FF\C0\84\07\00\C8\0F\00\1Cx\00\00\00\00\00\00rE\F2\00\00\D8\0F\00B\19\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\19\00\00\C0\04\00\00\00\00\80\03\00\EA\0F\00\12x\FF\08\FF\FF\FF\7F\FF\C0\82\07\00\C8\0F\00\1Cx\00\00\00\00\00\00r%p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00@\04\00\00\00\00\80\03\00\EA\0F\00\0Cr\00\0A\FF\00\00\00pb\F0\03\00\E4\0F\00\0Cr\00\0B\FF\00\00\00pb\F2\03\00\D4\0F\00$\02\09\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#\88\07\07\00\00\80_\FF\00\00\00\00\E4\0F\00$\84\09\FF\C0\FF\FF\FF\FF\00\8E\07\00\E4\0F\00#\98\08\08\00\00\80_\FF\00\00\00\00\C6\0F\00\10\98\09\09@\00\00\00\FF\E0\FF\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\11x\0B\06\00\00\80\C0\FF\B8\8E\07\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00`\03\00\00\00\00\80\03\00\E6\0F\00$x\0B\08\01\00\00\00\0B\0A\8E\07\00\E2\0F\00\10x\08\05\81\FF\FF\FF\FF\E0\FF\07\00\C6\0F\00!r\0C\0B\FF\00\00\80\00\01\01\00\00\E4\0F\00\08s\0A\00\0B\00\00\00\00\10\00\00\00\22\0E\00$x\07\08\00\00\80\FF\07\02\8E\07\00\E2\0F\04\10x\08\08\7F\00\00\00\06\E8\FF\07\00\CA\0F\00$x\08\08\01\00\00\00\09\02\8E\07\00\E4\0F\00#t\05\0A\00\00\80?\0C\00\00\00\00\C8\1F\00#r\0E\0A\05\00\00\00\0A\00\00\00\00\C8\0F\00#r\05\07\0E\00\00\00\FF\00\00\00\00\C8\0F\00#r\0A\0C\05\00\00\00\07\00\00\00\00\C8\0F\00#r\0D\0E\0A\00\00\00\05\00\00\00\00\C8\0F\00#r\07\0C\0D\00\00\00\07\00\00\00\00\C8\0F\00#r\05\0E\07\00\00\00\0D\00\00\00\00\CA\0F\00\19x\06\FF\17\00\00\00\05\16\01\00\00\C8\0F\00\12x\06\06\FF\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0A\06\01\00\00\00\08\02\8E\07\00\CA\0F\00\10x\06\0A\FF\FF\FF\FF\FF\E0\FF\07\00\C8\0F\00\0Cx\00\06\FE\00\00\00p`\F0\03\00\D8\0F\00G\89\00\00\00\02\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0A\FE\00\00\00pB\F0\03\00\D8\0F\00G\09\00\00\B0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0A\01\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\D0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0A\E8\FF\FF\FFpb\F0\03\00\E4\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\D4\0F\00G\89\00\00\A0\01\00\00\00\00\80\03\00\EA\0F\00#r\06\0E\07\00\00\00\0D\C0\00\00\00\E2\0F\18\10x\09\0A \00\00\00\FF\E0\FF\07\00\E4\0F\04\0Cr\00\0A\FF\00\00\00pR\F4\03\00\E4\0F\00\12x\08\06\FF\FF\7F\00\FF\C0\8E\07\00\E2\0F\00#r\06\0E\07\00\00\00\0D\80\00\00\00\E2\0F\18\0Cr\00\0A\FF\00\00\00pR\F2\03\00\E2\0F\00#r\07\0E\07\00\00\00\0D@\00\00\00\E2\0F\00\12x\08\08\00\00\80\00\FF\FC\8E\07\00\E2\0F\00$r\0A\FF\FF\00\00\00\0A\0A\8E\07\00\C6\0F\00\19r\09\08\09\00\00\00\FF\06\00\00\00\E4\0F\00\0Br\00\06\07\00\00\00\00\D0\F1\03\00\E4\0F\00\07r\07\0A\FF\00\00\00\00\00\00\01\00\E4\0F\00\0Cr\00\09\FF\00\00\00pR\F2\00\00\E4\0F\00\19r\07\FF\07\00\00\00\08\16\01\00\00\E4\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\C4\0F\00\19x\09\FF\01\00\00\00\07\16\01\00\00\E4\0F\00\07x\06\FF\01\00\00\00\00\00\00\04\00\C8\0F\00\12x\06\06\01\00\00\00\09\F8\8E\07\00\C8\0F\00\12r\06\06\07\00\00\00\FF\C0\8E\07\00\C8\0F\00\10r\06\09\06\00\00\00\FF\E0\FF\07\00\C8\0F\00\12r\05\06\05\00\00\00\FF\FC\8E\07\00\E2\0F\00Gy\00\00@\00\00\00\00\00\80\03\00\EA\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Gy\00\00\10\00\00\00\00\00\80\03\00\EA\0F\00$x\05\08\00\00\80\00\05\02\8E\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00$r\07\FF\FF\00\00\00\05\00\8E\07\00\E4\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\04\80\F0\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\07\08\00\00\00\80\07H\8E\07\00\C8\0F\00\12x\07\07\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Py\00\04@\F0\FF\FF\FF\FF\C3\03\00\F0\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\07\08\00\00\00\80\07H\8E\07\00\CA\0F\00Py\00\04\10\F0\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$t\07\FF\FF\FF\FF\7F\FF\00\8E\07\00\C8\0F\00Py\00\04\E0\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\05\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00!r\07\07\08\00\00\00\00\00\01\00\00\C8\0F\00Py\00\04\B0\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\09\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\D8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0F\FF\00_\00\00\FF\00\8E\07\00\C8\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\18\00\00\00\0E\EB\10\00\00\E8\03\00\80y\0B\02\18\00\00\00\00\E9\10\00\00\A2\0E\00$z\09\09\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02 \00\00\00\09\E9\10\00\00\E8\03\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00\02z\05\00\00[\00\00\00\0F\00\00\00\E2\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E2\0F\00\02z\0D\00\00X\00\00\00\0F\00\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\CA\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E2\03\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\85s\00\02$\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02$\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\90\01\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00`\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0C\02 \00\00\00\00\EB\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\06\02\08\00\00\00\00\EB\10\00\00\22\0F\00$r\0B\00\0C\00\00\00\0D\02\8E\07\00\E2O\10\19x\09\FF\1F\00\00\00\0D\14\01\00\00\C4\0F\00\11r\08\0D\04\00\00\00\FF\10\80\07\00\E4\8F\00\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\04\0B\06\00\00\00\FF\10\82\07\00\E4\0F\01\11r\09\0D\05\00\00\00\09\14\0F\00\00\E4\0F\00\11r\05\0B\07\00\00\00\00\14\8F\00\00\CC\0F\00\80y\08\08\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\04\00\00\00\00\00\E9\10\00\00\A4\0E\00!r\07\08\07\00\00\00\00\00\00\00\00\D0O\00\85s\00\04\00\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0D\02\1C\00\00\00\00\E9\10\00\00\E2\0E\00\10x\0B\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\02$\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\02$\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\A0\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02\18\00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02 \00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02 \00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\A0\FD\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0F\FF\00a\00\00\FF\00\8E\07\00\E4\0F\00$v\10\FF\00b\00\00\FF\00\8E\07\00\E4\0F\00$z\11\00\00\00\00\00\03\02\8E\07\00\C4\1F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\01\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\C4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E4\0F\00$v\08\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E2\01\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\C6\0F\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\85s\00\020\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\020\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\00\03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\D0\02\00\00\00\00\80\03\00\EA\1F\00\85s\00\024\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\024\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00\10\02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\E0\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0A\020\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0E\02(\00\00\00\00\EB\10\00\00\E8\0E\00\80y\08\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\06\02\10\00\00\00\00\EB\10\00\00h\0F\00\80y\04\02\08\00\00\00\00\EB\10\00\00b\0F\00$r\0D\00\0A\00\00\00\0B\02\8E\07\00\C4O\00$r\0B\0F\00\00\00\00\0B\02\8E\07\00\E4\8F\04$r\0F\0F\0E\00\00\00\0A\02\8E\07\00\E2\0F\00\19x\0A\FF\1F\00\00\00\0D\14\01\00\00\E4\0F\00\11r\08\0D\08\00\00\00\FF\10\82\07\00\E4\0F\01\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\19x\0C\FF\1F\00\00\00\0F\14\01\00\00\E4\0F\00\11r\06\0B\06\00\00\00\FF\10\80\07\00\C4\0F\02\11r\04\0F\04\00\00\00\FF\10\84\07\00\E4\0F\00\11r\09\0D\09\00\00\00\0A\14\8F\00\00\E4\0F\00\11r\07\0B\07\00\00\00\00\14\0F\00\00\E4\0F\00\11r\05\0F\05\00\00\00\0C\14\0F\01\00\C8\0F\00\80y\09\08\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\06\00\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\04\00\00\00\00\00\E9\10\00\00\A4\0E\00#r\0B\06\09\00\00\00\00\00\00\00\00\D0O\00\85s\00\04\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0F\02$\00\00\00\00\E9\10\00\00\E2\0E\00\10x\0D\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\024\00\00\00\0D\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0F\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00 \FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02(\00\00\00\00\E9\10\00\00\E2\0E\00\10x\05\05\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\020\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\000\FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02 \00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02,\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\000\FC\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\09\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0F\FF\00_\00\00\FF\00\8E\07\00\C8\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\18\00\00\00\0E\EB\10\00\00\E8\03\00\80y\0B\02\1C\00\00\00\00\E9\10\00\00\A2\0E\00$z\09\09\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02 \00\00\00\09\E9\10\00\00\E8\03\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\C4\0F\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\E4\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02\04\00\00\00\0D\E9\10\00\00\E2\03\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\85s\00\02(\00\00\00\FF\EB\10\00\00\E8\01\00\80y\05\02\18\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0C\02\18\00\00\00\00\E9\10\00\00b\01\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\E0\01\00\00\00\00\80\03\00\E4\0F\00\85s\00\02$\00\00\00\FF\E9\10\00\00\E2\01\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\A0\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02\18\00\00\00\00\E9\10\00\00\A8.\00\80y\06\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\08\02,\00\00\00\00\E9\10\00\00(\0F\00\80y\09\02$\00\00\00\00\E9\10\00\00(\0F\00\80y\0B\02(\00\00\00\00\E9\10\00\00\22\0F\00$r\07\00\07\00\00\00\06\02\8E\07\00\CAO\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\80y\04\04\00\00\00\00\00\E9\10\00\00\A2\00\00\10x\0D\08\01\00\00\00\FF\E0\FF\07\00\C6\0F\01\80y\08\02\18\00\00\00\00\E9\10\00\00\EA\0E\00\85s\00\02,\00\00\00\0D\E9\10\00\00\E8\03\00\80y\05\02,\00\00\00\00\E9\10\00\00\E2\1E\00\06s\07\00\04\00\00\00\00\14 \00\00&N\00\85s\00\020\00\00\00\07\E9\10\00\00\E8\13\00\80y\00\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\020\00\00\00\00\E9\10\00\00\22\0F\00\0Cr\00\05\08\00\00\00pb\F0\03\00\E2\8F\00!r\09\00\09\00\00\00\00\00\00\00\00\C4O\00#r\0B\06\06\00\00\00\0B\00\00\00\00\CC\0F\01\85s\00\02$\00\00\00\09\E9\10\00\00\E8\03\00\85s\00\02(\00\00\00\0B\E9\10\00\00\E2\03\00G\89\00\00`\FE\FF\FF\FF\FF\83\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\09\02$\00\00\00\00\E9\10\00\00d!\00\06s\0C\00\0C\00\00\00\00\14 \00\00b\0E\02Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\000\00\00\00\00\00\80\03\00\E2\0F\00\02x\06\00 \04\00\00\00\0F\00\00\00\CA\0F\00Dy\00\000\04\00\00\00\00\C0\03\00\EA?\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02\18\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02(\00\00\00\00\E9\10\00\00b\01\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00P\00\00\00\00\00\80\03\00\E2\0F\00\02x\06\00\B0\04\00\00\00\0F\00\00\00\E2\0F\00\85s\00\02$\00\00\00\0B\E9\10\00\00\E2\01\00\06s\0C\00\00\00\00\00\00\14 \00\00n@\00Dy\00\00\A0\03\00\00\00\00\C0\03\00\EA?\02Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\028\00\00\00\FF\E9\10\00\00\E8\01\00\80y\09\02\18\00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\028\00\00\00\00\E9\10\00\00\E2\0E\00#r\05\00\00\00\00\00\0B\01\00\00\00\D0O\00\85s\00\02\00\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02\00\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00p\02\00\00\00\00\80\03\00\E2\0F\00\0Bx\00\00\00\00\80\00\00\E2\F0\03\00\D8O\00 \88\00\00\00\00\80K\00\00@\00\00\CC\0F\00\08s\07\00\00\00\00\00\00 \00\00\00d\0E\00 \88\07\07\00\00\809\00\00@\00\00\E2/\00\0Cr\00\04\09\00\00\00pb\F0\03\00\CE\8F\00\85s\00\024\00\00\00\07\E9\10\00\00\EA\01\00G\09\00\00\F0\01\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A8\0E\00\80y\05\02\18\00\00\00\00\E9\10\00\00\A8\1E\00\80y\04\028\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0C\024\00\00\00\00\E9\10\00\00b\01\00$r\00\00\05\00\00\00\04\02\8E\07\00\C8O\00$x\04\00\04\00\00\00\FF\00\8E\07\00\E2\0F\00\19x\05\FF\1F\00\00\00\00\14\01\00\00\C8\0F\00\19x\00\00\02\00\00\00\05\02\01\00\00\E4\0F\00\10r\08\06\04\00\00\00\FF\E0\F1\07\00\E4\8F\00\80y\06\02$\00\00\00\00\E9\10\00\00\A6\0E\00$x\09\07\01\00\00\00\00\06\0E\00\00\D0\0F\00\80y\08\08\00\00\00\00\00\E9\10\00\00\E2\0E\00Us\FF\02\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\02\00P\00\00\00\00\00\80\03\00\E2\0F\00\06s\05\00\08\00\00\00\00\14 \00\00\A4\8E\00!r\09\05\06\00\00\80\00\00\00\00\00\E2O\00\02x\06\00\F0\06\00\00\00\0F\00\00\00\CA\0F\00Dy\00\00`\01\00\00\00\00\C0\03\00\EA\1F\02Ay\02\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\06\02\08\00\00\00\00\EB\10\00\00\A4\0E\00\10r\04\06\04\00\00\00\FF\E0\F1\07\00\CAO\00$x\05\07\01\00\00\00\00\06\0E\00\00\D0\0F\00\85s\00\04\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\028\00\00\00\00\E9\10\00\00\A8\0E\00\80y\09\02\18\00\00\00\00\E9\10\00\00\E2\0E\00\10x\07\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\028\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\028\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\09\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\10\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\1F\00\80y\07\02\1C\00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02 \00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02 \00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00@\F9\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\02s\00\09\0C\00\00\00\00\00\00\00\00$\0E\00G\09\00\00\B0\00\00\00\00\00\80\03\00\EA\1F\00\08s\05\00\0C\00\00\00\00\10\00\00\00\22\0E\00!r\08\0C\FF\00\00\80\00\01\01\00\00\C8\0F\00#t\0A\05\00\00\80?\08\00\00\00\00\C8\1F\00#r\0A\05\0A\00\00\00\05\00\00\00\00\C8\0F\00#r\05\09\0A\00\00\00\FF\00\00\00\00\C8\0F\00#r\07\08\05\00\00\00\09\00\00\00\00\C8\0F\00#r\07\0A\07\00\00\00\05\00\00\00\00\C8\0F\00#r\08\08\07\00\00\00\09\00\00\00\00\C8\0F\00#r\0B\0A\08\00\00\00\07\00\00\00\00\E4\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\06\D0\F6\FF\FF\FF\FF\C3\03\00\EA\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00@\00\00\00\00\00\80\03\00\E2\0F\00$r\0A\FF\FF\00\00\00\0C\00\8E\07\00\E2\0F\00\02x\08\00\80\09\00\00\00\0F\00\00\00\C8\0F\00Dy\00\00@\00\00\00\00\00\C0\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\07\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$r\0B\FF\FF\00\00\00\05\00\8E\07\00\C8\0F\00Py\00\06@\F6\FF\FF\FF\FF\C3\03\00\EA\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19x\07\FF\17\00\00\00\0A\16\01\00\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00\19x\05\FF\17\00\00\00\09\16\01\00\00\E2\0F\10Ey\03\00`\02\00\00\00\00\80\03\00\E2\0F\00\12x\0F\07\FF\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\0D\05\FF\00\00\00\FF\C0\8E\07\00\E2\0F\00$r\05\FF\FF\00\00\00\09\00\8E\07\00\E2\0F\00\10x\0C\0F\FF\FF\FF\FF\FF\E0\FF\07\00\E4\0F\00\10x\0B\0D\FF\FF\FF\FF\FF\E0\FF\07\00\C4\0F\00\0Cx\00\0C\FD\00\00\00p@\F0\03\00\C8\0F\00\0Cx\00\0B\FD\00\00\00pDp\00\00\D8\0F\00$\82\07\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00G\89\00\00\C0\01\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\C2\F1\03\00\E4\0F\00\0Bx\00\0A\00\00\80\7F\00\C2\F3\03\00\C8\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\00\D0\05\00\00\00\00\80\03\00\EA\0F\00\12x\FF\0A\FF\FF\FF\7F\05\C8\80\07\00\D8\0F\00B\89\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\89\00\00p\05\00\00\00\00\80\03\00\EA\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F5\03\00\E4\0F\04\0Bx\00\0A\00\00\80\7F\00\D2\F3\03\00\E4\0F\00\0Bx\00\09\00\00\80\7F\00\D2\F1\03\00\D4\0F\00B\99\03\00\00\00\00\00\00\00\00\05\00\E2\0F\00G\99\00\00 \05\00\00\00\00\00\05\00\EA\0F\00\12x\FF\05\FF\FF\FF\7F\FF\C0\84\07\00\C8\0F\00\1Cx\00\00\00\00\00\00rE\F2\00\00\D8\0F\00B\19\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\19\00\00\B0\04\00\00\00\00\80\03\00\EA\0F\00\12x\FF\0A\FF\FF\FF\7F\FF\C0\82\07\00\C8\0F\00\1Cx\00\00\00\00\00\00r%p\00\00\D8\0F\00B\09\03\00\00\00\00\00\00\00\80\03\00\E2\0F\00G\09\00\000\04\00\00\00\00\80\03\00\EA\0F\00\0Cr\00\0B\FF\00\00\00pb\F0\03\00\E4\0F\00\0Cr\00\0C\FF\00\00\00pb\F2\03\00\D4\0F\00$\02\07\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#\88\05\09\00\00\80_\FF\00\00\00\00\E4\0F\00$\84\07\FF\C0\FF\FF\FF\FF\00\8E\07\00\E4\0F\00#\98\0A\0A\00\00\80_\FF\00\00\00\00\C6\0F\00\10\98\07\07@\00\00\00\FF\E0\FF\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00\11x\09\0F\00\00\80\C0\FF\B8\8E\07\00\E2\0F\00Us\FF\03\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\03\00`\03\00\00\00\00\80\03\00\E6\0F\00$x\09\0A\01\00\00\00\09\0A\8E\07\00\E2\0F\00\10x\0A\0D\81\FF\FF\FF\FF\E0\FF\07\00\C6\0F\00!r\0C\09\FF\00\00\80\00\01\01\00\00\E4\0F\00\08s\0B\00\09\00\00\00\00\10\00\00\00\22\0E\00$x\05\0A\00\00\80\FF\05\02\8E\07\00\E2\0F\04\10x\0A\0A\7F\00\00\00\0F\E8\FF\07\00\CA\0F\00$x\0A\0A\01\00\00\00\07\02\8E\07\00\E4\0F\00#t\0E\0B\00\00\80?\0C\00\00\00\00\C8\1F\00#r\10\0B\0E\00\00\00\0B\00\00\00\00\C8\0F\00#r\0B\05\10\00\00\00\FF\00\00\00\00\C8\0F\00#r\0E\0C\0B\00\00\00\05\00\00\00\00\C8\0F\00#r\0B\10\0E\00\00\00\0B\00\00\00\00\C8\0F\00#r\0C\0C\0B\00\00\00\05\00\00\00\00\C8\0F\00#r\05\10\0C\00\00\00\0B\00\00\00\00\CA\0F\00\19x\09\FF\17\00\00\00\05\16\01\00\00\C8\0F\00\12x\09\09\FF\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0D\09\01\00\00\00\0A\02\8E\07\00\CA\0F\00\10x\07\0D\FF\FF\FF\FF\FF\E0\FF\07\00\C8\0F\00\0Cx\00\07\FE\00\00\00p`\F0\03\00\D8\0F\00G\89\00\00\00\02\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\FE\00\00\00pB\F0\03\00\D8\0F\00G\09\00\00\B0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\01\00\00\00pb\F0\03\00\D8\0F\00G\09\00\00\D0\01\00\00\00\00\80\03\00\EA\0F\00\0Cx\00\0D\E8\FF\FF\FFpb\F0\03\00\E4\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\D4\0F\00G\89\00\00\A0\01\00\00\00\00\80\03\00\EA\0F\00#r\07\10\0C\00\00\00\0B\C0\00\00\00\E2\0F\1C\0Cr\00\0D\FF\00\00\00pR\F4\03\00\E2\0F\04#r\0A\10\0C\00\00\00\0B@\00\00\00\E2\0F\1C\0Cr\00\0D\FF\00\00\00pR\F2\03\00\E4\0F\00\12x\09\07\FF\FF\7F\00\FF\C0\8E\07\00\E2\0F\00#r\07\10\0C\00\00\00\0B\80\00\00\00\E2\0F\00\10x\0C\0D \00\00\00\FF\E0\FF\07\00\E2\0F\00$r\0B\FF\FF\00\00\00\0D\0A\8E\07\00\E2\0F\00\12x\09\09\00\00\80\00\FF\FC\8E\07\00\E4\0F\00\0Br\00\07\0A\00\00\00\00\D0\F1\03\00\C4\0F\00\19r\0C\09\0C\00\00\00\FF\06\00\00\00\E4\0F\00\07r\0A\0B\FF\00\00\00\00\00\00\01\00\E4\0F\00\0Cr\00\0C\FF\00\00\00pR\F2\00\00\E4\0F\00\19r\0A\FF\0A\00\00\00\09\16\01\00\00\E4\0F\00\1Cx\00\00\00\00\00\00p5p\00\00\E4\0F\00\19x\0C\FF\01\00\00\00\0A\16\01\00\00\C4\0F\00\07x\07\FF\01\00\00\00\00\00\00\04\00\C8\0F\00\12x\07\07\01\00\00\00\0C\F8\8E\07\00\C8\0F\00\12r\07\07\0A\00\00\00\FF\C0\8E\07\00\CA\0F\00$x\0C\0C\01\00\00\00\07\02\8E\07\00\CA\0F\00\12r\05\0C\05\00\00\00\FF\FC\8E\07\00\E2\0F\00Gy\00\00@\00\00\00\00\00\80\03\00\EA\0F\00\12x\05\05\00\00\00\80\FF\C0\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Gy\00\00\10\00\00\00\00\00\80\03\00\EA\0F\00$x\05\0A\00\00\80\00\05\02\8E\07\00\C8\0F\00Ay\03\00\00\00\00\00\00\00\80\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\08\E0\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\0A\00\00\00\80\05H\8E\07\00\C8\0F\00\12x\05\05\00\00\80\7F\FF\FC\8E\07\00\E2\0F\00Py\00\08\A0\EF\FF\FF\FF\FF\C3\03\00\F0\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\05\0A\00\00\00\80\05H\8E\07\00\CA\0F\00Py\00\08p\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\E4\0F\00$t\05\FF\FF\FF\FF\7F\FF\00\8E\07\00\C8\0F\00Py\00\08@\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00!r\05\09\0A\00\00\00\00\00\01\00\00\E4\0F\00$t\09\FF\00\00\00\00\FF\00\8E\07\00\CC\0F\00Py\00\08\10\EF\FF\FF\FF\FF\C3\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\09\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\D8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00^\00\00\FF\00\8E\07\00\E2\0F\00\02z\0F\00\00_\00\00\00\0F\00\00\00\E2\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02\18\00\00\00\0E\EB\10\00\00\E8\03\00\80y\0B\02\18\00\00\00\00\E9\10\00\00\A2\0E\00$z\09\09\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02 \00\00\00\09\E9\10\00\00\E8\03\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E2\0F\00\02z\05\00\00[\00\00\00\0F\00\00\00\E2\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E2\0F\00\02z\0D\00\00X\00\00\00\0F\00\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\CA\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02\04\00\00\00\0D\E9\10\00\00\E2\03\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\85s\00\02$\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\02$\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\C0\02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\90\02\00\00\00\00\80\03\00\EA\1F\00\80y\00\02\1C\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0A\02 \00\00\00\00\EB\10\00\00\A8\0E\00\80y\06\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\04\02\08\00\00\00\00\EB\10\00\00(\0F\00\80y\0E\02\1C\00\00\00\00\E9\10\00\00h\0F\00\80y\0C\02 \00\00\00\00\EB\10\00\00b\0F\00$r\0B\0A\00\00\00\00\0B\02\8E\07\00\E2O\00\19x\09\FF\1F\00\00\00\0A\14\01\00\00\C4\0F\00\11r\08\0A\06\00\00\00\FF\10\82\07\00\E4\8F\04\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\06\0B\04\00\00\00\FF\10\80\07\00\E4\0F\05\11r\09\0A\07\00\00\00\09\14\8F\00\00\E4\0F\00\11r\07\0B\05\00\00\00\00\14\0F\00\00\E4\0F\00\80y\04\02\08\00\00\00\00\EB\10\00\00\A8\0E\00\80y\09\08\00\00\00\00\00\E9\10\00\00\E8\0E\00\80y\06\06\00\00\00\00\00\E9\10\00\00\E4\0E\00!r\0B\06\09\00\00\80\00\00\00\00\00\D0\8F\00\85s\00\02\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\02\00\00\00\00\00\E9\10\00\00\E2\0E\00$t\0F\FF\9D\98\BB;\FF\00\8E\07\00\E2\0F\00\02x\11\00\00\00|C\00\0F\00\00\00\E2\0F\00$r\0D\0C\0E\00\00\00\0D\02\8E\07\00\CA\0F\02\11r\04\0D\04\00\00\00\FF\10\80\07\00\E2O\00#t\0A\00\00\00\00?\0F \00\00\00\C8\8F\00#t\0A\0A\01\00@K\11@\00\00\00\C8\0F\00!t\07\0A\7F\00@\CB\00\00\00\00\00\C8\0F\00#x\07\00;\AA\B8?\07\08\00\00\00\C8\0F\00#x\07\00`p\A52\07\00\00\00\00\CC\0F\00\08s\07\00\07\00\00\00\00\08\00\00\00b\0E\00$x\0A\0A\00\00\80\00\FF\00\8E\07\00\E2\0F\00\19x\00\FF\1F\00\00\00\0D\14\01\00\00\C8\0F\00\11r\05\0D\05\00\00\00\00\14\0F\00\00\E2\0F\00 r\09\0A\07\00\00\00\00\00@\00\00\D0/\00\85s\00\04\00\00\00\00\09\E9\10\00\00\E8\03\00\80y\00\02$\00\00\00\00\E9\10\00\00(\0E\00\80y\0D\02\1C\00\00\00\00\E9\10\00\00\A2\0E\00\10x\0B\00\01\00\00\00\FF\E0\FF\07\00\D0\1F\00\85s\00\02$\00\00\00\0B\E9\10\00\00\E8\03\00\80y\00\02$\00\00\00\00\E9\10\00\00\A4\0E\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8O\00G\89\00\00p\FD\FF\FF\FF\FF\83\03\00\EA/\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02 \00\00\00\00\E9\10\00\00\A2\0E\00\02z\05\00\00\00\00\00\00\0F\00\00\00\C6\0F\00\80y\07\02\18\00\00\00\00\E9\10\00\00\E4\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02 \00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02 \00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00p\FC\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\02z\01\00\00\0A\00\00\00\0F\00\00\00\C6\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\0B\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C0\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\10\FF\00`\00\00\FF\00\8E\07\00\E2\0F\00\02z\11\00\00a\00\00\00\0F\00\00\00\E2\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\CA\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\03\00\80y\0D\02(\00\00\00\00\E9\10\00\00\A2\0E\00$z\0B\0B\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\020\00\00\00\0B\E9\10\00\00\E8\03\00\80y\00\020\00\00\00\00\E9\10\00\00\A2\0E\00\02z\04\00\00Z\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E2\0F\00\02z\06\00\00\\\00\00\00\0F\00\00\00\E2\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E2\0F\00\02z\08\00\00^\00\00\00\0F\00\00\00\E2\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E2\0F\00\02z\0F\00\00X\00\00\00\0F\00\00\00\C6\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\18\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02 \00\00\00\08\EB\10\00\00\E8\03\00\85s\00\02\08\00\00\00\0F\E9\10\00\00\E2\03\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\85s\00\028\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\028\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\80\02\00\00\00\00\80\03\00\E4\0F\00\85s\00\024\00\00\00\FF\E9\10\00\00\E2\01\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00@\02\00\00\00\00\80\03\00\EA\1F\00\80y\09\020\00\00\00\00\E9\10\00\00\A8\1E\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\028\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\02 \00\00\00\00\EB\10\00\00\E8\0E\00\80y\04\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\0A\028\00\00\00\00\E9\10\00\00h\0F\00\80y\0D\02,\00\00\00\00\E9\10\00\00b\0F\00$r\0B\09\00\00\00\00\08\02\8E\07\00\E2O\00\19x\08\FF\1F\00\00\00\09\14\01\00\00\C4\0F\00\11r\06\09\06\00\00\00\FF\10\82\07\00\E4\8F\00\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\04\0B\04\00\00\00\FF\10\80\07\00\E4\0F\01\11r\07\09\07\00\00\00\08\14\8F\00\00\E4\0F\00\11r\05\0B\05\00\00\00\00\14\0F\00\00\E2\0F\00\80y\08\024\00\00\00\00\E9\10\00\00\AA\0E\00\80y\07\06\00\00\00\00\00\E9\10\00\00\E8\0E\00\80y\04\04\00\00\00\00\00\E9\10\00\00\E2\0E\00\10x\0B\0A\01\00\00\00\FF\E0\FF\07\00\D0\0F\02\85s\00\028\00\00\00\0B\E9\10\00\00\E8\01\00\80y\0A\028\00\00\00\00\E9\10\00\00\22\0F\00!r\09\04\07\00\00\80\00\00\00\00\00\D0\8F\00\85s\00\02\04\00\00\00\09\E9\10\00\00\E8\01\00\80y\00\02\04\00\00\00\00\E9\10\00\00\E2\0E\00$t\07\FF\9D\98\BB;\FF\00\8E\07\00\E2\0F\00\02x\05\00\00\00|C\00\0F\00\00\00\E4\0F\00\0Cr\00\0A\0D\00\00\00pb\F0\03\00\E2\0F\01#t\04\00\00\00\00?\07 \00\00\00\C8\8F\00#t\04\04\01\00@K\05@\00\00\00\C8\0F\00!t\05\04\7F\00@\CB\00\00\00\00\00\C8\0F\00#x\05\00;\AA\B8?\05\08\00\00\00\C8\0F\00#x\05\00`p\A52\05\00\00\00\00\CC\0F\00\08s\05\00\05\00\00\00\00\08\00\00\00\A2\0E\00$x\04\04\00\00\80\00\FF\00\8E\07\00\C8\0F\00#r\07\04\05\00\00\00\08\00\00\00\00\D0O\00\85s\00\024\00\00\00\07\E9\10\00\00\E2\01\00G\89\00\00\C0\FD\FF\FF\FF\FF\83\03\00\EA\0F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\0D\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\020\00\00\00\00\E9\10\00\00\E8\1E\00\80y\04\02 \00\00\00\00\EB\10\00\00(\0F\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E8A\00\80y\06\02\00\00\00\00\00\E9\10\00\00\A2\0E\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\C4\8F\00\19x\09\07\02\00\00\00\FF\06\00\00\00\E4\0F\04\19x\07\07\02\00\00\00\00\02\01\00\00\E4\0F\00\10r\0A\04\09\00\00\00\FF\E0\F1\07\00\CA\0F\01$x\0B\05\01\00\00\00\07\06\0E\00\00\E4\0F\00\80y\04\02\10\00\00\00\00\EB\10\00\00\EC\0E\00\80y\00\0A\00\00\00\00\00\E9\10\00\00\22\03\00\02x\0F\00'P\05>\00\0F\00\00\00\E4\0F\00\0Bx\00\06\00\00\80\00\00\E0\F2\03\00\D8O\00 \98\06\06\00\00\00K\00\00@\00\00\CA\0F\00\10x\08\06UU\D5\C0\FF\E0\FF\07\00\E4\0F\04\0Cx\00\06\00\00\80\7Fp`\F0\03\00\E4\0F\00\12x\0D\08\00\00\80\FF\FF\C0\8E\07\00\C8\1F\00\10r\08\0D\06\00\00\00\FF\E1\FF\07\00\E4\0F\00\06s\0D\00\0D\00\00\00\00\14 \00\00&\0E\00!t\0C\08\00\00\80\BF\00\00\00\00\00\E2\0F\00\02\08\0B\00\00\00\80\7F\00\0F\00\00\00\E2/\00$r\08\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00#t\0F\0C\F69\10>\0F\08\00\00\00\C6\0F\00\02\98\08\00\00\00\B8\C1\00\0F\00\00\00\E2\0F\00#t\0F\0C\CC\CD\F8\BD\0F\00\00\00\00\E2\0F\00\0Br\00\06\FF\00\00\00\00\D0\F2\03\00\C6\0F\00#t\0F\0CU)\0F>\0F\00\00\00\00\E4\0F\04#x\08\0D\00\00\004\08\00\00\00\00\E4\1F\00#t\0F\0C\B9\D8*\BE\0F\00\00\00\00\C8\0F\00#t\0F\0C\0B\EDL>\0F\00\00\00\00\C8\0F\00#t\0F\0C\22\FF\7F\BE\0F\00\00\00\00\C8\0F\00#t\0F\0Cx\AA\AA>\0F\00\00\00\00\C8\0F\00#t\0F\0C\00\00\00\BF\0F\00\00\00\00\C8\0F\00 r\0F\0C\0F\00\00\00\00\00@\00\00\C8\0F\00#r\0F\0C\0F\00\00\00\0C\00\00\00\00\C8\0F\00#x\0F\08\18r1?\0F\00\00\00\00\C8\0F\00#\04\0F\06\00\00\80\7F\0B\00\00\00\00\E2\0F\00\10r\04\04\09\00\00\00\FF\E0\F1\07\00\C6\8F\00$\94\0F\FF\00\00\80\FF\FF\00\8E\07\00\E2\0F\00\10r\05\05\07\00\00\00\FF\E4\7F\00\00\C6\0F\00!r\0F\00\0F\00\00\00\00\00\00\00\00\D0\0F\01\85s\00\04\00\00\00\00\0F\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\A2\0E\00\02z\07\00\00\00\00\00\00\0F\00\00\00\C6\0F\00\80y\09\02(\00\00\00\00\E9\10\00\00\E4\0E\00$z\07\07\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\020\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\09\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\00\FA\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\09\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00\19y\00\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0F\FF\00_\00\00\FF\00\8E\07\00\C8\0F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\03\00\80y\0B\02 \00\00\00\00\E9\10\00\00\A2\0E\00$z\09\09\00\00\00\00\00\02\8E\07\00\D0\1F\00\85s\00\02(\00\00\00\09\E9\10\00\00\E8\03\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\E4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\C4\0F\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\E4\0F\00\85s\00\02\10\00\00\00\04\EB\10\00\00\E8\03\00\85s\00\02\18\00\00\00\06\EB\10\00\00\E8\03\00\85s\00\02\08\00\00\00\0D\E9\10\00\00\E2\03\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA/\00\80y\00\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\04\02\18\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0B\02$\00\00\00\00\E9\10\00\00\22\0F\00$r\07\00\07\00\00\00\FF\02\8E\07\00\CAO\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\00\11r\08\07\04\00\00\00\FF\10\80\07\00\C8\8F\00\11r\09\07\05\00\00\00\00\14\0F\00\00\E4\0F\00\80y\07\02(\00\00\00\00\E9\10\00\00h\01\00\80y\04\02\10\00\00\00\00\EB\10\00\00h\01\00\80y\09\08\00\00\00\00\00\E9\10\00\00\A8\0E\00\85s\00\020\00\00\00\FF\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\22\0F\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\90\01\00\00\00\00\80\03\00\E4\0F\00\85s\00\02,\00\00\00\09\E9\10\00\00\E2A\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8\0F\01G\09\00\00P\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\06\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\08\02\18\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0A\02,\00\00\00\00\E9\10\00\00(\0F\00\80y\11\02$\00\00\00\00\E9\10\00\00\22\0F\00$r\0B\00\0B\00\00\00\06\02\8E\07\00\CAO\00\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\08\0B\08\00\00\00\FF\10\80\07\00\C8\8F\00\11r\09\0B\09\00\00\00\00\14\0F\00\00\E4\0F\00\80y\00\020\00\00\00\00\E9\10\00\00\AC\0E\00\80y\0B\08\00\00\00\00\00\E9\10\00\00\22\0F\00\10x\0F\00\01\00\00\00\FF\E0\FF\07\00\C6O\00\85s\00\02\00\00\00\00\0A\EB\10\00\00\E8\01\01\80y\0C\02\00\00\00\00\00\EB\10\00\00\A8\0E\00\85s\00\020\00\00\00\0F\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\E2\0E\00\09r\0D\0C\0D\00\00\00\00\00\80\07\00\D0O\00\85s\00\02,\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\11\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\B0\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\09\02,\00\00\00\00\E9\10\00\00\A2\0E\00\19x\00\FF\1F\00\00\00\07\14\01\00\00\E4\0F\02\11r\04\07\04\00\00\00\FF\10\80\07\00\C8\0F\00\11r\05\07\05\00\00\00\00\14\0F\00\00\D0\0F\00\85s\00\04\00\00\00\00\09\E9\10\00\00\E8A\00\80y\00\02(\00\00\00\00\E9\10\00\00\A2\0E\00$v\07\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\0B\02 \00\00\00\00\E9\10\00\00\E2\0E\00$z\07\07\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02(\00\00\00\07\E9\10\00\00\E8\01\00\80y\00\02(\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\B0\FC\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00$v\01\FF\00\0A\00\00\FF\00\8E\07\00\C8\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\10x\01\01\C8\FF\FF\FF\FF\E0\FF\07\00\E2\0F\00$v\0E\FF\00`\00\00\FF\00\8E\07\00\E4\0F\00\19y\03\00\00\00\00\00\00!\00\00\00\22\0E\00\10z\02\01\00\08\00\00\FF\E0\F1\07\00\E2\0F\00$v\0F\FF\00a\00\00\FF\00\8E\07\00\E4\0F\00$v\10\FF\00b\00\00\FF\00\8E\07\00\E4\0F\00$z\11\00\00\00\00\00\03\02\8E\07\00\C4\1F\00$v\03\FF\00\09\00\00\FF\06\0E\00\00\D0\0F\00\85s\00\02 \00\00\00\0E\EB\10\00\00\E8\01\00\85s\00\02(\00\00\00\10\EB\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0B\02 \00\00\00\00\E9\10\00\00\A2\0E\00$v\04\FF\00Z\00\00\FF\00\8E\07\00\C4\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\E4\0F\00$v\06\FF\00\\\00\00\FF\00\8E\07\00\E4\0F\00$v\07\FF\00]\00\00\FF\00\8E\07\00\E4\0F\00$v\08\FF\00^\00\00\FF\00\8E\07\00\E4\0F\00$v\09\FF\00_\00\00\FF\00\8E\07\00\E2\0F\00\85s\00\02\08\00\00\00\04\EB\10\00\00\E2\01\00$v\0D\FF\00X\00\00\FF\00\8E\07\00\C6\0F\00\85s\00\02\10\00\00\00\06\EB\10\00\00\E8\01\00\85s\00\02\18\00\00\00\08\EB\10\00\00\E8\01\00\85s\00\02\00\00\00\00\0D\E9\10\00\00\E2\01\00\0Cr\00\00\0B\00\00\00pb\F0\03\00\D8O\00M\09\00\00\00\00\00\00\00\00\80\03\00\EA\1F\00\85s\00\020\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02(\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\020\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\00\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\00\00\10\03\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\E0\02\00\00\00\00\80\03\00\EA\1F\00\85s\00\024\00\00\00\FF\E9\10\00\00\E8\01\00\80y\05\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\00\024\00\00\00\00\E9\10\00\00\A2\0E\00Us\FF\01\00\00\00\00\00\00\10\00\00\E2\0F\00Ey\01\00 \02\00\00\00\00\80\03\00\E2\0F\00\0Cr\00\00\05\00\00\00pb\F0\03\00\D8O\00G\09\00\00\F0\01\00\00\00\00\80\03\00\EA\1F\00\80y\00\02$\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0C\020\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0E\02(\00\00\00\00\EB\10\00\00\A8\0E\00\80y\08\02\10\00\00\00\00\EB\10\00\00\E8\0E\00\80y\06\02\18\00\00\00\00\EB\10\00\00(\0F\00\80y\04\02\08\00\00\00\00\EB\10\00\00b\0F\00$r\0B\0F\00\00\00\00\0D\02\8E\07\00\CAO\00\19x\0A\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\08\0B\08\00\00\00\FF\10\80\07\00\C8\8F\00\11r\09\0B\09\00\00\00\0A\14\0F\00\00\E2\0F\00$r\0B\00\0C\00\00\00\0D\02\8E\07\00\E4\0F\00$r\0D\0F\0E\00\00\00\0C\02\8E\07\00\CA\0F\00\80y\08\08\00\00\00\00\00\E9\10\00\00\A2\0E\00\19x\00\FF\1F\00\00\00\0B\14\01\00\00\E4\0F\00\11r\06\0B\06\00\00\00\FF\10\80\07\00\E4\0F\01\19x\0A\FF\1F\00\00\00\0D\14\01\00\00\E4\0F\00\11r\04\0D\04\00\00\00\FF\10\82\07\00\E4\0F\02\11r\07\0B\07\00\00\00\00\14\0F\00\00\E4\0F\00\11r\05\0D\05\00\00\00\0A\14\8F\00\00\CC\0F\00\80y\07\06\00\00\00\00\00\E9\10\00\00\E8\0E\00\80y\0A\04\00\00\00\00\00\E9\10\00\00\E2\0E\00\06s\00\00\08\00\00\00\00\14 \00\00\E4N\00#r\0B\00\07\00\00\00\0A\00\00\00\00\D0\8F\00\85s\00\04\00\00\00\00\0B\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\A8\0E\00\80y\0D\02$\00\00\00\00\E9\10\00\00\E2\0E\00\10x\09\00\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\024\00\00\00\09\E9\10\00\00\E8\01\00\80y\00\024\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\0D\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00\10\FE\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\01\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\05\020\00\00\00\00\E9\10\00\00\A8\0E\00\80y\07\02(\00\00\00\00\E9\10\00\00\E2\0E\00\10x\05\05\01\00\00\00\FF\E0\FF\07\00\D0O\00\85s\00\020\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\020\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00 \FD\FF\FF\FF\FF\83\03\00\EA\1F\00Ay\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00\80y\00\02,\00\00\00\00\E9\10\00\00\A2\0E\00$v\05\FF\00\00\00\00\FF\00\8E\07\00\C6\0F\00\80y\07\02 \00\00\00\00\E9\10\00\00\E2\0E\00$z\05\05\00\03\00\00\00\02\8E\07\00\D0O\00\85s\00\02,\00\00\00\05\E9\10\00\00\E8\01\00\80y\00\02,\00\00\00\00\E9\10\00\00\E4\0E\00\0Cr\00\00\07\00\00\00pb\F0\03\00\D8\8F\00G\89\00\00 \FC\FF\FF\FF\FF\83\03\00\EA\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18yp\0A\00\00\00\00\00\00\F0\03\00\00\00\00\00\00\02\00\00\00 \00\00\00\08\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\09\04\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\0E\00\00\00\00\00\00\90\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\13\00\00\00\00\00\00@\02\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00L\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\16\00\00\00\00\00\00\A0\00\00\00\00\00\00\00\03\00\00\00\1A\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\DB\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\D0\16\00\00\00\00\00\00\88\00\00\00\00\00\00\00\03\00\00\00\1B\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00B\01\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\17\00\00\00\00\00\00\90\00\00\00\00\00\00\00\03\00\00\00\1C\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A9\01\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E8\17\00\00\00\00\00\00\B0\00\00\00\00\00\00\00\03\00\00\00\1D\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\02\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\98\18\00\00\00\00\00\00\98\00\00\00\00\00\00\00\03\00\00\00\1E\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00z\02\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\19\00\00\00\00\00\00\90\00\00\00\00\00\00\00\03\00\00\00\1F\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E0\02\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C0\19\00\00\00\00\00\00\A0\00\00\00\00\00\00\00\03\00\00\00 \00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00J\03\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\1A\00\00\00\00\00\00\90\00\00\00\00\00\00\00\03\00\00\00!\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\B1\03\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0\1A\00\00\00\00\00\00\B0\00\00\00\00\00\00\00\03\00\00\00\22\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\009\04\00\00\0B\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A0\1B\00\00\00\00\00\00\D8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\16\04\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00x\1C\00\00\00\00\00\00\D0\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\A3\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\1D\00\00\00\00\00\00\88\01\00\00\00\00\00\00\00\00\00\00\1A\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0F\01\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\D0\1E\00\00\00\00\00\00x\01\00\00\00\00\00\00\00\00\00\00\1B\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00t|e\02\00\00\01\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00]\00\00\00\00\00\00\80\05\00\00\00\00\00\00\03\00\00\00&\00\00\14\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C9\02\00\00\01\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80b\00\00\00\00\00\00\00\08\00\00\00\00\00\00\03\00\00\00'\00\00\14\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\005\03\00\00\01\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80j\00\00\00\00\00\00\00\05\00\00\00\00\00\00\03\00\00\00(\00\00\14\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\99\03\00\00\01\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80o\00\00\00\00\00\00\00\06\00\00\00\00\00\00\03\00\00\00)\00\00\14\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\93\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80u\00\00\00\00\00\00\1C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\88\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\9Cu\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\05\00\00\00\E0~\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\A8\00\00\00\00\00\00\00\A8\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00H\1D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\008X\00\00\00\00\00\008X\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00\80u\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1C\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\01\01H\00\00\00\E8\1C\00\00\00\00\00\00\E4\1C\00\00@\00\00\00\02\00\07\00P\00\00\00\00\00\00\00\00\00\00\00\11 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\C6n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F0 \0A\0A\0A\0A.version 7.2\0A.target sm_70\0A.address_size 64.\00\FF\11global .align 1 .b8 blockIdx[1];\22\00\08?Dim\22\00\07othreadE\00\0AOgridD\00\0A\F0\03_$_str[11] = {95, \04\00P67, 8\08\00C8, 6\14\00\EF70, 84, 90, 0}O\00\0A\7F_$_2[17S\00\0E\108S\00R2, 69 \00\01\14\00R3, 81\18\00\2284k\00\FE \0A.visible .entry _Z4nb_1iPfPiS_iii(\0A.param .u32\1F\00\11_\1D\006_0,'\00/64'\00\06\1F1'\00\13\1F2'\00\13/3,\9C\00\12\1F4'\00\13\1F5'\00\13\A66\0A)\0A{\0A.loc\A2\01\128\A2\01\11_\15\00\A0_depot0[56\1A\02\CBreg .b64 %SP\0F\00\14L\10\00\A4pred %p<4>\12\00\85f32 %f<5\11\00\10b\11\00Yr<39>E\00\E3rd<22>;\0A\0Amov.uW\00\1B,\8A\00b;\0Acvta\B2\00\04%\00\13,\81\00\22ld\F4\00\01\F3\00o%r4, [\F9\00\06\1D]/\00\1F3/\00\08\1E5/\00\1F2/\00\08\194/\00\02\DC\00\0F_\00\09\1F30\00\00\0F`\00\09\1F20\00\00\1F10\00\08\1E1\BF\00\0F/\00\09#0]f\01#to\BE\03\04e\00 4,\06\00\133\1F\00\0A\1C\00\115\1C\00\1F4;\00\05\116\1F\00\1F2;\00\02\117\1C\00\1F6;\00\05\118\1F\00\1F1;\00\02\119\1C\00Q8;\0Ast\DA\00p[%SP+0]\16\00\121\15\00\2264\15\00\118\15\00*d9\16\00\2216\17\00\1A7\17\00\2224\17\00\1A5Y\00!32\17\00\1B2\16\00\02D\00\1A3\16\00\124\86\00\224;\D0\02\01v\01\00$\01xctaid.x\17\00\00\1C\01#nt\16\00qul.lo.s\19\00#7,5\00(r60\00\00\11\01\03/\003add,\00$9,1\00\0B\0E\01\124\CC\00\F2\049;\0Abra.uni LBB0_1;\0A\08\00\10:\1C\02\02Y\00510,4\00\17;\17\00%1,\00\01\92;\0Asetp.gew\003p1,8\00\00'\00\A3;\0A@%p1 brad\00\1B2u\00\132u\00'2:\CF\00[12, 0\B4\00\02\AE\01\0D@\00\133@\00\183\B5\00%3,5\00\08\B5\00%4,\89\01\0C\B5\00#2,8\00\00'\00\01\B5\00\172\B5\00\1B0u\00\134u\00\184\B5\00-20\B5\00\135\1E\02\0C@\00\135@\00\175\B5\00521,5\00\07\B5\00522,T\02\0C\B5\00#3,8\00\00'\00\01\B5\00\163\B5\00\1B8t\00\136t\00\126t\00\02-\03\05\DF\01)16u\00\1F5\F6\01\02(26\8C\00\09\98\02327,8\00\00'\00\084\00\188\D7\00\06\9D\02629,7\00\118\CA\03C.s64\1E\001d11\19\00\00\9C\03$hl\0E\06\00\17\02\03\1C\00\132L\00\03\19\00$3,\CE\00\00\07\00\172\80\00\113\E2\00\00#\00\02\C4\040.rn\80\06\02h\00\11ff\00830;\13\01\04&\02\192\FC\00(31T\02\09\FC\00332,!\00\02\FC\00\06\E5\00533, \00\0F\E5\00\01\01/\01*33\E5\00$6,\1C\00\0B\E5\00$7,\A0\00\00\07\00\02e\01\02K\07\132\E4\00)7]\CA\00\04{\01\09\06\03\193\06\03\0A\C9\00\165\C5\01)34\C9\00%6, \00.31\C9\00\01\CD\01)36\C9\00\00\10\03\03\1C\00\0A\C9\00\02\B2\02\01\9F\00\01'\00\07\C9\00\123\C9\00\102\A0\063fma\AD\01S %f4,\AE\01\00\EC\00\22%fZ\05\00\1B\00\03/\00\00\15\00\1B4\F2\02\137\F2\02\177f\03/37\8F\02\03338,\1E\00\03%\06\0B\C3\03/38\C3\03\04*8:\18\00\139\18\00\179u\00\192\90\04\06u\00324,\1E\00\0Bu\00\03\ED\04/24\ED\04\04+10v\00$11\1A\00\191H\05\185H\06\06\17\00\00\CE\01\16nw\06\08\04\02\02f\02\019\00\13rd\02\02\C5\00(18\14\04\06\C5\00\02\FC\01\02\CD\01\1315\07\05\C8\00\02i\06\1F1j\06\06\AF2:\0Aret;\0A\0A}\AC\0B\05o2iPfS_\A9\0B\03\04\1C\00\0F\A6\0B\09\0B$\00\1F1$\00\10/2,l\00\0F\1F3$\00\10\1F4L\0B\13\1F1L\0B \1C3L\0B\1C8L\0B\1E2L\0B/19L\0B\0C\1F1L\0B\18\00\D3\02\0F\F6\00\03\0F\1A\0B\09\0B,\00\0F\E7\0A\0B\0B-\00\0F\E4\0A\0B\0B-\00\0F\E1\0A\0A\0B,\00\0F\DE\0A\07\1E3\A3\0A\0E\FA\0A\0F;\00\03\1F5\A3\0A\08\1F6J\0A\01\03\E0\08\0F\8D\0A\03\1F6\8D\0A\03\1F4\8D\0A\1B\06\02\04\1F4w\0A\03\1F5w\0A\05#6,5\00(r50\00\1F7w\0A\01$8,1\00\0C\0E\04\02\00\0B\198\0D\04\131\0D\04\191w\0A\189\A4\06\0E\8D\0A\0Fv\0A\05\02\8B\04\1A0u\0A\1B1\0B\09\131t\0A21_2r\00\05s\0C\0F\F7\07\00/11\8A\00\03\1F2\0A\09\06\03E\0A\141\AE\0A\1Ac+\07\02(\05\0A\F3\07#9,\1A\00\0B\F1\07&0,\0C\0D\179&\07\121&\07710]\07\07\05o\05(f1\A3\01/14K\0B\06\1B4\17\01\133\17\01\09K\0B\05\0A\0A\09E\08/16\96\0A\07\1A2A\06\08K\0B;1_6t\00\02J\0B\101J\0B\0A\05\08\02\CF\00\09\CF\08\1F5\A2\01\02/22\A2\01\02/23\A2\01\06\03w\07\122}\07\084\00\09\ED\00\06\D2\02\00\F8\0A\057\00\1D5\D3\01$16\FA\09\07\FE\08\04\AE\09\1D6\D6\01\158\E0\09\00\07\00\177\D8\01\134\D8\01\1B8\D8\01,0]\F4\08\00\A4\00\04\F4\08\05?\00\04\BE\00'0]\15\00\04\A9\01\004\013max\16\00\227,0\00?%f6C\02\02\1B7\A7\01\135\A7\01\09\B1\0C\1F7.\01\04\148\DA\0B\0F\D6\08\04\1F8x\02\04+6:\D2\0A\0F\04\02\00\1B1\B0\0C\04\83\01\09\05\02\08\87\01\03\1A\0C\1D2\87\01\154L\0C\00\07\00\08]\01\00\1D\00\01\06\01\1B2\A9\00\137\A9\00\197d\09\1F7d\09\03\1F8d\09\08&9,j\09\128\E0\00\015\00(20\C7\00\07S\01#1,\1E\00\02M\09\09V\01\02V\05/21W\05\04\1F8c\09\0E\113\0F\07\0Fe\09\05\06\1E\00\0Fg\09\09\0D&\00\1F1&\00\12\1F2&\00\12\0Em\09\0F&\00\01\1F4&\00\12\1F5\95\09\13Y2[64]A\09\0F\95\09\0F\1C6\95\09-66\E2\14)2>F\00\00\E2\14\1F4\96\09\0C\1F2\96\09\22\0E\F9\00\0F\B2\14\09\0D.\00\0F\B1\14\0B\0D/\00\0F\C9\09\0B\0D/\00\0F\CB\09\0B\0D/\00\0F\CD\09\0A\0D.\00\0F\AD\14\AE\0F\0A\0A\0A\1A9\17\00/24\AE\14\02\03\0A\0A/d5,\04\03\0B\16\00\1F4!\0Au\1F8!\0A\00\132\CA\04\1F2!\0A\03/8]!\0A\01/40!\0A\18+2_\0B\09\132\22\0A\1B2\96\14\1F1\E1\13\05+11\17\00\156\17\00\09W\00\133W\00/3:K\0A\00)56\CB\00\183\02\07\0Fb\09\01\142J\0A\08b\09\1B2b\09\132b\09\132b\09\04H\07\1F6L\09\03\1F3W\01\02(24\8C\00\09\F8\01\02-\12$23\AF\10\064\00\186\D7\00\07\CB\06&7,7\00\1E6L\09\02\1F\00\1A7\C5\07\03C\03\1D7\C5\07\159e\09\00\07\00\178\F8\08#41M\0979];\F9\00\192C\0C\0B}\00\03g\07\193}\00\02(\0A-d2u\14\02\F5\00\04\E7\12(22}\00\122}\00\102\18\057sub\C8\12\005\00\01\9D\00\00&\00\0F\D2\09\02\183I\00\184\BF\09$ov\17\00\815, 0f3F0\01\00\09\1A\00\116\1A\00\8BBBB989D;E\13\00]\01\01T\00\02)\00\00I\00\03\05\01\11a\88\00\04(\00\118\1C\00\197Y\00\109Y\0004B4r\00\181\1A\00!50\1A\00237C\8D\00\01s\00\14m\1D\00%1,Q\00!50\0C\00\129F\01\05\96\00352,)\0010fC`\00t7F;\0Aneg \00\013\01)52t\00\124\01\01kB8AA3B\E7\00&55\E7\00\125\06\00\193=\00\02$\01|2A57060=\00\07$\01!56\06\00\03\D2\04\16b\DE\0A3f51$\02\08\CC\16\00\C1\0D\173,\004f58\C5\16\E4ex2.approx.ftzk\00\007\00(f5\02\0C560,Y\04\0B\99\00661,4\00\01\85\00*60@\02\02\8D\04,f6v\04\135\02\04,5:\17\17\0E\9F\03\02\C6\16\00\1E\00\0F\D3\04\03\1F3\D3\04\05\08\BD\0B\191\C6\00\0E\CA\0C,10\CD\0E\03\B6\0C\03\B2\055u.f\E0\18\00 \00]0f008\EB\02\129\19\00\1D0\19\00'62\06\0F\03\13\00\01K\00\1A9$\19\1B2\19\10\132\E1\0B\112\E1\0B&ul|\01\152\89\00.4Bp\00\121\BB\02?1B8\8A\00\03\1E2\8A\00\0D\1A\06\138z\00\128q\06\07\F5\16\196\BC\02\01>\00(62\92\02#14\1E\0E\06\C6\01\02]\0E\00\19\00\90-10597608r\00Uand.b\C0\0F\02'\00\82-8388608\A8\04\03?\00\147?\00\02\C3\0F\05l\004f12\E7\15\1DcK\19\183/\00\02\AE\00\00C\0010f34\04\1C0j\03\01\A5\00\027\00\01)\00\01\CD\0E\09\1A\04\01\A6\00\01t\00N0fBF\02\02!17_\00jE1039Fy\00\1184\00|E055027y\00#9,#\00\05c\00\09\EB\04!20=\00{DF8CDCC=\00\01$\06\04C\00\01=\00)20=\00\122\94\00l0F2955=\00&3,C\00\02=\00\09\1D\02!24z\00|E2AD8B9=\00%5,C\00\03=\00\194=\00\02\D7\04lE4CED0\14\05\01w\07\03C\00\03=\00\091\01\2228z\00l7FFF22=\00%9,C\00\03=\00\188=\00\2230z\00kAAAA78=\00\01R\04\03C\00\02=\00)30=\00\03\DF\01\0F$\02\02\01A\1B\03C\00\03=\00*2;\9C\03\00\D0\1A\04)\00,16@\00%5,#\00$16#\00\07}\00\024\01{F317218=\00%5,\A6\02\01\00\1B3f35\A3\04\12l\19\054%p4)\03\99213909504\DC\00\116y\00\115w\04\164w\04+10\FE\03\139\FE\03\189\FE\03\00\8D\1A50f7\F8\02\09\9C\00$6,\0D\04\2237\06\00\0Ex\00\0C\0A\0A#10g\00(10h\00\01@\00#64\DB\00\15n~\05\135c\00\0Fe\05\04\135(\12G@%p5\DB\00\0A\E0\1F\142\9A\1A\00\09\00\08u\00\00p\1B_0fFF8Y\00\04,38H\00\04\93\0B(12H\00\02\09\07\185\E3\09\191\E3\09\07$\12\04<\12\01\DD\0A\07\E2\09\02\D5\04\0FW\1E\15\02x\00'39W\1E\09\B5\04440,\98\00)39\98\00\184\BC\12\08g\00$5, \00\03g\00\05\16\0A\00\1D\00\013\07,40\10\01\04y\07=13:w\12\0E\8E\12\1F9\8E\12\07\02\C1\0A\019\00#r1\B2\00\05v\12\061\01\01\B1\00&32:\15\141\DB \08'\08\04\E4\13\1F2\C4\0D\05\1F4\8F\12\0E\114\D1\0F\0F\8D\12\03\04\1C\00\0F\8B\12\09\1F4\F2\1B\10\1F4\F2\1B\10\0B$\00\1F3$\00\02\0F\F2\1B\22!3[\A0\0E\07\08\12\0F\F2\1B &21K\12\03]\12)3>F\00\0F\F3\1B\11\1F3]\12\22\1F4\F3\1B\18\1F4\F3\1B\19\1F4\F3\1B\19\1F4\F3\1B\18\1F4\F3\1B\81\1F4\E9\11\01$8]O\12\0E\FF\11\0D\F2\1B/24\D1\11\01/28\D1\11t/32\D1\11\00\133\0D\04\1F3\D1\11\02\04\B5\05\0B\D1\11?24]\D1\11\17\1B3\D9\0B\133\D0\11\1F3\D0\11\0E\1F3\B9\11\02\133\E6\0C\1F3\B9\11\03/36\B9\11\02/28\B9\11\19\1B3\B9\11\133\B9\11\1A3\B9\11\04t\19\198s\00\0F=\01\03(20\8A\00\0A\F4\05#1,8\00\02\C3\05\064\00\09\D5\00\07\F4\05\173\F4\05\1D2:\11\1E89\11\0F\D6\1C*\06\F1\00(116\07\0Bw\00\03K\01\1A9\CF\07$3,\1C\00\0Bz\00\154\E8\07\03\F3\19\05|\00$2,\F8\19\0B\B0\11\223,\9A\00\01\C6\0D\0F\94\1B\02\0A\BE\1B\03\C9\0E\06\A1\08\0F\AA\11\06\0F\A9\11\09\227,P\00\03\E8\09\0F\A5\11\02\138\80\09\0B\11\0F\0F\A2\11\01/10\A2\11\08%11\B0\08#10&\0F\0A\86\0D&2,\E5\0E\0F\A0\11\00\01p\01>f12\F9\0D\0F\A0\11\04\02S\0B\164\F8\0D)13<\00\0F\9F\11\09\01\9B\0E\18f\D0\0B\0A\9E\11\144^\0F\01\11\02\08\A3\14\1C4\9E\11\02\F2\08/25\9E\11\04\01\1D\03\02\1A\0E\09\0B\10\170\00\0E\198\AA\02\1F5\9C\03\01/26\9C\03\03\1F7\9C\03\07#8,8\00\02\09\15\064\00\1F9\9C\03\03\00\7F\0D\057\00\1E9%\03\146\E5(\08%\03$7,\1C\00\0B%\03(8,\94\0A\177\F6\02\00\1D\00\14]\F2\0E\09\AB\04\135\AB\04\09b\12\1F1\AE\00\04#2,\1E\00\0Bb\12\04\A8\22\1F2|\05\04*6:\18\00\137\18\00\0A\8E\1D\1F4\00\0B\03\1F5\8E\1D\08$6,9\007r15p\01(17\BB\01\06\C2\00\02#\01$17\F0\10\09\C5\00\02\F2\06/18\F3\06\04\0F\8E\1D\0C#rr~/\0F\FF\0A\00\07\1C\00\0F\FF\0A\06\0E$\00\1F1$\00\10\0E\FF\0A\0E$\00\1F3$\00\07\0F\FF\0A\1D\1F4\\\1D \0D=2,24\FF\0A940>F\00\00\FF\0A\1F7\FF\0A\0C\1F4\FF\0A\1F\0E\F7\00\0F\FF\0A\07\0E,\00\0F\FF\0A\08\0E-\00\0F\FF\0A\08\0E-\00\0F\FF\0A\07\0E,\00\0F\FF\0A\FFj\134\0C\04\1F4\FF\0A\1A\1F8\FF\0A\18\1C4\86\11\134\00\0B\1F4\00\0B\19\0E8\1E\0E\17\00\154\17\00\09n\00\133n\00\0F.\0B\02/44.\0B\03\0F\E7\1C\1A\1B4.\0B\134.\0B\1B4\E7\1C\183=\0A\05u\00/32n\01\02\193\8C\00\09\0F\02\01B\14\04\BB\06\1834\00\185\D7\00\06$\06\011\14\047\00\1E5\94\07\1F41/\00\04t\07\1D4\94\07(6,\D9\0A,5;\D0.\00#\00\0F\DF0\02\127\D6.\07\C5\07\05\A4\11\01\DB\08\05\BD\0A\00\D4\06\06\EC\11'ld\05\09\04\19\02\0B\17\0A\0C\09\09\08b\00\02G\02\01(\08\05K\00/21b\00\02(22\B3\1F\0F.\17\06\03\06\00\1B2\CA\00\02\86\0B+23\0D\02\135\0D\02\09\90\08\0F\C0.\04\00\CA\13\02\1E\00\0F\DE\02\03/39\DE\02\04\176]\00(14;\02\0E\88\01\04p)\0Aq\0C\04X\01;divr\0C\132\C2\1A\0EU\01\0Fs\0C\02\01<\01'ld\ED\08\0F\8D\00\08\145\E9\08\09w\00\156X\0B\175a\00\187\A7\00\06\F3\0B\04|\0C\09W\19%9,\1A\00\0EY(\030\0D\09\F0\0D\1701\0DEsqrt\84\0B\07\98\0C/10\E4\1C\02811;\C9\04\002\0C\0F\AF\1C\02+16\BD\01\137\BD\01/7:\E8\09\00\01\0C\1D\06\17\00\1F8\9B\04\07#3,8\00\02\EB\09\08V\1C\1C4\DF\17\134\DD\1B>4_8\CA\0F\0C\9B\04/24\9B\04\02/25\9B\04\06$26\DF\0C\02\CD\0C\0Ec\0C\0B\E3\1D\0C`\0C\1Fc\CB\0F\01\1F8\CB\0F$\08\AA\0C\03\CC\0F\0D\81\02$12\AA\0C'ldD\0E\06i\02\09\82\0F\00[\03\05\85\0E\08\FD\02(15f\1E\09D\03\011\05\04:\00/5;O\10\01*8]\CB\00$2,\1F\00\02\CC\00\05u\02\00\1C\00\02t\02\0CL\02\139\D7\01\08\EB3/30u\01\03\00\F0\0C\0FX\1F\18\06\A9\02\0B\EB3\144Q\19\1C4\EB3\1F9\F9\0C\02.20\F9\17\0F\05\12\18\1F2\05\12\01\142p*\08\C8\00\03\EC\08/23\ED\08\03\0F\EB3\0EErr_2\CA'\0F\FD\0C\02\07\1F\00\0F\00\0D\09\0E'\00\1F1'\00\13\1F2'\00\13\0E\09\0D\0F'\00\02\1F4'\00\13\1F5'\00\07\0F\97? \1F5\97?C)8>E\00\0F\97?\11\1F5Y\0D\18\00\F3\04\0E\F9\00\0F\97?\0D\0E/\00\0F\97?\0A\0F/\00\02\1F4a\0D\00\0E_\00\0F\BE\0D\15\0E0\00\0F\C1\0D\0B\0E0\00\0F\C4\0D\0A\0E/\00\0E\C7\0D\0F\AB\0D\03\0F\A8\0D\01\0F\EA*r\01\15\08\0F\02\0E\04\1F9\97?\F3\135B\05\195/\0E\05\19\0E\01\CD\0A\06\17\00'1,\B9\05\0F0\0E\00$10\B1\0D\081\0E\1C51\0E\1351\0E\1B51\0E\1D2h\09\03\F0\1D\0D@\00\133@\00/3:\EC\0D\00\04\02\0C\0B<\0B/40\03\0E\04\143?\0B\08\03\0E\1C5h\09\135\04\0E\105\04\0E\0A\02\07\0C\1D\0A\03\1E\02\0C@\00\135@\00\087\0C(21f\08\0F#\07\00\1F6\1D\0A\03\02]\07*22\1D\0A\1B5\9A\1A35_6t\00\03N\0C\06Y\09\0E\1D\0A\06\06\0A\0A\F6\01(26\8C\00\0A\E3\07#7,8\00\02n+\064\00\188\D7\00\07\E3\07&9,7\00\0F\97?B\14f\12\0D\05?!\07\F8\00\184\E7\0A\05\AD\00(309\02\09\E1\00\06X\09\02\E1\00\06\CA\00\03\AD\0F\1F1\CA\00\05\145m\16\08\CA\00\03i\0F\1D5\CA\00\157\9B\0F\0F|?*\183\EB\02\0Fb\10\00$25b\10\07\C9\00\175K\10\1E0\C9\00\149d\10\07\C9\00\01\F7\09\0F|?g\135\BF\0A\195h\0D/36t\02\03\01\C2$\01\1E\00\0BT\0A\03\A8\03/37\A8\03\04\0A|?\135\91\0B\195\91\0B(23<\02\06u\00\031\0D\0F|?\15\06\D2\04\0B\91\0B\145\91\0B\1C5\91\0B\1F5\91\0B\02/16\8A\18\08$7,9\00\13rd\02\02\C5\00(18\F9\03\06\C5\00\02\FC\01\02\CD\01+17\C8\00\02N\06/19O\06\03\0F\91\0B\11\02[3\0F\8E\0B\03\04\1C\00\0F\8B\0B\09\0B$\00\1F1$\00\10\0E\8B\18\0E$\00\1F3$\00\02\0F\8A#\22\1F6\8A#1\0D\8A\18926>E\00\00\8A\18\1F51\0B\0C\1F6\8A\18\22\0C\F6\00\0F\8A\18\09\0B,\00\0F\CC\0A\0B\0B-\00\0F\C9\0A\0B\0B-\00\0F\C6\0A\0A\0B,\00\0F\8A\18s\1F0\8A\18\E2\136\0C\04\1F6\8A\18\1A\1F4\8A\18\18\1B6\EF\08\136X\0A\1F6\89\18\19\09@\00\133@\00\0F[\18\02\01\00\09\0Eo\0A/28[\18\19\1B6[\18\136W\0A\1A6[\18\0F\BF\13\03(19\8B\00\1Ac\AA\07\1E8\AD\22\0FZ\13\18\0F%#\12\188\8D\00/20\CB\01\02(21\18\01\09l\02\03\DB\11\140\E1\11\06Z\02\00)\07\04 \00-19\DB\00\02K\01)23\DC\00\04\FF\09\0F\89#%\09o\18\0F\17\17\03\01*\00\03\95\08\09\B4\01\135\B4\01\09\CB\0B\184\9D\01\07\DC\00#5,\1E\00\0B\0B\08\03\85\02/25\85\02\04\0A\92 \136\F5\0896_7\DD\02\1F4\08\08\03\1F5\08\08\08$6,9\00\0F\92 E\06\FC\03\0F\92 \0B\BE7softmaxiPf\08\08\09\1D\00\0F\09\08\05\0F%\00\01/1,J\00\10\1F2%\00\11\1F3\E8\07\13!7[\FF\09\07\94\07\0F\19\13 ,40\E9\07945>F\00\00\E9\07\1F6\E9\07\0C\1F7\E9\07\1E\0F\F8\00\02\0F\EA\07\00\0E-\00\0F\BE\07\0E\0E.\00\0F\BF\07\08\0E-\00\0F\C0\07\09\01\12\04\0E\85\07\0A\DC\07\08-\07\1E8\85\07\06o\07\1F3o\07\AF\137s\03\1F7o\07F\1C7\C8\11\137p\07\1F7p\07\19\08\17\00%40\17\00\09W\00\133W\00\0F\87\07\02/40\87\070\1B7\87\07\137\87\07\1A7\87\07/12\88\07\02/36W\01\02(37\8C\00\09\F8\01\00\01\1E\028\00\02q\0E\064\00\189\D7\00\06t\05\01\E81\047\00\0F\12\07\00\01\E4\02*40\12\07$4,\1C\00\0B\12\07\155+\07\00\07\00\09*\1E$1,\092\07\F9\06\04\B5\0A?f21M\1F\01(0]R)/23\85*\05/24\86*\08\01\18\07\01T\00\02)\00\02i\1F\0E\8A*\01K\1C9f25Y\00\1F7\8D*\05/28\8D*\08\01\7F\12\04Q\00\118\06\00\1C7\09\08\140P6\0F\8F*\03\01\F2\11\0Ed6\0F\8F*\07&33\E7\00\123\06\00\09\B1\00/34\90*\08'35=\00\03\8A6\08\91*\02\EA=\051\13\02\14\00#2,\1A\00\0A\91*\02}\02/42\91*\04\01'\11\01\846\05\F0\01\00~\02\06\D2\08\0A\99\00&9,4\00\146S5\08@\02\02\F3\03\1Bf\E0 \137;\09\197;\09/43\05\03\04#4,\1E\00\0CF\11\029\04/449\04\04\1C6#\09\0B\90\04\04\BE\10\0C@\00\137@\00\09\C0\1F\0F\17\15\03/16y\04\07#3,8\00\020\09\08\A3\15\1C7X\1637_8u\00\09\C0\1F\1F4y\04\02/22y\04\02/23y\04\06\01Z\03%r2A\0B\064\00\09\D7\00\06t\01\01\1E\03\07\F1\1F\0By\04\145\0B\15\07x\04\03\F5\0E\0Cv\04&7,M\0F\1E6e\0C*7]1\02#4]\7F\0B\05)\00\04\ED\00)4]1\03\0Fn\04\05\0Fm\04\09\225,P\00\03o\14\0Fi\04\02\136\9F\22\06R\00\0Ff\04\06\0Fe\04\09\01\1A\03'6,\C8\22\09a\04\01|\0D\1Ff`\04\06\01\B6\0C\01\98\22\06n\00\00\B8\05\0F`\04\06%13\DB\00\03\C6 \191<\00\0F_\04\09&15<\00\144\02!\06^\04\01\A8\17\19f]\04\016\05\01\19\00\0A]\04$16\09\17\0F\EE.\03\147,!\09\EE.\01Y\0C\04\1D\00\1F6\19&\06\09}!\03\19&\02:\00'9;3\03\1F83\03\03\1F9\AC\07\03\1F03\03\06\03\D5\17\01\AB\18(304\00\1F23\03\03\01\E3\05\037\00-323\03\149u\17\073\03\01\06\02-rdA\17\01\FF\01\01\CB\00\01%\00\07\22\03\00\1C\00\05\F7&\09@\04\139@\04\09)\22\1F4\AB\00\04#5,\1E\00\0CR\05$4]\E9\17\0F\12\05\02\0B\98\16\147\98\16\1C7\98\16\1F7\90\0E\03\1F8\90\0E\08\1A9\EF$\0Fb\10\04\06\C5\00\00\B4\08\04H\10*19\C8\00\03\1C\0B/21\1D\0B\03\0F\98\16\0DA6arg\84\0C\00H\14\1E0\9D\16\0E!\00\0F\99\0E\02\0F)\00\08\1F1)\00\15\1F2)\00\15\0D\B1\16\0F)\00\05\1F4)\00\0B\0F\C6L\1E\1F8j/1\1D1\F7\0E931>F\00\00\11\22\0F\F7\0E\0D\1F8\F7\0E\1E\0E\FC\00\0F\C9L\0C\0E1\00\0F\E6!\0D\0E2\00\0F\1C\17\0D\0E2\00\0F!\17\0D\0E2\00\0F&\17\0C\0E1\00\0F+\17\0D\00\1A\06\06\0F\17\0Ak\0F\1F5\EE!\F0\0F\0E\10l/40\0E\10\00\138\F1\04\1F8\0E\10\02\01g\0B\05g\05\191g\05\0F\0E\10\15\1C8\C9\0A\138\0E\10\1F8\0E\10\0E%44\F7\0F\00\85\00\06\12\07\0E\BF\07\0F\F7\0F\0E\01!\08\0AO\06\1A4\F7\0F\1Ac\8E\07$11\FA\0B\08\8F\07$2,\1C\00\0B\90\07'3,\AF\07\0Fd \1E\0F\84\0F\00\1E4J\00\172\83\0F\0E\96\16\1F1\1F:\00\02F\1E/f3\D1\1E\02+11\98\01\133\98\01\1F3\D6\0C\01\01.\1F\0E\D6\0C/36O\11\04\08\D6\0C\05O\11\1B8\8A\19\138O\11\1A8O\11\1F2\E4\01\03/23\E4\01\02/24\E4\01\06\01<\10\018\00\02K\1F\064\00\186\D7\00\01\7F\01\06\CB\0A\047\00\1D6\15\02\03R\08\197\15\02\025\0D/d2\9BM\1A\07\9AM\07\F8\00\0F\15\02\05\02\91\00\01 \00\0CJ\00\135J\00\0D\15\02\186K/\08\15\02\02\EC+'f6E\00%7,\1B\00\07\16\00%8,F\02\03\E4\01\1Al\15K\117\BE\0C\0A\B9\0E\1B82\13\138\CA\0F\138\CA\0F\02[\00\189q\00\08\9D\00\03\B2\02\189\AC\01\188\AC\01\0F!\04\00\1C2U\02\136r\00\0A\1A\19\138\A5\0A\198\B7\0F(29^\00\06\0A\02\01\E1\11\01\1E\00\0B\02\0B\04\0F\22\1F0>\03\04\178]\00\00\AD\0A\06_\0B\06\E9\01\05?\03\128\17\00\02s\00\01\E0#\06\E1\02\08x\04\03\E6\06\1D7x\04$9,P\00\03{P\05\AB\00\00\1D\00\14]\93!\09\AA\00\139\AA\00-9:z\0B\0E\91\0B\1F9\91\0B\07\02\D9\02\019\00\01`\0B\0E\DC\1B)40T\01\03_\10\03\97\0B\0AW\01\03\9F\06/22\A0\06\05\C00:\0Aret;\0A\0A}\0A\00\00\00\00\00\00", section ".nv_fatbin", align 8
@__cuda_fatbin_wrapper = internal constant { i32, i32, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([40201 x i8], [40201 x i8]* @9, i64 0, i64 0), i8* null }, section ".nvFatBinSegment", align 8
@__cuda_gpubin_handle = internal global i8** null, align 8
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_b6.cu, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor to void ()*), i8* null }]

@_ZN10Benchmark6D1Ev = dso_local unnamed_addr alias void (%class.Benchmark6*), void (%class.Benchmark6*)* @_ZN10Benchmark6D2Ev

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__nb_1iPfPiS_iii(i32 %0, float* %1, i32* %2, float* %3, i32 %4, i32 %5, i32 %6) #4 {
  %8 = alloca i32, align 4
  %9 = alloca float*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca float*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.dim3, align 8
  %16 = alloca %struct.dim3, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca { i64, i32 }, align 8
  %20 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %8, align 4
  store float* %1, float** %9, align 8
  store i32* %2, i32** %10, align 8
  store float* %3, float** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %21 = alloca i8*, i64 7, align 16
  %22 = bitcast i32* %8 to i8*
  %23 = getelementptr i8*, i8** %21, i32 0
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %21, i32 1
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32** %10 to i8*
  %27 = getelementptr i8*, i8** %21, i32 2
  store i8* %26, i8** %27, align 8
  %28 = bitcast float** %11 to i8*
  %29 = getelementptr i8*, i8** %21, i32 3
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %21, i32 4
  store i8* %30, i8** %31, align 8
  %32 = bitcast i32* %13 to i8*
  %33 = getelementptr i8*, i8** %21, i32 5
  store i8* %32, i8** %33, align 8
  %34 = bitcast i32* %14 to i8*
  %35 = getelementptr i8*, i8** %21, i32 6
  store i8* %34, i8** %35, align 8
  %36 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %15, %struct.dim3* %16, i64* %17, i8** %18)
  %37 = load i64, i64* %17, align 8
  %38 = load i8*, i8** %18, align 8
  %39 = bitcast { i64, i32 }* %19 to i8*
  %40 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 12, i1 false)
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = bitcast { i64, i32 }* %20 to i8*
  %46 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 12, i1 false)
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = bitcast i8* %38 to %struct.CUstream_st*
  %52 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, i32*, float*, i32, i32, i32)* @_Z19__device_stub__nb_1iPfPiS_iii to i8*), i64 %42, i32 %44, i64 %48, i32 %50, i8** %21, i64 %37, %struct.CUstream_st* %51)
  br label %53

53:                                               ; preds = %7
  ret void
}

declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**)

declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*)

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__nb_2iPfS_ii(i32 %0, float* %1, float* %2, i32 %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast i32* %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_2iPfS_ii to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__nb_3iPfS_S_ii(i32 %0, float* %1, float* %2, float* %3, i32 %4, i32 %5) #4 {
  %7 = alloca i32, align 4
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.dim3, align 8
  %14 = alloca %struct.dim3, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca { i64, i32 }, align 8
  %18 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %7, align 4
  store float* %1, float** %8, align 8
  store float* %2, float** %9, align 8
  store float* %3, float** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %19 = alloca i8*, i64 6, align 16
  %20 = bitcast i32* %7 to i8*
  %21 = getelementptr i8*, i8** %19, i32 0
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %19, i32 1
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %19, i32 2
  store i8* %24, i8** %25, align 8
  %26 = bitcast float** %10 to i8*
  %27 = getelementptr i8*, i8** %19, i32 3
  store i8* %26, i8** %27, align 8
  %28 = bitcast i32* %11 to i8*
  %29 = getelementptr i8*, i8** %19, i32 4
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %19, i32 5
  store i8* %30, i8** %31, align 8
  %32 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %13, %struct.dim3* %14, i64* %15, i8** %16)
  %33 = load i64, i64* %15, align 8
  %34 = load i8*, i8** %16, align 8
  %35 = bitcast { i64, i32 }* %17 to i8*
  %36 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 12, i1 false)
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = bitcast { i64, i32 }* %18 to i8*
  %42 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 12, i1 false)
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = bitcast i8* %34 to %struct.CUstream_st*
  %48 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32, i32)* @_Z19__device_stub__nb_3iPfS_S_ii to i8*), i64 %38, i32 %40, i64 %44, i32 %46, i8** %19, i64 %33, %struct.CUstream_st* %47)
  br label %49

49:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__nb_4iPfS_ii(i32 %0, float* %1, float* %2, i32 %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast i32* %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_4iPfS_ii to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__rr_1iPfPiii(i32 %0, float* %1, i32* %2, i32 %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast i32* %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, i32*, i32, i32)* @_Z19__device_stub__rr_1iPfPiii to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__rr_2iPfS_S_iii(i32 %0, float* %1, float* %2, float* %3, i32 %4, i32 %5, i32 %6) #4 {
  %8 = alloca i32, align 4
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.dim3, align 8
  %16 = alloca %struct.dim3, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca { i64, i32 }, align 8
  %20 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %8, align 4
  store float* %1, float** %9, align 8
  store float* %2, float** %10, align 8
  store float* %3, float** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %21 = alloca i8*, i64 7, align 16
  %22 = bitcast i32* %8 to i8*
  %23 = getelementptr i8*, i8** %21, i32 0
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %21, i32 1
  store i8* %24, i8** %25, align 8
  %26 = bitcast float** %10 to i8*
  %27 = getelementptr i8*, i8** %21, i32 2
  store i8* %26, i8** %27, align 8
  %28 = bitcast float** %11 to i8*
  %29 = getelementptr i8*, i8** %21, i32 3
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %21, i32 4
  store i8* %30, i8** %31, align 8
  %32 = bitcast i32* %13 to i8*
  %33 = getelementptr i8*, i8** %21, i32 5
  store i8* %32, i8** %33, align 8
  %34 = bitcast i32* %14 to i8*
  %35 = getelementptr i8*, i8** %21, i32 6
  store i8* %34, i8** %35, align 8
  %36 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %15, %struct.dim3* %16, i64* %17, i8** %18)
  %37 = load i64, i64* %17, align 8
  %38 = load i8*, i8** %18, align 8
  %39 = bitcast { i64, i32 }* %19 to i8*
  %40 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 12, i1 false)
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = bitcast { i64, i32 }* %20 to i8*
  %46 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 12, i1 false)
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = bitcast i8* %38 to %struct.CUstream_st*
  %52 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32)* @_Z19__device_stub__rr_2iPfS_S_iii to i8*), i64 %42, i32 %44, i64 %48, i32 %50, i8** %21, i64 %37, %struct.CUstream_st* %51)
  br label %53

53:                                               ; preds = %7
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z19__device_stub__rr_3iPfS_ii(i32 %0, float* %1, float* %2, i32 %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca float*, align 8
  %8 = alloca float*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.dim3, align 8
  %12 = alloca %struct.dim3, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca { i64, i32 }, align 8
  %16 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %6, align 4
  store float* %1, float** %7, align 8
  store float* %2, float** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %17 = alloca i8*, i64 5, align 16
  %18 = bitcast i32* %6 to i8*
  %19 = getelementptr i8*, i8** %17, i32 0
  store i8* %18, i8** %19, align 8
  %20 = bitcast float** %7 to i8*
  %21 = getelementptr i8*, i8** %17, i32 1
  store i8* %20, i8** %21, align 8
  %22 = bitcast float** %8 to i8*
  %23 = getelementptr i8*, i8** %17, i32 2
  store i8* %22, i8** %23, align 8
  %24 = bitcast i32* %9 to i8*
  %25 = getelementptr i8*, i8** %17, i32 3
  store i8* %24, i8** %25, align 8
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr i8*, i8** %17, i32 4
  store i8* %26, i8** %27, align 8
  %28 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %11, %struct.dim3* %12, i64* %13, i8** %14)
  %29 = load i64, i64* %13, align 8
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast { i64, i32 }* %15 to i8*
  %32 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 12, i1 false)
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = bitcast { i64, i32 }* %16 to i8*
  %38 = bitcast %struct.dim3* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false)
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %30 to %struct.CUstream_st*
  %44 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__rr_3iPfS_ii to i8*), i64 %34, i32 %36, i64 %40, i32 %42, i8** %17, i64 %29, %struct.CUstream_st* %43)
  br label %45

45:                                               ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z22__device_stub__softmaxiPfii(i32 %0, float* %1, i32 %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca float*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.dim3, align 8
  %10 = alloca %struct.dim3, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca { i64, i32 }, align 8
  %14 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %5, align 4
  store float* %1, float** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %15 = alloca i8*, i64 4, align 16
  %16 = bitcast i32* %5 to i8*
  %17 = getelementptr i8*, i8** %15, i32 0
  store i8* %16, i8** %17, align 8
  %18 = bitcast float** %6 to i8*
  %19 = getelementptr i8*, i8** %15, i32 1
  store i8* %18, i8** %19, align 8
  %20 = bitcast i32* %7 to i8*
  %21 = getelementptr i8*, i8** %15, i32 2
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32* %8 to i8*
  %23 = getelementptr i8*, i8** %15, i32 3
  store i8* %22, i8** %23, align 8
  %24 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %9, %struct.dim3* %10, i64* %11, i8** %12)
  %25 = load i64, i64* %11, align 8
  %26 = load i8*, i8** %12, align 8
  %27 = bitcast { i64, i32 }* %13 to i8*
  %28 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 12, i1 false)
  %29 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = bitcast { i64, i32 }* %14 to i8*
  %34 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 12, i1 false)
  %35 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %14, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = bitcast i8* %26 to %struct.CUstream_st*
  %40 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, float*, i32, i32)* @_Z22__device_stub__softmaxiPfii to i8*), i64 %30, i32 %32, i64 %36, i32 %38, i8** %15, i64 %25, %struct.CUstream_st* %39)
  br label %41

41:                                               ; preds = %4
  ret void
}

; Function Attrs: noinline norecurse optnone uwtable
define dso_local void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 %0, i32* %1, float* %2, float* %3, i32 %4, i32 %5) #4 {
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.dim3, align 8
  %14 = alloca %struct.dim3, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca { i64, i32 }, align 8
  %18 = alloca { i64, i32 }, align 8
  store i32 %0, i32* %7, align 4
  store i32* %1, i32** %8, align 8
  store float* %2, float** %9, align 8
  store float* %3, float** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %19 = alloca i8*, i64 6, align 16
  %20 = bitcast i32* %7 to i8*
  %21 = getelementptr i8*, i8** %19, i32 0
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32** %8 to i8*
  %23 = getelementptr i8*, i8** %19, i32 1
  store i8* %22, i8** %23, align 8
  %24 = bitcast float** %9 to i8*
  %25 = getelementptr i8*, i8** %19, i32 2
  store i8* %24, i8** %25, align 8
  %26 = bitcast float** %10 to i8*
  %27 = getelementptr i8*, i8** %19, i32 3
  store i8* %26, i8** %27, align 8
  %28 = bitcast i32* %11 to i8*
  %29 = getelementptr i8*, i8** %19, i32 4
  store i8* %28, i8** %29, align 8
  %30 = bitcast i32* %12 to i8*
  %31 = getelementptr i8*, i8** %19, i32 5
  store i8* %30, i8** %31, align 8
  %32 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %13, %struct.dim3* %14, i64* %15, i8** %16)
  %33 = load i64, i64* %15, align 8
  %34 = load i8*, i8** %16, align 8
  %35 = bitcast { i64, i32 }* %17 to i8*
  %36 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 12, i1 false)
  %37 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = bitcast { i64, i32 }* %18 to i8*
  %42 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 12, i1 false)
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %18, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = bitcast i8* %34 to %struct.CUstream_st*
  %48 = call i32 @cudaLaunchKernel(i8* bitcast (void (i32, i32*, float*, float*, i32, i32)* @_Z21__device_stub__argmaxiPiPfS0_ii to i8*), i64 %38, i32 %40, i64 %44, i32 %46, i8** %19, i64 %33, %struct.CUstream_st* %47)
  br label %49

49:                                               ; preds = %6
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark65allocEv(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0) unnamed_addr #6 align 2 {
  %2 = alloca %class.Benchmark6*, align 8
  store %class.Benchmark6* %0, %class.Benchmark6** %2, align 8
  %3 = load %class.Benchmark6*, %class.Benchmark6** %2, align 8
  %4 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 3
  %5 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %6 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = mul i64 4, %8
  %10 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 %9, %12
  %14 = call i32 @_ZL17cudaMallocManagedIiE9cudaErrorPPT_mj(i32** %4, i64 %13, i32 1)
  %15 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %16 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %15, i32 0, i32 14
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 4
  %18 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %19 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = mul i64 4, %21
  %23 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = mul i64 %22, %25
  %27 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %17, i64 %26, i32 1)
  %28 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %29 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %28, i32 0, i32 14
  store i32 %27, i32* %29, align 4
  %30 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 5
  %31 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = mul i64 4, %33
  %35 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = mul i64 %34, %37
  %39 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %30, i64 %38, i32 1)
  %40 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %41 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %40, i32 0, i32 14
  store i32 %39, i32* %41, align 4
  %42 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 6
  %43 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = mul i64 4, %45
  %47 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %42, i64 %46, i32 1)
  %48 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %49 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %48, i32 0, i32 14
  store i32 %47, i32* %49, align 4
  %50 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 7
  %51 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = mul i64 4, %53
  %55 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = mul i64 %54, %57
  %59 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %50, i64 %58, i32 1)
  %60 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %61 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %60, i32 0, i32 14
  store i32 %59, i32* %61, align 4
  %62 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 8
  %63 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = mul i64 4, %65
  %67 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %62, i64 %66, i32 1)
  %68 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %69 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %68, i32 0, i32 14
  store i32 %67, i32* %69, align 4
  %70 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 9
  %71 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %72 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = sext i32 %73 to i64
  %75 = mul i64 4, %74
  %76 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %70, i64 %75, i32 1)
  %77 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %78 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %77, i32 0, i32 14
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 10
  %80 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %81 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = mul i64 4, %83
  %85 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %79, i64 %84, i32 1)
  %86 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %87 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %86, i32 0, i32 14
  store i32 %85, i32* %87, align 4
  %88 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 11
  %89 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %90 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %89, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = sext i32 %91 to i64
  %93 = mul i64 4, %92
  %94 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = sext i32 %95 to i64
  %97 = mul i64 %93, %96
  %98 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %88, i64 %97, i32 1)
  %99 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %100 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %99, i32 0, i32 14
  store i32 %98, i32* %100, align 4
  %101 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 12
  %102 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %103 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %102, i32 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = sext i32 %104 to i64
  %106 = mul i64 4, %105
  %107 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = sext i32 %108 to i64
  %110 = mul i64 %106, %109
  %111 = call i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %101, i64 %110, i32 1)
  %112 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %113 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %112, i32 0, i32 14
  store i32 %111, i32* %113, align 4
  %114 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 13
  %115 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %116 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %115, i32 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = mul i64 4, %118
  %120 = call i32 @_ZL17cudaMallocManagedIiE9cudaErrorPPT_mj(i32** %114, i64 %119, i32 1)
  %121 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %122 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %121, i32 0, i32 14
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 14
  %124 = call i32 @cudaStreamCreate(%struct.CUstream_st** %123)
  %125 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %126 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %125, i32 0, i32 14
  store i32 %124, i32* %126, align 4
  %127 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %3, i32 0, i32 15
  %128 = call i32 @cudaStreamCreate(%struct.CUstream_st** %127)
  %129 = bitcast %class.Benchmark6* %3 to %struct.Benchmark*
  %130 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %129, i32 0, i32 14
  store i32 %128, i32* %130, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL17cudaMallocManagedIiE9cudaErrorPPT_mj(i32** %0, i64 %1, i32 %2) #6 {
  %4 = alloca i32**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i32** %0, i32*** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32**, i32*** %4, align 8
  %8 = bitcast i32** %7 to i8*
  %9 = bitcast i8* %8 to i8**
  %10 = load i64, i64* %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @cudaMallocManaged(i8** %9, i64 %10, i32 %11)
  ret i32 %12
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL17cudaMallocManagedIfE9cudaErrorPPT_mj(float** %0, i64 %1, i32 %2) #6 {
  %4 = alloca float**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store float** %0, float*** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load float**, float*** %4, align 8
  %8 = bitcast float** %7 to i8*
  %9 = bitcast i8* %8 to i8**
  %10 = load i64, i64* %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @cudaMallocManaged(i8** %9, i64 %10, i32 %11)
  ret i32 %12
}

declare dso_local i32 @cudaStreamCreate(%struct.CUstream_st**) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark64initEv(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark6*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %2, align 8
  %9 = load %class.Benchmark6*, %class.Benchmark6** %2, align 8
  store i32 0, i32* %3, align 4
  br label %10

10:                                               ; preds = %68, %1
  %11 = load i32, i32* %3, align 4
  %12 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %11, %13
  br i1 %14, label %15, label %71

15:                                               ; preds = %10
  store i32 0, i32* %4, align 4
  br label %16

16:                                               ; preds = %48, %15
  %17 = load i32, i32* %4, align 4
  %18 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %51

21:                                               ; preds = %16
  %22 = call i32 @rand() #3
  %23 = sitofp i32 %22 to float
  %24 = fdiv contract float %23, 0x41E0000000000000
  %25 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 5
  %26 = load float*, float** %25, align 8
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = mul nsw i32 %27, %29
  %31 = load i32, i32* %4, align 4
  %32 = add nsw i32 %30, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, float* %26, i64 %33
  store float %24, float* %34, align 4
  %35 = call i32 @rand() #3
  %36 = sitofp i32 %35 to float
  %37 = fdiv contract float %36, 0x41E0000000000000
  %38 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 7
  %39 = load float*, float** %38, align 8
  %40 = load i32, i32* %3, align 4
  %41 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = mul nsw i32 %40, %42
  %44 = load i32, i32* %4, align 4
  %45 = add nsw i32 %43, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float, float* %39, i64 %46
  store float %37, float* %47, align 4
  br label %48

48:                                               ; preds = %21
  %49 = load i32, i32* %4, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %4, align 4
  br label %16, !llvm.loop !5

51:                                               ; preds = %16
  %52 = call i32 @rand() #3
  %53 = sitofp i32 %52 to float
  %54 = fdiv contract float %53, 0x41E0000000000000
  %55 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 6
  %56 = load float*, float** %55, align 8
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %56, i64 %58
  store float %54, float* %59, align 4
  %60 = call i32 @rand() #3
  %61 = sitofp i32 %60 to float
  %62 = fdiv contract float %61, 0x41E0000000000000
  %63 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 8
  %64 = load float*, float** %63, align 8
  %65 = load i32, i32* %3, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds float, float* %64, i64 %66
  store float %62, float* %67, align 4
  br label %68

68:                                               ; preds = %51
  %69 = load i32, i32* %3, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %3, align 4
  br label %10, !llvm.loop !7

71:                                               ; preds = %10
  store i32 10, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %72

72:                                               ; preds = %138, %71
  %73 = load i32, i32* %6, align 4
  %74 = bitcast %class.Benchmark6* %9 to %struct.Benchmark*
  %75 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %74, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp slt i32 %73, %76
  br i1 %77, label %78, label %141

78:                                               ; preds = %72
  store i32 0, i32* %7, align 4
  br label %79

79:                                               ; preds = %98, %78
  %80 = load i32, i32* %7, align 4
  %81 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %80, %82
  br i1 %83, label %84, label %101

84:                                               ; preds = %79
  %85 = call i32 @rand() #3
  %86 = load i32, i32* %5, align 4
  %87 = srem i32 %85, %86
  %88 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 3
  %89 = load i32*, i32** %88, align 8
  %90 = load i32, i32* %6, align 4
  %91 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = mul nsw i32 %90, %92
  %94 = load i32, i32* %7, align 4
  %95 = add nsw i32 %93, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %89, i64 %96
  store i32 %87, i32* %97, align 4
  br label %98

98:                                               ; preds = %84
  %99 = load i32, i32* %7, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %7, align 4
  br label %79, !llvm.loop !8

101:                                              ; preds = %79
  store i32 0, i32* %8, align 4
  br label %102

102:                                              ; preds = %134, %101
  %103 = load i32, i32* %8, align 4
  %104 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp slt i32 %103, %105
  br i1 %106, label %107, label %137

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 6
  %109 = load float*, float** %108, align 8
  %110 = load i32, i32* %8, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, float* %109, i64 %111
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 11
  %115 = load float*, float** %114, align 8
  %116 = load i32, i32* %6, align 4
  %117 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = mul nsw i32 %116, %118
  %120 = load i32, i32* %8, align 4
  %121 = add nsw i32 %119, %120
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds float, float* %115, i64 %122
  store float %113, float* %123, align 4
  %124 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 12
  %125 = load float*, float** %124, align 8
  %126 = load i32, i32* %6, align 4
  %127 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %9, i32 0, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = mul nsw i32 %126, %128
  %130 = load i32, i32* %8, align 4
  %131 = add nsw i32 %129, %130
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds float, float* %125, i64 %132
  store float 0.000000e+00, float* %133, align 4
  br label %134

134:                                              ; preds = %107
  %135 = load i32, i32* %8, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %8, align 4
  br label %102, !llvm.loop !9

137:                                              ; preds = %102
  br label %138

138:                                              ; preds = %137
  %139 = load i32, i32* %6, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %6, align 4
  br label %72, !llvm.loop !10

141:                                              ; preds = %72
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark65resetEv(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0) unnamed_addr #7 align 2 {
  %2 = alloca %class.Benchmark6*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %2, align 8
  %5 = load %class.Benchmark6*, %class.Benchmark6** %2, align 8
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %49, %1
  %7 = load i32, i32* %3, align 4
  %8 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %9 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %12, label %52

12:                                               ; preds = %6
  store i32 0, i32* %4, align 4
  br label %13

13:                                               ; preds = %45, %12
  %14 = load i32, i32* %4, align 4
  %15 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %48

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 6
  %20 = load float*, float** %19, align 8
  %21 = load i32, i32* %4, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds float, float* %20, i64 %22
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 11
  %26 = load float*, float** %25, align 8
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %27, %29
  %31 = load i32, i32* %4, align 4
  %32 = add nsw i32 %30, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float, float* %26, i64 %33
  store float %24, float* %34, align 4
  %35 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 12
  %36 = load float*, float** %35, align 8
  %37 = load i32, i32* %3, align 4
  %38 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = mul nsw i32 %37, %39
  %41 = load i32, i32* %4, align 4
  %42 = add nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float* %36, i64 %43
  store float 0.000000e+00, float* %44, align 4
  br label %45

45:                                               ; preds = %18
  %46 = load i32, i32* %4, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %4, align 4
  br label %13, !llvm.loop !11

48:                                               ; preds = %13
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %3, align 4
  br label %6, !llvm.loop !12

52:                                               ; preds = %6
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark612execute_syncEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.dim3, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca { i64, i32 }, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca { i64, i32 }, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca { i64, i32 }, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca %struct.dim3, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca { i64, i32 }, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca %struct.dim3, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca { i64, i32 }, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca %struct.dim3, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca { i64, i32 }, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca %struct.dim3, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca { i64, i32 }, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca %struct.dim3, align 4
  %42 = alloca %struct.dim3, align 4
  %43 = alloca { i64, i32 }, align 4
  %44 = alloca { i64, i32 }, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %45 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %46 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %47 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %46, i32 0, i32 8
  %48 = load i8, i8* %47, align 4
  %49 = trunc i8 %48 to i1
  br i1 %49, label %50, label %103

50:                                               ; preds = %2
  %51 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %52 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %51, i32 0, i32 11
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %103

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %57 = load float*, float** %56, align 8
  %58 = bitcast float* %57 to i8*
  %59 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %60 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = mul i64 4, %62
  %64 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = mul i64 %63, %66
  %68 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %69 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %68, i32 0, i32 15
  %70 = load i32, i32* %69, align 8
  %71 = call i32 @cudaMemPrefetchAsync(i8* %58, i64 %67, i32 %70, %struct.CUstream_st* null)
  %72 = call i32 @cudaDeviceSynchronize()
  %73 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %74 = load float*, float** %73, align 8
  %75 = bitcast float* %74 to i8*
  %76 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %77 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = mul i64 4, %79
  %81 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = mul i64 %80, %83
  %85 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %86 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %85, i32 0, i32 15
  %87 = load i32, i32* %86, align 8
  %88 = call i32 @cudaMemPrefetchAsync(i8* %75, i64 %84, i32 %87, %struct.CUstream_st* null)
  %89 = call i32 @cudaDeviceSynchronize()
  %90 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 13
  %91 = load i32*, i32** %90, align 8
  %92 = bitcast i32* %91 to i8*
  %93 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %94 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %93, i32 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = sext i32 %95 to i64
  %97 = mul i64 4, %96
  %98 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %99 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %98, i32 0, i32 15
  %100 = load i32, i32* %99, align 8
  %101 = call i32 @cudaMemPrefetchAsync(i8* %92, i64 %97, i32 %100, %struct.CUstream_st* null)
  %102 = call i32 @cudaDeviceSynchronize()
  br label %103

103:                                              ; preds = %55, %50, %2
  %104 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %105 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %104, i32 0, i32 6
  %106 = load i32, i32* %105, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %106, i32 1, i32 1)
  %107 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %108 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %107, i32 0, i32 4
  %109 = load i32, i32* %108, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %109, i32 1, i32 1)
  %110 = bitcast { i64, i32 }* %7 to i8*
  %111 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 12, i1 false)
  %112 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %113 = load i64, i64* %112, align 4
  %114 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = bitcast { i64, i32 }* %8 to i8*
  %117 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 12, i1 false)
  %118 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %119 = load i64, i64* %118, align 4
  %120 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = call i32 @__cudaPushCallConfiguration(i64 %113, i32 %115, i64 %119, i32 %121, i64 0, i8* null)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %134, label %124

124:                                              ; preds = %103
  %125 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 4
  %126 = load float*, float** %125, align 8
  %127 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 3
  %128 = load i32*, i32** %127, align 8
  %129 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %130 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %129, i32 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  call void @_Z19__device_stub__rr_1iPfPiii(i32 1, float* %126, i32* %128, i32 %131, i32 %133)
  br label %134

134:                                              ; preds = %124, %103
  %135 = call i32 @cudaDeviceSynchronize()
  %136 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %137 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %136, i32 0, i32 6
  %138 = load i32, i32* %137, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %138, i32 1, i32 1)
  %139 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %140 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %139, i32 0, i32 4
  %141 = load i32, i32* %140, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %141, i32 1, i32 1)
  %142 = bitcast { i64, i32 }* %11 to i8*
  %143 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 12, i1 false)
  %144 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %145 = load i64, i64* %144, align 4
  %146 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = bitcast { i64, i32 }* %12 to i8*
  %149 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 12, i1 false)
  %150 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %151 = load i64, i64* %150, align 4
  %152 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = call i32 @__cudaPushCallConfiguration(i64 %145, i32 %147, i64 %151, i32 %153, i64 0, i8* null)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %134
  %157 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %158 = load float*, float** %157, align 8
  %159 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 3
  %160 = load i32*, i32** %159, align 8
  %161 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 5
  %162 = load float*, float** %161, align 8
  %163 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %164 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %163, i32 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %169 = load i32, i32* %168, align 8
  call void @_Z19__device_stub__nb_1iPfPiS_iii(i32 1, float* %158, i32* %160, float* %162, i32 %165, i32 %167, i32 %169)
  br label %170

170:                                              ; preds = %156, %134
  %171 = call i32 @cudaDeviceSynchronize()
  %172 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %173 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %172, i32 0, i32 6
  %174 = load i32, i32* %173, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %13, i32 %174, i32 1, i32 1)
  %175 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %176 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %175, i32 0, i32 4
  %177 = load i32, i32* %176, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %177, i32 1, i32 1)
  %178 = bitcast { i64, i32 }* %15 to i8*
  %179 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 12, i1 false)
  %180 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %181 = load i64, i64* %180, align 4
  %182 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = bitcast { i64, i32 }* %16 to i8*
  %185 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* align 4 %185, i64 12, i1 false)
  %186 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %187 = load i64, i64* %186, align 4
  %188 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = call i32 @__cudaPushCallConfiguration(i64 %181, i32 %183, i64 %187, i32 %189, i64 0, i8* null)
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %206, label %192

192:                                              ; preds = %170
  %193 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %194 = load float*, float** %193, align 8
  %195 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 4
  %196 = load float*, float** %195, align 8
  %197 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 7
  %198 = load float*, float** %197, align 8
  %199 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %200 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %199, i32 0, i32 3
  %201 = load i32, i32* %200, align 8
  %202 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %205 = load i32, i32* %204, align 8
  call void @_Z19__device_stub__rr_2iPfS_S_iii(i32 1, float* %194, float* %196, float* %198, i32 %201, i32 %203, i32 %205)
  br label %206

206:                                              ; preds = %192, %170
  %207 = call i32 @cudaDeviceSynchronize()
  %208 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %209 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %208, i32 0, i32 6
  %210 = load i32, i32* %209, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %210, i32 1, i32 1)
  %211 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %212 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %211, i32 0, i32 4
  %213 = load i32, i32* %212, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %213, i32 1, i32 1)
  %214 = bitcast { i64, i32 }* %19 to i8*
  %215 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 12, i1 false)
  %216 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %217 = load i64, i64* %216, align 4
  %218 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = bitcast { i64, i32 }* %20 to i8*
  %221 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %220, i8* align 4 %221, i64 12, i1 false)
  %222 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %223 = load i64, i64* %222, align 4
  %224 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = call i32 @__cudaPushCallConfiguration(i64 %217, i32 %219, i64 %223, i32 %225, i64 0, i8* null)
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %238, label %228

228:                                              ; preds = %206
  %229 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 9
  %230 = load float*, float** %229, align 8
  %231 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %232 = load float*, float** %231, align 8
  %233 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %234 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %233, i32 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %237 = load i32, i32* %236, align 8
  call void @_Z19__device_stub__nb_2iPfS_ii(i32 1, float* %230, float* %232, i32 %235, i32 %237)
  br label %238

238:                                              ; preds = %228, %206
  %239 = call i32 @cudaDeviceSynchronize()
  %240 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %241 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %240, i32 0, i32 6
  %242 = load i32, i32* %241, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %21, i32 %242, i32 1, i32 1)
  %243 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %244 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %243, i32 0, i32 4
  %245 = load i32, i32* %244, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %245, i32 1, i32 1)
  %246 = bitcast { i64, i32 }* %23 to i8*
  %247 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %247, i64 12, i1 false)
  %248 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0
  %249 = load i64, i64* %248, align 4
  %250 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = bitcast { i64, i32 }* %24 to i8*
  %253 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 12, i1 false)
  %254 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %255 = load i64, i64* %254, align 4
  %256 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = call i32 @__cudaPushCallConfiguration(i64 %249, i32 %251, i64 %255, i32 %257, i64 0, i8* null)
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %272, label %260

260:                                              ; preds = %238
  %261 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 10
  %262 = load float*, float** %261, align 8
  %263 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %264 = load float*, float** %263, align 8
  %265 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 9
  %266 = load float*, float** %265, align 8
  %267 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %268 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %267, i32 0, i32 3
  %269 = load i32, i32* %268, align 8
  %270 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %271 = load i32, i32* %270, align 8
  call void @_Z19__device_stub__nb_3iPfS_S_ii(i32 1, float* %262, float* %264, float* %266, i32 %269, i32 %271)
  br label %272

272:                                              ; preds = %260, %238
  %273 = call i32 @cudaDeviceSynchronize()
  %274 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %275 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %274, i32 0, i32 6
  %276 = load i32, i32* %275, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %25, i32 %276, i32 1, i32 1)
  %277 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %278 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %277, i32 0, i32 4
  %279 = load i32, i32* %278, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %26, i32 %279, i32 1, i32 1)
  %280 = bitcast { i64, i32 }* %27 to i8*
  %281 = bitcast %struct.dim3* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %281, i64 12, i1 false)
  %282 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  %283 = load i64, i64* %282, align 4
  %284 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = bitcast { i64, i32 }* %28 to i8*
  %287 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* align 4 %287, i64 12, i1 false)
  %288 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %289 = load i64, i64* %288, align 4
  %290 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = call i32 @__cudaPushCallConfiguration(i64 %283, i32 %285, i64 %289, i32 %291, i64 0, i8* null)
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %304, label %294

294:                                              ; preds = %272
  %295 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %296 = load float*, float** %295, align 8
  %297 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 8
  %298 = load float*, float** %297, align 8
  %299 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %300 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %299, i32 0, i32 3
  %301 = load i32, i32* %300, align 8
  %302 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %303 = load i32, i32* %302, align 8
  call void @_Z19__device_stub__rr_3iPfS_ii(i32 1, float* %296, float* %298, i32 %301, i32 %303)
  br label %304

304:                                              ; preds = %294, %272
  %305 = call i32 @cudaDeviceSynchronize()
  %306 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %307 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %306, i32 0, i32 6
  %308 = load i32, i32* %307, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %29, i32 %308, i32 1, i32 1)
  %309 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %310 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %309, i32 0, i32 4
  %311 = load i32, i32* %310, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %30, i32 %311, i32 1, i32 1)
  %312 = bitcast { i64, i32 }* %31 to i8*
  %313 = bitcast %struct.dim3* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %312, i8* align 4 %313, i64 12, i1 false)
  %314 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 0
  %315 = load i64, i64* %314, align 4
  %316 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = bitcast { i64, i32 }* %32 to i8*
  %319 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %318, i8* align 4 %319, i64 12, i1 false)
  %320 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %321 = load i64, i64* %320, align 4
  %322 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %323 = load i32, i32* %322, align 4
  %324 = call i32 @__cudaPushCallConfiguration(i64 %315, i32 %317, i64 %321, i32 %323, i64 0, i8* null)
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %336, label %326

326:                                              ; preds = %304
  %327 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %328 = load float*, float** %327, align 8
  %329 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 10
  %330 = load float*, float** %329, align 8
  %331 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %332 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %331, i32 0, i32 3
  %333 = load i32, i32* %332, align 8
  %334 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %335 = load i32, i32* %334, align 8
  call void @_Z19__device_stub__nb_4iPfS_ii(i32 1, float* %328, float* %330, i32 %333, i32 %335)
  br label %336

336:                                              ; preds = %326, %304
  %337 = call i32 @cudaDeviceSynchronize()
  %338 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %339 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %338, i32 0, i32 6
  %340 = load i32, i32* %339, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %33, i32 %340, i32 1, i32 1)
  %341 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %342 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %341, i32 0, i32 4
  %343 = load i32, i32* %342, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %343, i32 1, i32 1)
  %344 = bitcast { i64, i32 }* %35 to i8*
  %345 = bitcast %struct.dim3* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* align 4 %345, i64 12, i1 false)
  %346 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 0
  %347 = load i64, i64* %346, align 4
  %348 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = bitcast { i64, i32 }* %36 to i8*
  %351 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %350, i8* align 4 %351, i64 12, i1 false)
  %352 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %353 = load i64, i64* %352, align 4
  %354 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = call i32 @__cudaPushCallConfiguration(i64 %347, i32 %349, i64 %353, i32 %355, i64 0, i8* null)
  %357 = icmp ne i32 %356, 0
  br i1 %357, label %366, label %358

358:                                              ; preds = %336
  %359 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %360 = load float*, float** %359, align 8
  %361 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %362 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %361, i32 0, i32 3
  %363 = load i32, i32* %362, align 8
  %364 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %365 = load i32, i32* %364, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %360, i32 %363, i32 %365)
  br label %366

366:                                              ; preds = %358, %336
  %367 = call i32 @cudaDeviceSynchronize()
  %368 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %369 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %368, i32 0, i32 6
  %370 = load i32, i32* %369, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %37, i32 %370, i32 1, i32 1)
  %371 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %372 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %371, i32 0, i32 4
  %373 = load i32, i32* %372, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %373, i32 1, i32 1)
  %374 = bitcast { i64, i32 }* %39 to i8*
  %375 = bitcast %struct.dim3* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %374, i8* align 4 %375, i64 12, i1 false)
  %376 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 0
  %377 = load i64, i64* %376, align 4
  %378 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = bitcast { i64, i32 }* %40 to i8*
  %381 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %381, i64 12, i1 false)
  %382 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %383 = load i64, i64* %382, align 4
  %384 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = call i32 @__cudaPushCallConfiguration(i64 %377, i32 %379, i64 %383, i32 %385, i64 0, i8* null)
  %387 = icmp ne i32 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %366
  %389 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %390 = load float*, float** %389, align 8
  %391 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %392 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %391, i32 0, i32 3
  %393 = load i32, i32* %392, align 8
  %394 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %395 = load i32, i32* %394, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %390, i32 %393, i32 %395)
  br label %396

396:                                              ; preds = %388, %366
  %397 = call i32 @cudaDeviceSynchronize()
  %398 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %399 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %398, i32 0, i32 6
  %400 = load i32, i32* %399, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %41, i32 %400, i32 1, i32 1)
  %401 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %402 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %401, i32 0, i32 4
  %403 = load i32, i32* %402, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %42, i32 %403, i32 1, i32 1)
  %404 = bitcast { i64, i32 }* %43 to i8*
  %405 = bitcast %struct.dim3* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %404, i8* align 4 %405, i64 12, i1 false)
  %406 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 0
  %407 = load i64, i64* %406, align 4
  %408 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = bitcast { i64, i32 }* %44 to i8*
  %411 = bitcast %struct.dim3* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %410, i8* align 4 %411, i64 12, i1 false)
  %412 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 0
  %413 = load i64, i64* %412, align 4
  %414 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = call i32 @__cudaPushCallConfiguration(i64 %407, i32 %409, i64 %413, i32 %415, i64 0, i8* null)
  %417 = icmp ne i32 %416, 0
  br i1 %417, label %430, label %418

418:                                              ; preds = %396
  %419 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 13
  %420 = load i32*, i32** %419, align 8
  %421 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %422 = load float*, float** %421, align 8
  %423 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %424 = load float*, float** %423, align 8
  %425 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %426 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %425, i32 0, i32 3
  %427 = load i32, i32* %426, align 8
  %428 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %429 = load i32, i32* %428, align 8
  call void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 1, i32* %420, float* %422, float* %424, i32 %427, i32 %429)
  br label %430

430:                                              ; preds = %418, %396
  %431 = call i32 @cudaDeviceSynchronize()
  ret void
}

declare dso_local i32 @cudaMemPrefetchAsync(i8*, i64, i32, %struct.CUstream_st*) #1

declare dso_local i32 @cudaDeviceSynchronize() #1

declare dso_local i32 @__cudaPushCallConfiguration(i64, i32, i64, i32, i64, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %0, i32 %1, i32 %2, i32 %3) unnamed_addr #8 comdat align 2 {
  %5 = alloca %struct.dim3*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.dim3* %0, %struct.dim3** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.dim3*, %struct.dim3** %5, align 8
  %10 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 1
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %struct.dim3, %struct.dim3* %9, i32 0, i32 2
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_Z6FUNCb6PfPiiiS_S_iS_S_S_S_S_S0_ii(float* %0, i32* %1, i32 %2, i32 %3, float* %4, float* %5, i32 %6, float* %7, float* %8, float* %9, float* %10, float* %11, i32* %12, i32 %13, i32 %14) #6 {
  %16 = alloca float*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca float*, align 8
  %21 = alloca float*, align 8
  %22 = alloca i32, align 4
  %23 = alloca float*, align 8
  %24 = alloca float*, align 8
  %25 = alloca float*, align 8
  %26 = alloca float*, align 8
  %27 = alloca float*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca %struct.dim3, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca { i64, i32 }, align 4
  %35 = alloca %struct.dim3, align 4
  %36 = alloca %struct.dim3, align 4
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca { i64, i32 }, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca %struct.dim3, align 4
  %41 = alloca { i64, i32 }, align 4
  %42 = alloca { i64, i32 }, align 4
  %43 = alloca %struct.dim3, align 4
  %44 = alloca %struct.dim3, align 4
  %45 = alloca { i64, i32 }, align 4
  %46 = alloca { i64, i32 }, align 4
  %47 = alloca %struct.dim3, align 4
  %48 = alloca %struct.dim3, align 4
  %49 = alloca { i64, i32 }, align 4
  %50 = alloca { i64, i32 }, align 4
  %51 = alloca %struct.dim3, align 4
  %52 = alloca %struct.dim3, align 4
  %53 = alloca { i64, i32 }, align 4
  %54 = alloca { i64, i32 }, align 4
  %55 = alloca %struct.dim3, align 4
  %56 = alloca %struct.dim3, align 4
  %57 = alloca { i64, i32 }, align 4
  %58 = alloca { i64, i32 }, align 4
  %59 = alloca %struct.dim3, align 4
  %60 = alloca %struct.dim3, align 4
  %61 = alloca { i64, i32 }, align 4
  %62 = alloca { i64, i32 }, align 4
  %63 = alloca %struct.dim3, align 4
  %64 = alloca %struct.dim3, align 4
  %65 = alloca { i64, i32 }, align 4
  %66 = alloca { i64, i32 }, align 4
  %67 = alloca %struct.dim3, align 4
  %68 = alloca %struct.dim3, align 4
  %69 = alloca { i64, i32 }, align 4
  %70 = alloca { i64, i32 }, align 4
  store float* %0, float** %16, align 8
  store i32* %1, i32** %17, align 8
  store i32 %2, i32* %18, align 4
  store i32 %3, i32* %19, align 4
  store float* %4, float** %20, align 8
  store float* %5, float** %21, align 8
  store i32 %6, i32* %22, align 4
  store float* %7, float** %23, align 8
  store float* %8, float** %24, align 8
  store float* %9, float** %25, align 8
  store float* %10, float** %26, align 8
  store float* %11, float** %27, align 8
  store i32* %12, i32** %28, align 8
  store i32 %13, i32* %29, align 4
  store i32 %14, i32* %30, align 4
  %71 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %31, i32 %71, i32 1, i32 1)
  %72 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %32, i32 %72, i32 1, i32 1)
  %73 = bitcast { i64, i32 }* %33 to i8*
  %74 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %76 = load i64, i64* %75, align 4
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = bitcast { i64, i32 }* %34 to i8*
  %80 = bitcast %struct.dim3* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 12, i1 false)
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 0
  %82 = load i64, i64* %81, align 4
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %34, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = call i32 @__cudaPushCallConfiguration(i64 %76, i32 %78, i64 %82, i32 %84, i64 0, i8* null)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %15
  %88 = load float*, float** %16, align 8
  %89 = load i32*, i32** %17, align 8
  %90 = load i32, i32* %18, align 4
  %91 = load i32, i32* %19, align 4
  call void @_Z19__device_stub__rr_1iPfPiii(i32 1, float* %88, i32* %89, i32 %90, i32 %91)
  br label %92

92:                                               ; preds = %87, %15
  %93 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %35, i32 %93, i32 1, i32 1)
  %94 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %36, i32 %94, i32 1, i32 1)
  %95 = bitcast { i64, i32 }* %37 to i8*
  %96 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 12, i1 false)
  %97 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %98 = load i64, i64* %97, align 4
  %99 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = bitcast { i64, i32 }* %38 to i8*
  %102 = bitcast %struct.dim3* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 12, i1 false)
  %103 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 0
  %104 = load i64, i64* %103, align 4
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = call i32 @__cudaPushCallConfiguration(i64 %98, i32 %100, i64 %104, i32 %106, i64 0, i8* null)
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %92
  %110 = load float*, float** %20, align 8
  %111 = load i32*, i32** %17, align 8
  %112 = load float*, float** %21, align 8
  %113 = load i32, i32* %18, align 4
  %114 = load i32, i32* %19, align 4
  %115 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__nb_1iPfPiS_iii(i32 1, float* %110, i32* %111, float* %112, i32 %113, i32 %114, i32 %115)
  br label %116

116:                                              ; preds = %109, %92
  %117 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %39, i32 %117, i32 1, i32 1)
  %118 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %40, i32 %118, i32 1, i32 1)
  %119 = bitcast { i64, i32 }* %41 to i8*
  %120 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 12, i1 false)
  %121 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %122 = load i64, i64* %121, align 4
  %123 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = bitcast { i64, i32 }* %42 to i8*
  %126 = bitcast %struct.dim3* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 12, i1 false)
  %127 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 0
  %128 = load i64, i64* %127, align 4
  %129 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %42, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = call i32 @__cudaPushCallConfiguration(i64 %122, i32 %124, i64 %128, i32 %130, i64 0, i8* null)
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %140, label %133

133:                                              ; preds = %116
  %134 = load float*, float** %23, align 8
  %135 = load float*, float** %16, align 8
  %136 = load float*, float** %24, align 8
  %137 = load i32, i32* %18, align 4
  %138 = load i32, i32* %19, align 4
  %139 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__rr_2iPfS_S_iii(i32 1, float* %134, float* %135, float* %136, i32 %137, i32 %138, i32 %139)
  br label %140

140:                                              ; preds = %133, %116
  %141 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %43, i32 %141, i32 1, i32 1)
  %142 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %44, i32 %142, i32 1, i32 1)
  %143 = bitcast { i64, i32 }* %45 to i8*
  %144 = bitcast %struct.dim3* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %144, i64 12, i1 false)
  %145 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 0
  %146 = load i64, i64* %145, align 4
  %147 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = bitcast { i64, i32 }* %46 to i8*
  %150 = bitcast %struct.dim3* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 12, i1 false)
  %151 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 0
  %152 = load i64, i64* %151, align 4
  %153 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = call i32 @__cudaPushCallConfiguration(i64 %146, i32 %148, i64 %152, i32 %154, i64 0, i8* null)
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %140
  %158 = load float*, float** %25, align 8
  %159 = load float*, float** %20, align 8
  %160 = load i32, i32* %18, align 4
  %161 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__nb_2iPfS_ii(i32 1, float* %158, float* %159, i32 %160, i32 %161)
  br label %162

162:                                              ; preds = %157, %140
  %163 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %47, i32 %163, i32 1, i32 1)
  %164 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %48, i32 %164, i32 1, i32 1)
  %165 = bitcast { i64, i32 }* %49 to i8*
  %166 = bitcast %struct.dim3* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 12, i1 false)
  %167 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %49, i32 0, i32 0
  %168 = load i64, i64* %167, align 4
  %169 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %49, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = bitcast { i64, i32 }* %50 to i8*
  %172 = bitcast %struct.dim3* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 12, i1 false)
  %173 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %50, i32 0, i32 0
  %174 = load i64, i64* %173, align 4
  %175 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %50, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = call i32 @__cudaPushCallConfiguration(i64 %168, i32 %170, i64 %174, i32 %176, i64 0, i8* null)
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %185, label %179

179:                                              ; preds = %162
  %180 = load float*, float** %26, align 8
  %181 = load float*, float** %20, align 8
  %182 = load float*, float** %25, align 8
  %183 = load i32, i32* %18, align 4
  %184 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__nb_3iPfS_S_ii(i32 1, float* %180, float* %181, float* %182, i32 %183, i32 %184)
  br label %185

185:                                              ; preds = %179, %162
  %186 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %51, i32 %186, i32 1, i32 1)
  %187 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %52, i32 %187, i32 1, i32 1)
  %188 = bitcast { i64, i32 }* %53 to i8*
  %189 = bitcast %struct.dim3* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 12, i1 false)
  %190 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 0
  %191 = load i64, i64* %190, align 4
  %192 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %53, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = bitcast { i64, i32 }* %54 to i8*
  %195 = bitcast %struct.dim3* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 12, i1 false)
  %196 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 0
  %197 = load i64, i64* %196, align 4
  %198 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %54, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = call i32 @__cudaPushCallConfiguration(i64 %191, i32 %193, i64 %197, i32 %199, i64 0, i8* null)
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %185
  %203 = load float*, float** %23, align 8
  %204 = load float*, float** %27, align 8
  %205 = load i32, i32* %18, align 4
  %206 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__rr_3iPfS_ii(i32 1, float* %203, float* %204, i32 %205, i32 %206)
  br label %207

207:                                              ; preds = %202, %185
  %208 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %55, i32 %208, i32 1, i32 1)
  %209 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %56, i32 %209, i32 1, i32 1)
  %210 = bitcast { i64, i32 }* %57 to i8*
  %211 = bitcast %struct.dim3* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 12, i1 false)
  %212 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %57, i32 0, i32 0
  %213 = load i64, i64* %212, align 4
  %214 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %57, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = bitcast { i64, i32 }* %58 to i8*
  %217 = bitcast %struct.dim3* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 12, i1 false)
  %218 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %58, i32 0, i32 0
  %219 = load i64, i64* %218, align 4
  %220 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %58, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = call i32 @__cudaPushCallConfiguration(i64 %213, i32 %215, i64 %219, i32 %221, i64 0, i8* null)
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %207
  %225 = load float*, float** %20, align 8
  %226 = load float*, float** %26, align 8
  %227 = load i32, i32* %18, align 4
  %228 = load i32, i32* %22, align 4
  call void @_Z19__device_stub__nb_4iPfS_ii(i32 1, float* %225, float* %226, i32 %227, i32 %228)
  br label %229

229:                                              ; preds = %224, %207
  %230 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %59, i32 %230, i32 1, i32 1)
  %231 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %60, i32 %231, i32 1, i32 1)
  %232 = bitcast { i64, i32 }* %61 to i8*
  %233 = bitcast %struct.dim3* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 12, i1 false)
  %234 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %61, i32 0, i32 0
  %235 = load i64, i64* %234, align 4
  %236 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %61, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = bitcast { i64, i32 }* %62 to i8*
  %239 = bitcast %struct.dim3* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* align 4 %239, i64 12, i1 false)
  %240 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 0
  %241 = load i64, i64* %240, align 4
  %242 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %62, i32 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = call i32 @__cudaPushCallConfiguration(i64 %235, i32 %237, i64 %241, i32 %243, i64 0, i8* null)
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %229
  %247 = load float*, float** %20, align 8
  %248 = load i32, i32* %18, align 4
  %249 = load i32, i32* %22, align 4
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %247, i32 %248, i32 %249)
  br label %250

250:                                              ; preds = %246, %229
  %251 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %63, i32 %251, i32 1, i32 1)
  %252 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %64, i32 %252, i32 1, i32 1)
  %253 = bitcast { i64, i32 }* %65 to i8*
  %254 = bitcast %struct.dim3* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %253, i8* align 4 %254, i64 12, i1 false)
  %255 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %65, i32 0, i32 0
  %256 = load i64, i64* %255, align 4
  %257 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %65, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = bitcast { i64, i32 }* %66 to i8*
  %260 = bitcast %struct.dim3* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %259, i8* align 4 %260, i64 12, i1 false)
  %261 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 0
  %262 = load i64, i64* %261, align 4
  %263 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %66, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = call i32 @__cudaPushCallConfiguration(i64 %256, i32 %258, i64 %262, i32 %264, i64 0, i8* null)
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %250
  %268 = load float*, float** %23, align 8
  %269 = load i32, i32* %18, align 4
  %270 = load i32, i32* %22, align 4
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %268, i32 %269, i32 %270)
  br label %271

271:                                              ; preds = %267, %250
  %272 = load i32, i32* %29, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %67, i32 %272, i32 1, i32 1)
  %273 = load i32, i32* %30, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %68, i32 %273, i32 1, i32 1)
  %274 = bitcast { i64, i32 }* %69 to i8*
  %275 = bitcast %struct.dim3* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %274, i8* align 4 %275, i64 12, i1 false)
  %276 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 0
  %277 = load i64, i64* %276, align 4
  %278 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %69, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = bitcast { i64, i32 }* %70 to i8*
  %281 = bitcast %struct.dim3* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %281, i64 12, i1 false)
  %282 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %70, i32 0, i32 0
  %283 = load i64, i64* %282, align 4
  %284 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %70, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = call i32 @__cudaPushCallConfiguration(i64 %277, i32 %279, i64 %283, i32 %285, i64 0, i8* null)
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %294, label %288

288:                                              ; preds = %271
  %289 = load i32*, i32** %28, align 8
  %290 = load float*, float** %20, align 8
  %291 = load float*, float** %23, align 8
  %292 = load i32, i32* %18, align 4
  %293 = load i32, i32* %22, align 4
  call void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 1, i32* %289, float* %290, float* %291, i32 %292, i32 %293)
  br label %294

294:                                              ; preds = %288, %271
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark616execute_AssOfKFCEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %6 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %7 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %6, i32 0, i32 8
  %8 = load i8, i8* %7, align 4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %12 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %11, i32 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %10, %2
  %16 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 4
  %17 = load float*, float** %16, align 8
  %18 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 3
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %21 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 11
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 5
  %28 = load float*, float** %27, align 8
  %29 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 12
  %32 = load float*, float** %31, align 8
  %33 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 7
  %34 = load float*, float** %33, align 8
  %35 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 9
  %36 = load float*, float** %35, align 8
  %37 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 10
  %38 = load float*, float** %37, align 8
  %39 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 8
  %40 = load float*, float** %39, align 8
  %41 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 13
  %42 = load i32*, i32** %41, align 8
  %43 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %44 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %43, i32 0, i32 6
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %47 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %46, i32 0, i32 4
  %48 = load i32, i32* %47, align 4
  call void @_Z6FUNCb6PfPiiiS_S_iS_S_S_S_S_S0_ii(float* %17, i32* %19, i32 %22, i32 %24, float* %26, float* %28, i32 %30, float* %32, float* %34, float* %36, float* %38, float* %40, i32* %42, i32 %45, i32 %48)
  br label %49

49:                                               ; preds = %15, %10
  %50 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %51 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %50, i32 0, i32 8
  %52 = load i8, i8* %51, align 4
  %53 = trunc i8 %52 to i1
  br i1 %53, label %54, label %63

54:                                               ; preds = %49
  %55 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 11
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = call i32 @cudaGetLastError()
  %61 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %62 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %61, i32 0, i32 14
  store i32 %60, i32* %62, align 4
  br label %63

63:                                               ; preds = %59, %54, %49
  %64 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %65 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %79

68:                                               ; preds = %63
  %69 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %70 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %69, i32 0, i32 14
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  %75 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %74, i32 0, i32 14
  %76 = load i32, i32* %75, align 4
  %77 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %76)
  %78 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %77, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %79

79:                                               ; preds = %73, %68, %63
  ret void
}

declare dso_local i32 @cudaGetLastError() #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i32) #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8)) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark613execute_asyncEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.dim3, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca { i64, i32 }, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca { i64, i32 }, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca { i64, i32 }, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca %struct.dim3, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca { i64, i32 }, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca %struct.dim3, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca { i64, i32 }, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca %struct.dim3, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca { i64, i32 }, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca %struct.dim3, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca { i64, i32 }, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca %struct.CUevent_st*, align 8
  %42 = alloca %struct.dim3, align 4
  %43 = alloca %struct.dim3, align 4
  %44 = alloca { i64, i32 }, align 4
  %45 = alloca { i64, i32 }, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %46 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %47 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %48 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %47, i32 0, i32 11
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %2
  %52 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %53 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %52, i32 0, i32 9
  %54 = load i8, i8* %53, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %56, label %97

56:                                               ; preds = %51, %2
  %57 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %58 = load %struct.CUstream_st*, %struct.CUstream_st** %57, align 8
  %59 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 4
  %60 = load float*, float** %59, align 8
  %61 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %58, float* %60, i64 0, i32 4)
  %62 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %63 = load %struct.CUstream_st*, %struct.CUstream_st** %62, align 8
  %64 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 5
  %65 = load float*, float** %64, align 8
  %66 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %63, float* %65, i64 0, i32 4)
  %67 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %68 = load %struct.CUstream_st*, %struct.CUstream_st** %67, align 8
  %69 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %70 = load float*, float** %69, align 8
  %71 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %68, float* %70, i64 0, i32 4)
  %72 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %73 = load %struct.CUstream_st*, %struct.CUstream_st** %72, align 8
  %74 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 7
  %75 = load float*, float** %74, align 8
  %76 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %73, float* %75, i64 0, i32 4)
  %77 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %78 = load %struct.CUstream_st*, %struct.CUstream_st** %77, align 8
  %79 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %80 = load float*, float** %79, align 8
  %81 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %78, float* %80, i64 0, i32 4)
  %82 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %83 = load %struct.CUstream_st*, %struct.CUstream_st** %82, align 8
  %84 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 9
  %85 = load float*, float** %84, align 8
  %86 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %83, float* %85, i64 0, i32 4)
  %87 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %88 = load %struct.CUstream_st*, %struct.CUstream_st** %87, align 8
  %89 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 10
  %90 = load float*, float** %89, align 8
  %91 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %88, float* %90, i64 0, i32 4)
  %92 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %93 = load %struct.CUstream_st*, %struct.CUstream_st** %92, align 8
  %94 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 8
  %95 = load float*, float** %94, align 8
  %96 = call i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %93, float* %95, i64 0, i32 4)
  br label %97

97:                                               ; preds = %56, %51
  %98 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %99 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %98, i32 0, i32 8
  %100 = load i8, i8* %99, align 4
  %101 = trunc i8 %100 to i1
  br i1 %101, label %102, label %249

102:                                              ; preds = %97
  %103 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %104 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %103, i32 0, i32 11
  %105 = load i32, i32* %104, align 8
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %249

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 3
  %109 = load i32*, i32** %108, align 8
  %110 = bitcast i32* %109 to i8*
  %111 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %112 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = mul i64 4, %114
  %116 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %117 to i64
  %119 = mul i64 %115, %118
  %120 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %121 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %120, i32 0, i32 15
  %122 = load i32, i32* %121, align 8
  %123 = call i32 @cudaMemPrefetchAsync(i8* %110, i64 %119, i32 %122, %struct.CUstream_st* null)
  %124 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 4
  %125 = load float*, float** %124, align 8
  %126 = bitcast float* %125 to i8*
  %127 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %128 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %127, i32 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  %131 = mul i64 4, %130
  %132 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = mul i64 %131, %134
  %136 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %137 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %136, i32 0, i32 15
  %138 = load i32, i32* %137, align 8
  %139 = call i32 @cudaMemPrefetchAsync(i8* %126, i64 %135, i32 %138, %struct.CUstream_st* null)
  %140 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %141 = load float*, float** %140, align 8
  %142 = bitcast float* %141 to i8*
  %143 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %144 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %143, i32 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = sext i32 %145 to i64
  %147 = mul i64 4, %146
  %148 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = sext i32 %149 to i64
  %151 = mul i64 %147, %150
  %152 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %153 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %152, i32 0, i32 15
  %154 = load i32, i32* %153, align 8
  %155 = call i32 @cudaMemPrefetchAsync(i8* %142, i64 %151, i32 %154, %struct.CUstream_st* null)
  %156 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %157 = load float*, float** %156, align 8
  %158 = bitcast float* %157 to i8*
  %159 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %160 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %159, i32 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = sext i32 %161 to i64
  %163 = mul i64 4, %162
  %164 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %165 = load i32, i32* %164, align 8
  %166 = sext i32 %165 to i64
  %167 = mul i64 %163, %166
  %168 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %169 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %168, i32 0, i32 15
  %170 = load i32, i32* %169, align 8
  %171 = call i32 @cudaMemPrefetchAsync(i8* %158, i64 %167, i32 %170, %struct.CUstream_st* null)
  %172 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 13
  %173 = load i32*, i32** %172, align 8
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %176 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %175, i32 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = sext i32 %177 to i64
  %179 = mul i64 4, %178
  %180 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %181 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %180, i32 0, i32 15
  %182 = load i32, i32* %181, align 8
  %183 = call i32 @cudaMemPrefetchAsync(i8* %174, i64 %179, i32 %182, %struct.CUstream_st* null)
  %184 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 5
  %185 = load float*, float** %184, align 8
  %186 = bitcast float* %185 to i8*
  %187 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %188 = load i32, i32* %187, align 8
  %189 = sext i32 %188 to i64
  %190 = mul i64 4, %189
  %191 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = sext i32 %192 to i64
  %194 = mul i64 %190, %193
  %195 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %196 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %195, i32 0, i32 15
  %197 = load i32, i32* %196, align 8
  %198 = call i32 @cudaMemPrefetchAsync(i8* %186, i64 %194, i32 %197, %struct.CUstream_st* null)
  %199 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 7
  %200 = load float*, float** %199, align 8
  %201 = bitcast float* %200 to i8*
  %202 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = sext i32 %203 to i64
  %205 = mul i64 4, %204
  %206 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = mul i64 %205, %208
  %210 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %211 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %210, i32 0, i32 15
  %212 = load i32, i32* %211, align 8
  %213 = call i32 @cudaMemPrefetchAsync(i8* %201, i64 %209, i32 %212, %struct.CUstream_st* null)
  %214 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 9
  %215 = load float*, float** %214, align 8
  %216 = bitcast float* %215 to i8*
  %217 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %218 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %217, i32 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = sext i32 %219 to i64
  %221 = mul i64 4, %220
  %222 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %223 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %222, i32 0, i32 15
  %224 = load i32, i32* %223, align 8
  %225 = call i32 @cudaMemPrefetchAsync(i8* %216, i64 %221, i32 %224, %struct.CUstream_st* null)
  %226 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 10
  %227 = load float*, float** %226, align 8
  %228 = bitcast float* %227 to i8*
  %229 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %230 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %229, i32 0, i32 3
  %231 = load i32, i32* %230, align 8
  %232 = sext i32 %231 to i64
  %233 = mul i64 4, %232
  %234 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %235 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %234, i32 0, i32 15
  %236 = load i32, i32* %235, align 8
  %237 = call i32 @cudaMemPrefetchAsync(i8* %228, i64 %233, i32 %236, %struct.CUstream_st* null)
  %238 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 8
  %239 = load float*, float** %238, align 8
  %240 = bitcast float* %239 to i8*
  %241 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = sext i32 %242 to i64
  %244 = mul i64 4, %243
  %245 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %246 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %245, i32 0, i32 15
  %247 = load i32, i32* %246, align 8
  %248 = call i32 @cudaMemPrefetchAsync(i8* %240, i64 %244, i32 %247, %struct.CUstream_st* null)
  br label %249

249:                                              ; preds = %107, %102, %97
  %250 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %251 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %250, i32 0, i32 6
  %252 = load i32, i32* %251, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %252, i32 1, i32 1)
  %253 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %254 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %253, i32 0, i32 4
  %255 = load i32, i32* %254, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %255, i32 1, i32 1)
  %256 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %257 = load %struct.CUstream_st*, %struct.CUstream_st** %256, align 8
  %258 = bitcast %struct.CUstream_st* %257 to i8*
  %259 = bitcast { i64, i32 }* %7 to i8*
  %260 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %259, i8* align 4 %260, i64 12, i1 false)
  %261 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %262 = load i64, i64* %261, align 4
  %263 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = bitcast { i64, i32 }* %8 to i8*
  %266 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %266, i64 12, i1 false)
  %267 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %268 = load i64, i64* %267, align 4
  %269 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = call i32 @__cudaPushCallConfiguration(i64 %262, i32 %264, i64 %268, i32 %270, i64 0, i8* %258)
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %283, label %273

273:                                              ; preds = %249
  %274 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 4
  %275 = load float*, float** %274, align 8
  %276 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 3
  %277 = load i32*, i32** %276, align 8
  %278 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %279 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %278, i32 0, i32 3
  %280 = load i32, i32* %279, align 8
  %281 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  call void @_Z19__device_stub__rr_1iPfPiii(i32 1, float* %275, i32* %277, i32 %280, i32 %282)
  br label %283

283:                                              ; preds = %273, %249
  %284 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %285 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %284, i32 0, i32 6
  %286 = load i32, i32* %285, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %286, i32 1, i32 1)
  %287 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %288 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %287, i32 0, i32 4
  %289 = load i32, i32* %288, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %289, i32 1, i32 1)
  %290 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %291 = load %struct.CUstream_st*, %struct.CUstream_st** %290, align 8
  %292 = bitcast %struct.CUstream_st* %291 to i8*
  %293 = bitcast { i64, i32 }* %11 to i8*
  %294 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* align 4 %294, i64 12, i1 false)
  %295 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %296 = load i64, i64* %295, align 4
  %297 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = bitcast { i64, i32 }* %12 to i8*
  %300 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 12, i1 false)
  %301 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %302 = load i64, i64* %301, align 4
  %303 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = call i32 @__cudaPushCallConfiguration(i64 %296, i32 %298, i64 %302, i32 %304, i64 0, i8* %292)
  %306 = icmp ne i32 %305, 0
  br i1 %306, label %321, label %307

307:                                              ; preds = %283
  %308 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %309 = load float*, float** %308, align 8
  %310 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 3
  %311 = load i32*, i32** %310, align 8
  %312 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 5
  %313 = load float*, float** %312, align 8
  %314 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %315 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %314, i32 0, i32 3
  %316 = load i32, i32* %315, align 8
  %317 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %320 = load i32, i32* %319, align 8
  call void @_Z19__device_stub__nb_1iPfPiS_iii(i32 1, float* %309, i32* %311, float* %313, i32 %316, i32 %318, i32 %320)
  br label %321

321:                                              ; preds = %307, %283
  %322 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %323 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %322, i32 0, i32 6
  %324 = load i32, i32* %323, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %13, i32 %324, i32 1, i32 1)
  %325 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %326 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %325, i32 0, i32 4
  %327 = load i32, i32* %326, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %327, i32 1, i32 1)
  %328 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %329 = load %struct.CUstream_st*, %struct.CUstream_st** %328, align 8
  %330 = bitcast %struct.CUstream_st* %329 to i8*
  %331 = bitcast { i64, i32 }* %15 to i8*
  %332 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %331, i8* align 4 %332, i64 12, i1 false)
  %333 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %334 = load i64, i64* %333, align 4
  %335 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = bitcast { i64, i32 }* %16 to i8*
  %338 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %337, i8* align 4 %338, i64 12, i1 false)
  %339 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %340 = load i64, i64* %339, align 4
  %341 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = call i32 @__cudaPushCallConfiguration(i64 %334, i32 %336, i64 %340, i32 %342, i64 0, i8* %330)
  %344 = icmp ne i32 %343, 0
  br i1 %344, label %359, label %345

345:                                              ; preds = %321
  %346 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %347 = load float*, float** %346, align 8
  %348 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 4
  %349 = load float*, float** %348, align 8
  %350 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 7
  %351 = load float*, float** %350, align 8
  %352 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %353 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %352, i32 0, i32 3
  %354 = load i32, i32* %353, align 8
  %355 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %358 = load i32, i32* %357, align 8
  call void @_Z19__device_stub__rr_2iPfS_S_iii(i32 1, float* %347, float* %349, float* %351, i32 %354, i32 %356, i32 %358)
  br label %359

359:                                              ; preds = %345, %321
  %360 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %361 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %360, i32 0, i32 6
  %362 = load i32, i32* %361, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %362, i32 1, i32 1)
  %363 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %364 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %363, i32 0, i32 4
  %365 = load i32, i32* %364, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %365, i32 1, i32 1)
  %366 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %367 = load %struct.CUstream_st*, %struct.CUstream_st** %366, align 8
  %368 = bitcast %struct.CUstream_st* %367 to i8*
  %369 = bitcast { i64, i32 }* %19 to i8*
  %370 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %369, i8* align 4 %370, i64 12, i1 false)
  %371 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %372 = load i64, i64* %371, align 4
  %373 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = bitcast { i64, i32 }* %20 to i8*
  %376 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %375, i8* align 4 %376, i64 12, i1 false)
  %377 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %378 = load i64, i64* %377, align 4
  %379 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = call i32 @__cudaPushCallConfiguration(i64 %372, i32 %374, i64 %378, i32 %380, i64 0, i8* %368)
  %382 = icmp ne i32 %381, 0
  br i1 %382, label %393, label %383

383:                                              ; preds = %359
  %384 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 9
  %385 = load float*, float** %384, align 8
  %386 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %387 = load float*, float** %386, align 8
  %388 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %389 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %388, i32 0, i32 3
  %390 = load i32, i32* %389, align 8
  %391 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %392 = load i32, i32* %391, align 8
  call void @_Z19__device_stub__nb_2iPfS_ii(i32 1, float* %385, float* %387, i32 %390, i32 %392)
  br label %393

393:                                              ; preds = %383, %359
  %394 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %395 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %394, i32 0, i32 6
  %396 = load i32, i32* %395, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %21, i32 %396, i32 1, i32 1)
  %397 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %398 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %397, i32 0, i32 4
  %399 = load i32, i32* %398, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %399, i32 1, i32 1)
  %400 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %401 = load %struct.CUstream_st*, %struct.CUstream_st** %400, align 8
  %402 = bitcast %struct.CUstream_st* %401 to i8*
  %403 = bitcast { i64, i32 }* %23 to i8*
  %404 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 12, i1 false)
  %405 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0
  %406 = load i64, i64* %405, align 4
  %407 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1
  %408 = load i32, i32* %407, align 4
  %409 = bitcast { i64, i32 }* %24 to i8*
  %410 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 %410, i64 12, i1 false)
  %411 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %412 = load i64, i64* %411, align 4
  %413 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = call i32 @__cudaPushCallConfiguration(i64 %406, i32 %408, i64 %412, i32 %414, i64 0, i8* %402)
  %416 = icmp ne i32 %415, 0
  br i1 %416, label %429, label %417

417:                                              ; preds = %393
  %418 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 10
  %419 = load float*, float** %418, align 8
  %420 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %421 = load float*, float** %420, align 8
  %422 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 9
  %423 = load float*, float** %422, align 8
  %424 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %425 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %424, i32 0, i32 3
  %426 = load i32, i32* %425, align 8
  %427 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %428 = load i32, i32* %427, align 8
  call void @_Z19__device_stub__nb_3iPfS_S_ii(i32 1, float* %419, float* %421, float* %423, i32 %426, i32 %428)
  br label %429

429:                                              ; preds = %417, %393
  %430 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %431 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %430, i32 0, i32 6
  %432 = load i32, i32* %431, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %25, i32 %432, i32 1, i32 1)
  %433 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %434 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %433, i32 0, i32 4
  %435 = load i32, i32* %434, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %26, i32 %435, i32 1, i32 1)
  %436 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %437 = load %struct.CUstream_st*, %struct.CUstream_st** %436, align 8
  %438 = bitcast %struct.CUstream_st* %437 to i8*
  %439 = bitcast { i64, i32 }* %27 to i8*
  %440 = bitcast %struct.dim3* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %439, i8* align 4 %440, i64 12, i1 false)
  %441 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  %442 = load i64, i64* %441, align 4
  %443 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = bitcast { i64, i32 }* %28 to i8*
  %446 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %445, i8* align 4 %446, i64 12, i1 false)
  %447 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %448 = load i64, i64* %447, align 4
  %449 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %450 = load i32, i32* %449, align 4
  %451 = call i32 @__cudaPushCallConfiguration(i64 %442, i32 %444, i64 %448, i32 %450, i64 0, i8* %438)
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %463, label %453

453:                                              ; preds = %429
  %454 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %455 = load float*, float** %454, align 8
  %456 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 8
  %457 = load float*, float** %456, align 8
  %458 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %459 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %458, i32 0, i32 3
  %460 = load i32, i32* %459, align 8
  %461 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %462 = load i32, i32* %461, align 8
  call void @_Z19__device_stub__rr_3iPfS_ii(i32 1, float* %455, float* %457, i32 %460, i32 %462)
  br label %463

463:                                              ; preds = %453, %429
  %464 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %465 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %464, i32 0, i32 6
  %466 = load i32, i32* %465, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %29, i32 %466, i32 1, i32 1)
  %467 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %468 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %467, i32 0, i32 4
  %469 = load i32, i32* %468, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %30, i32 %469, i32 1, i32 1)
  %470 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %471 = load %struct.CUstream_st*, %struct.CUstream_st** %470, align 8
  %472 = bitcast %struct.CUstream_st* %471 to i8*
  %473 = bitcast { i64, i32 }* %31 to i8*
  %474 = bitcast %struct.dim3* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %473, i8* align 4 %474, i64 12, i1 false)
  %475 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 0
  %476 = load i64, i64* %475, align 4
  %477 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = bitcast { i64, i32 }* %32 to i8*
  %480 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %479, i8* align 4 %480, i64 12, i1 false)
  %481 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %482 = load i64, i64* %481, align 4
  %483 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = call i32 @__cudaPushCallConfiguration(i64 %476, i32 %478, i64 %482, i32 %484, i64 0, i8* %472)
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %497, label %487

487:                                              ; preds = %463
  %488 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %489 = load float*, float** %488, align 8
  %490 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 10
  %491 = load float*, float** %490, align 8
  %492 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %493 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %492, i32 0, i32 3
  %494 = load i32, i32* %493, align 8
  %495 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %496 = load i32, i32* %495, align 8
  call void @_Z19__device_stub__nb_4iPfS_ii(i32 1, float* %489, float* %491, i32 %494, i32 %496)
  br label %497

497:                                              ; preds = %487, %463
  %498 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %499 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %498, i32 0, i32 6
  %500 = load i32, i32* %499, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %33, i32 %500, i32 1, i32 1)
  %501 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %502 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %501, i32 0, i32 4
  %503 = load i32, i32* %502, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %503, i32 1, i32 1)
  %504 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %505 = load %struct.CUstream_st*, %struct.CUstream_st** %504, align 8
  %506 = bitcast %struct.CUstream_st* %505 to i8*
  %507 = bitcast { i64, i32 }* %35 to i8*
  %508 = bitcast %struct.dim3* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %507, i8* align 4 %508, i64 12, i1 false)
  %509 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 0
  %510 = load i64, i64* %509, align 4
  %511 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = bitcast { i64, i32 }* %36 to i8*
  %514 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %513, i8* align 4 %514, i64 12, i1 false)
  %515 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %516 = load i64, i64* %515, align 4
  %517 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %518 = load i32, i32* %517, align 4
  %519 = call i32 @__cudaPushCallConfiguration(i64 %510, i32 %512, i64 %516, i32 %518, i64 0, i8* %506)
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %529, label %521

521:                                              ; preds = %497
  %522 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %523 = load float*, float** %522, align 8
  %524 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %525 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %524, i32 0, i32 3
  %526 = load i32, i32* %525, align 8
  %527 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %528 = load i32, i32* %527, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %523, i32 %526, i32 %528)
  br label %529

529:                                              ; preds = %521, %497
  %530 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %531 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %530, i32 0, i32 6
  %532 = load i32, i32* %531, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %37, i32 %532, i32 1, i32 1)
  %533 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %534 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %533, i32 0, i32 4
  %535 = load i32, i32* %534, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %535, i32 1, i32 1)
  %536 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %537 = load %struct.CUstream_st*, %struct.CUstream_st** %536, align 8
  %538 = bitcast %struct.CUstream_st* %537 to i8*
  %539 = bitcast { i64, i32 }* %39 to i8*
  %540 = bitcast %struct.dim3* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 12, i1 false)
  %541 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 0
  %542 = load i64, i64* %541, align 4
  %543 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = bitcast { i64, i32 }* %40 to i8*
  %546 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %545, i8* align 4 %546, i64 12, i1 false)
  %547 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %548 = load i64, i64* %547, align 4
  %549 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = call i32 @__cudaPushCallConfiguration(i64 %542, i32 %544, i64 %548, i32 %550, i64 0, i8* %538)
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %561, label %553

553:                                              ; preds = %529
  %554 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %555 = load float*, float** %554, align 8
  %556 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %557 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %556, i32 0, i32 3
  %558 = load i32, i32* %557, align 8
  %559 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %560 = load i32, i32* %559, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %555, i32 %558, i32 %560)
  br label %561

561:                                              ; preds = %553, %529
  %562 = call i32 @cudaEventCreate(%struct.CUevent_st** %41)
  %563 = load %struct.CUevent_st*, %struct.CUevent_st** %41, align 8
  %564 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 15
  %565 = load %struct.CUstream_st*, %struct.CUstream_st** %564, align 8
  %566 = call i32 @cudaEventRecord(%struct.CUevent_st* %563, %struct.CUstream_st* %565)
  %567 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %568 = load %struct.CUstream_st*, %struct.CUstream_st** %567, align 8
  %569 = load %struct.CUevent_st*, %struct.CUevent_st** %41, align 8
  %570 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %568, %struct.CUevent_st* %569, i32 0)
  %571 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %572 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %571, i32 0, i32 6
  %573 = load i32, i32* %572, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %42, i32 %573, i32 1, i32 1)
  %574 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %575 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %574, i32 0, i32 4
  %576 = load i32, i32* %575, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %43, i32 %576, i32 1, i32 1)
  %577 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 14
  %578 = load %struct.CUstream_st*, %struct.CUstream_st** %577, align 8
  %579 = bitcast %struct.CUstream_st* %578 to i8*
  %580 = bitcast { i64, i32 }* %44 to i8*
  %581 = bitcast %struct.dim3* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %580, i8* align 4 %581, i64 12, i1 false)
  %582 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 0
  %583 = load i64, i64* %582, align 4
  %584 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = bitcast { i64, i32 }* %45 to i8*
  %587 = bitcast %struct.dim3* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %586, i8* align 4 %587, i64 12, i1 false)
  %588 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 0
  %589 = load i64, i64* %588, align 4
  %590 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 1
  %591 = load i32, i32* %590, align 4
  %592 = call i32 @__cudaPushCallConfiguration(i64 %583, i32 %585, i64 %589, i32 %591, i64 0, i8* %579)
  %593 = icmp ne i32 %592, 0
  br i1 %593, label %606, label %594

594:                                              ; preds = %561
  %595 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 13
  %596 = load i32*, i32** %595, align 8
  %597 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 11
  %598 = load float*, float** %597, align 8
  %599 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 12
  %600 = load float*, float** %599, align 8
  %601 = bitcast %class.Benchmark6* %46 to %struct.Benchmark*
  %602 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %601, i32 0, i32 3
  %603 = load i32, i32* %602, align 8
  %604 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %46, i32 0, i32 2
  %605 = load i32, i32* %604, align 8
  call void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 1, i32* %596, float* %598, float* %600, i32 %603, i32 %605)
  br label %606

606:                                              ; preds = %594, %561
  %607 = call i32 @cudaDeviceSynchronize()
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal i32 @_ZL24cudaStreamAttachMemAsyncIfE9cudaErrorP11CUstream_stPT_mj(%struct.CUstream_st* %0, float* %1, i64 %2, i32 %3) #6 {
  %5 = alloca %struct.CUstream_st*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.CUstream_st* %0, %struct.CUstream_st** %5, align 8
  store float* %1, float** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.CUstream_st*, %struct.CUstream_st** %5, align 8
  %10 = load float*, float** %6, align 8
  %11 = bitcast float* %10 to i8*
  %12 = load i64, i64* %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = call i32 @cudaStreamAttachMemAsync(%struct.CUstream_st* %9, i8* %11, i64 %12, i32 %13)
  ret i32 %14
}

declare dso_local i32 @cudaEventCreate(%struct.CUevent_st**) #1

declare dso_local i32 @cudaEventRecord(%struct.CUevent_st*, %struct.CUstream_st*) #1

declare dso_local i32 @cudaStreamWaitEvent(%struct.CUstream_st*, %struct.CUevent_st*, i32) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark617execute_cudagraphEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.CUevent_st*, align 8
  %6 = alloca %struct.dim3, align 4
  %7 = alloca %struct.dim3, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca { i64, i32 }, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca %struct.dim3, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca { i64, i32 }, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca %struct.dim3, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca { i64, i32 }, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca { i64, i32 }, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca %struct.dim3, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca { i64, i32 }, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca %struct.dim3, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca { i64, i32 }, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca %struct.dim3, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca { i64, i32 }, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca { i64, i32 }, align 4
  %42 = alloca %struct.CUevent_st*, align 8
  %43 = alloca %struct.dim3, align 4
  %44 = alloca %struct.dim3, align 4
  %45 = alloca { i64, i32 }, align 4
  %46 = alloca { i64, i32 }, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %47 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %48 = load i32, i32* %4, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %428

50:                                               ; preds = %2
  %51 = call i32 @cudaEventCreate(%struct.CUevent_st** %5)
  %52 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %53 = load %struct.CUstream_st*, %struct.CUstream_st** %52, align 8
  %54 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %53, i32 0)
  %55 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %56 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %57 = load %struct.CUstream_st*, %struct.CUstream_st** %56, align 8
  %58 = call i32 @cudaEventRecord(%struct.CUevent_st* %55, %struct.CUstream_st* %57)
  %59 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %60 = load %struct.CUstream_st*, %struct.CUstream_st** %59, align 8
  %61 = load %struct.CUevent_st*, %struct.CUevent_st** %5, align 8
  %62 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %60, %struct.CUevent_st* %61, i32 0)
  %63 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 6
  %65 = load i32, i32* %64, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %65, i32 1, i32 1)
  %66 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %67 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %7, i32 %68, i32 1, i32 1)
  %69 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %70 = load %struct.CUstream_st*, %struct.CUstream_st** %69, align 8
  %71 = bitcast %struct.CUstream_st* %70 to i8*
  %72 = bitcast { i64, i32 }* %8 to i8*
  %73 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 12, i1 false)
  %74 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %75 = load i64, i64* %74, align 4
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = bitcast { i64, i32 }* %9 to i8*
  %79 = bitcast %struct.dim3* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 12, i1 false)
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %9, i32 0, i32 0
  %81 = load i64, i64* %80, align 4
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %9, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = call i32 @__cudaPushCallConfiguration(i64 %75, i32 %77, i64 %81, i32 %83, i64 0, i8* %71)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %50
  %87 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 4
  %88 = load float*, float** %87, align 8
  %89 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 3
  %90 = load i32*, i32** %89, align 8
  %91 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %92 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  call void @_Z19__device_stub__rr_1iPfPiii(i32 1, float* %88, i32* %90, i32 %93, i32 %95)
  br label %96

96:                                               ; preds = %86, %50
  %97 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %98 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %97, i32 0, i32 6
  %99 = load i32, i32* %98, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %99, i32 1, i32 1)
  %100 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %101 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %100, i32 0, i32 4
  %102 = load i32, i32* %101, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %11, i32 %102, i32 1, i32 1)
  %103 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %104 = load %struct.CUstream_st*, %struct.CUstream_st** %103, align 8
  %105 = bitcast %struct.CUstream_st* %104 to i8*
  %106 = bitcast { i64, i32 }* %12 to i8*
  %107 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %107, i64 12, i1 false)
  %108 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %109 = load i64, i64* %108, align 4
  %110 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = bitcast { i64, i32 }* %13 to i8*
  %113 = bitcast %struct.dim3* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 12, i1 false)
  %114 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 0
  %115 = load i64, i64* %114, align 4
  %116 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %13, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = call i32 @__cudaPushCallConfiguration(i64 %109, i32 %111, i64 %115, i32 %117, i64 0, i8* %105)
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %96
  %121 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %122 = load float*, float** %121, align 8
  %123 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 3
  %124 = load i32*, i32** %123, align 8
  %125 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 5
  %126 = load float*, float** %125, align 8
  %127 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %128 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %127, i32 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %133 = load i32, i32* %132, align 8
  call void @_Z19__device_stub__nb_1iPfPiS_iii(i32 1, float* %122, i32* %124, float* %126, i32 %129, i32 %131, i32 %133)
  br label %134

134:                                              ; preds = %120, %96
  %135 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %136 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %135, i32 0, i32 6
  %137 = load i32, i32* %136, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %137, i32 1, i32 1)
  %138 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %139 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %138, i32 0, i32 4
  %140 = load i32, i32* %139, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %15, i32 %140, i32 1, i32 1)
  %141 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %142 = load %struct.CUstream_st*, %struct.CUstream_st** %141, align 8
  %143 = bitcast %struct.CUstream_st* %142 to i8*
  %144 = bitcast { i64, i32 }* %16 to i8*
  %145 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %145, i64 12, i1 false)
  %146 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %147 = load i64, i64* %146, align 4
  %148 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = bitcast { i64, i32 }* %17 to i8*
  %151 = bitcast %struct.dim3* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 12, i1 false)
  %152 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 0
  %153 = load i64, i64* %152, align 4
  %154 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %17, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = call i32 @__cudaPushCallConfiguration(i64 %147, i32 %149, i64 %153, i32 %155, i64 0, i8* %143)
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %134
  %159 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 12
  %160 = load float*, float** %159, align 8
  %161 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 4
  %162 = load float*, float** %161, align 8
  %163 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 7
  %164 = load float*, float** %163, align 8
  %165 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %166 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %165, i32 0, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %171 = load i32, i32* %170, align 8
  call void @_Z19__device_stub__rr_2iPfS_S_iii(i32 1, float* %160, float* %162, float* %164, i32 %167, i32 %169, i32 %171)
  br label %172

172:                                              ; preds = %158, %134
  %173 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %174 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %173, i32 0, i32 6
  %175 = load i32, i32* %174, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %175, i32 1, i32 1)
  %176 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %177 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %176, i32 0, i32 4
  %178 = load i32, i32* %177, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %19, i32 %178, i32 1, i32 1)
  %179 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %180 = load %struct.CUstream_st*, %struct.CUstream_st** %179, align 8
  %181 = bitcast %struct.CUstream_st* %180 to i8*
  %182 = bitcast { i64, i32 }* %20 to i8*
  %183 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %183, i64 12, i1 false)
  %184 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %185 = load i64, i64* %184, align 4
  %186 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = bitcast { i64, i32 }* %21 to i8*
  %189 = bitcast %struct.dim3* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 12, i1 false)
  %190 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 0
  %191 = load i64, i64* %190, align 4
  %192 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %21, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = call i32 @__cudaPushCallConfiguration(i64 %185, i32 %187, i64 %191, i32 %193, i64 0, i8* %181)
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %206, label %196

196:                                              ; preds = %172
  %197 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 9
  %198 = load float*, float** %197, align 8
  %199 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %200 = load float*, float** %199, align 8
  %201 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %202 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %201, i32 0, i32 3
  %203 = load i32, i32* %202, align 8
  %204 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %205 = load i32, i32* %204, align 8
  call void @_Z19__device_stub__nb_2iPfS_ii(i32 1, float* %198, float* %200, i32 %203, i32 %205)
  br label %206

206:                                              ; preds = %196, %172
  %207 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %208 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %207, i32 0, i32 6
  %209 = load i32, i32* %208, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %209, i32 1, i32 1)
  %210 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %211 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %210, i32 0, i32 4
  %212 = load i32, i32* %211, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %23, i32 %212, i32 1, i32 1)
  %213 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %214 = load %struct.CUstream_st*, %struct.CUstream_st** %213, align 8
  %215 = bitcast %struct.CUstream_st* %214 to i8*
  %216 = bitcast { i64, i32 }* %24 to i8*
  %217 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %216, i8* align 4 %217, i64 12, i1 false)
  %218 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %219 = load i64, i64* %218, align 4
  %220 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = bitcast { i64, i32 }* %25 to i8*
  %223 = bitcast %struct.dim3* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %223, i64 12, i1 false)
  %224 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 0
  %225 = load i64, i64* %224, align 4
  %226 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %25, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = call i32 @__cudaPushCallConfiguration(i64 %219, i32 %221, i64 %225, i32 %227, i64 0, i8* %215)
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %242, label %230

230:                                              ; preds = %206
  %231 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 10
  %232 = load float*, float** %231, align 8
  %233 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %234 = load float*, float** %233, align 8
  %235 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 9
  %236 = load float*, float** %235, align 8
  %237 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %238 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %237, i32 0, i32 3
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %241 = load i32, i32* %240, align 8
  call void @_Z19__device_stub__nb_3iPfS_S_ii(i32 1, float* %232, float* %234, float* %236, i32 %239, i32 %241)
  br label %242

242:                                              ; preds = %230, %206
  %243 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %244 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %243, i32 0, i32 6
  %245 = load i32, i32* %244, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %26, i32 %245, i32 1, i32 1)
  %246 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %247 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %246, i32 0, i32 4
  %248 = load i32, i32* %247, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %27, i32 %248, i32 1, i32 1)
  %249 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %250 = load %struct.CUstream_st*, %struct.CUstream_st** %249, align 8
  %251 = bitcast %struct.CUstream_st* %250 to i8*
  %252 = bitcast { i64, i32 }* %28 to i8*
  %253 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* align 4 %253, i64 12, i1 false)
  %254 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %255 = load i64, i64* %254, align 4
  %256 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = bitcast { i64, i32 }* %29 to i8*
  %259 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 12, i1 false)
  %260 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %261 = load i64, i64* %260, align 4
  %262 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = call i32 @__cudaPushCallConfiguration(i64 %255, i32 %257, i64 %261, i32 %263, i64 0, i8* %251)
  %265 = icmp ne i32 %264, 0
  br i1 %265, label %276, label %266

266:                                              ; preds = %242
  %267 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 12
  %268 = load float*, float** %267, align 8
  %269 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 8
  %270 = load float*, float** %269, align 8
  %271 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %272 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %271, i32 0, i32 3
  %273 = load i32, i32* %272, align 8
  %274 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %275 = load i32, i32* %274, align 8
  call void @_Z19__device_stub__rr_3iPfS_ii(i32 1, float* %268, float* %270, i32 %273, i32 %275)
  br label %276

276:                                              ; preds = %266, %242
  %277 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %278 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %277, i32 0, i32 6
  %279 = load i32, i32* %278, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %30, i32 %279, i32 1, i32 1)
  %280 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %281 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %280, i32 0, i32 4
  %282 = load i32, i32* %281, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %31, i32 %282, i32 1, i32 1)
  %283 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %284 = load %struct.CUstream_st*, %struct.CUstream_st** %283, align 8
  %285 = bitcast %struct.CUstream_st* %284 to i8*
  %286 = bitcast { i64, i32 }* %32 to i8*
  %287 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* align 4 %287, i64 12, i1 false)
  %288 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %289 = load i64, i64* %288, align 4
  %290 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = bitcast { i64, i32 }* %33 to i8*
  %293 = bitcast %struct.dim3* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %292, i8* align 4 %293, i64 12, i1 false)
  %294 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 0
  %295 = load i64, i64* %294, align 4
  %296 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %33, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = call i32 @__cudaPushCallConfiguration(i64 %289, i32 %291, i64 %295, i32 %297, i64 0, i8* %285)
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %276
  %301 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %302 = load float*, float** %301, align 8
  %303 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 10
  %304 = load float*, float** %303, align 8
  %305 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %306 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %305, i32 0, i32 3
  %307 = load i32, i32* %306, align 8
  %308 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %309 = load i32, i32* %308, align 8
  call void @_Z19__device_stub__nb_4iPfS_ii(i32 1, float* %302, float* %304, i32 %307, i32 %309)
  br label %310

310:                                              ; preds = %300, %276
  %311 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %312 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %311, i32 0, i32 6
  %313 = load i32, i32* %312, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %313, i32 1, i32 1)
  %314 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %315 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %314, i32 0, i32 4
  %316 = load i32, i32* %315, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %35, i32 %316, i32 1, i32 1)
  %317 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %318 = load %struct.CUstream_st*, %struct.CUstream_st** %317, align 8
  %319 = bitcast %struct.CUstream_st* %318 to i8*
  %320 = bitcast { i64, i32 }* %36 to i8*
  %321 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %320, i8* align 4 %321, i64 12, i1 false)
  %322 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %323 = load i64, i64* %322, align 4
  %324 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = bitcast { i64, i32 }* %37 to i8*
  %327 = bitcast %struct.dim3* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %326, i8* align 4 %327, i64 12, i1 false)
  %328 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 0
  %329 = load i64, i64* %328, align 4
  %330 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %37, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = call i32 @__cudaPushCallConfiguration(i64 %323, i32 %325, i64 %329, i32 %331, i64 0, i8* %319)
  %333 = icmp ne i32 %332, 0
  br i1 %333, label %342, label %334

334:                                              ; preds = %310
  %335 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %336 = load float*, float** %335, align 8
  %337 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %338 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %337, i32 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %341 = load i32, i32* %340, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %336, i32 %339, i32 %341)
  br label %342

342:                                              ; preds = %334, %310
  %343 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %344 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %343, i32 0, i32 6
  %345 = load i32, i32* %344, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %345, i32 1, i32 1)
  %346 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %347 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %346, i32 0, i32 4
  %348 = load i32, i32* %347, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %39, i32 %348, i32 1, i32 1)
  %349 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %350 = load %struct.CUstream_st*, %struct.CUstream_st** %349, align 8
  %351 = bitcast %struct.CUstream_st* %350 to i8*
  %352 = bitcast { i64, i32 }* %40 to i8*
  %353 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %352, i8* align 4 %353, i64 12, i1 false)
  %354 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %355 = load i64, i64* %354, align 4
  %356 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = bitcast { i64, i32 }* %41 to i8*
  %359 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 12, i1 false)
  %360 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %361 = load i64, i64* %360, align 4
  %362 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = call i32 @__cudaPushCallConfiguration(i64 %355, i32 %357, i64 %361, i32 %363, i64 0, i8* %351)
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %374, label %366

366:                                              ; preds = %342
  %367 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 12
  %368 = load float*, float** %367, align 8
  %369 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %370 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %369, i32 0, i32 3
  %371 = load i32, i32* %370, align 8
  %372 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %373 = load i32, i32* %372, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %368, i32 %371, i32 %373)
  br label %374

374:                                              ; preds = %366, %342
  %375 = call i32 @cudaEventCreate(%struct.CUevent_st** %42)
  %376 = load %struct.CUevent_st*, %struct.CUevent_st** %42, align 8
  %377 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 15
  %378 = load %struct.CUstream_st*, %struct.CUstream_st** %377, align 8
  %379 = call i32 @cudaEventRecord(%struct.CUevent_st* %376, %struct.CUstream_st* %378)
  %380 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %381 = load %struct.CUstream_st*, %struct.CUstream_st** %380, align 8
  %382 = load %struct.CUevent_st*, %struct.CUevent_st** %42, align 8
  %383 = call i32 @cudaStreamWaitEvent(%struct.CUstream_st* %381, %struct.CUevent_st* %382, i32 0)
  %384 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %385 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %384, i32 0, i32 6
  %386 = load i32, i32* %385, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %43, i32 %386, i32 1, i32 1)
  %387 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %388 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %387, i32 0, i32 4
  %389 = load i32, i32* %388, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %44, i32 %389, i32 1, i32 1)
  %390 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %391 = load %struct.CUstream_st*, %struct.CUstream_st** %390, align 8
  %392 = bitcast %struct.CUstream_st* %391 to i8*
  %393 = bitcast { i64, i32 }* %45 to i8*
  %394 = bitcast %struct.dim3* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %393, i8* align 4 %394, i64 12, i1 false)
  %395 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 0
  %396 = load i64, i64* %395, align 4
  %397 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %45, i32 0, i32 1
  %398 = load i32, i32* %397, align 4
  %399 = bitcast { i64, i32 }* %46 to i8*
  %400 = bitcast %struct.dim3* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 12, i1 false)
  %401 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 0
  %402 = load i64, i64* %401, align 4
  %403 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %46, i32 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = call i32 @__cudaPushCallConfiguration(i64 %396, i32 %398, i64 %402, i32 %404, i64 0, i8* %392)
  %406 = icmp ne i32 %405, 0
  br i1 %406, label %419, label %407

407:                                              ; preds = %374
  %408 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 13
  %409 = load i32*, i32** %408, align 8
  %410 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 11
  %411 = load float*, float** %410, align 8
  %412 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 12
  %413 = load float*, float** %412, align 8
  %414 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %415 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %414, i32 0, i32 3
  %416 = load i32, i32* %415, align 8
  %417 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 2
  %418 = load i32, i32* %417, align 8
  call void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 1, i32* %409, float* %411, float* %413, i32 %416, i32 %418)
  br label %419

419:                                              ; preds = %407, %374
  %420 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %421 = load %struct.CUstream_st*, %struct.CUstream_st** %420, align 8
  %422 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 16
  %423 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %421, %struct.CUgraph_st** %422)
  %424 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 17
  %425 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 16
  %426 = load %struct.CUgraph_st*, %struct.CUgraph_st** %425, align 8
  %427 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %424, %struct.CUgraph_st* %426, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %428

428:                                              ; preds = %419, %2
  %429 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 17
  %430 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %429, align 8
  %431 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %432 = load %struct.CUstream_st*, %struct.CUstream_st** %431, align 8
  %433 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %430, %struct.CUstream_st* %432)
  %434 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %47, i32 0, i32 14
  %435 = load %struct.CUstream_st*, %struct.CUstream_st** %434, align 8
  %436 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %435)
  %437 = bitcast %class.Benchmark6* %47 to %struct.Benchmark*
  %438 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %437, i32 0, i32 14
  store i32 %436, i32* %438, align 4
  ret void
}

declare dso_local i32 @cudaStreamBeginCapture(%struct.CUstream_st*, i32) #1

declare dso_local i32 @cudaStreamEndCapture(%struct.CUstream_st*, %struct.CUgraph_st**) #1

declare dso_local i32 @cudaGraphInstantiate(%struct.CUgraphExec_st**, %struct.CUgraph_st*, %struct.CUgraphNode_st**, i8*, i64) #1

declare dso_local i32 @cudaGraphLaunch(%struct.CUgraphExec_st*, %struct.CUstream_st*) #1

declare dso_local i32 @cudaStreamSynchronize(%struct.CUstream_st*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark624execute_cudagraph_manualEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [5 x i8*], align 16
  %7 = alloca [7 x i8*], align 16
  %8 = alloca [7 x i8*], align 16
  %9 = alloca [5 x i8*], align 16
  %10 = alloca [6 x i8*], align 16
  %11 = alloca [5 x i8*], align 16
  %12 = alloca [5 x i8*], align 16
  %13 = alloca [4 x i8*], align 16
  %14 = alloca [4 x i8*], align 16
  %15 = alloca [6 x i8*], align 16
  %16 = alloca %struct.dim3, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca %struct.dim3, align 8
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 8
  %23 = alloca { i64, i32 }, align 4
  %24 = alloca %struct.dim3, align 4
  %25 = alloca %struct.dim3, align 8
  %26 = alloca { i64, i32 }, align 4
  %27 = alloca %struct.dim3, align 4
  %28 = alloca %struct.dim3, align 8
  %29 = alloca { i64, i32 }, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca %struct.dim3, align 8
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca %struct.dim3, align 4
  %34 = alloca %struct.dim3, align 8
  %35 = alloca { i64, i32 }, align 4
  %36 = alloca %struct.dim3, align 4
  %37 = alloca %struct.dim3, align 8
  %38 = alloca { i64, i32 }, align 4
  %39 = alloca %struct.dim3, align 4
  %40 = alloca %struct.dim3, align 8
  %41 = alloca { i64, i32 }, align 4
  %42 = alloca %struct.dim3, align 4
  %43 = alloca %struct.dim3, align 8
  %44 = alloca { i64, i32 }, align 4
  %45 = alloca %struct.dim3, align 4
  %46 = alloca %struct.dim3, align 8
  %47 = alloca { i64, i32 }, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %48 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %422

51:                                               ; preds = %2
  %52 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %53 = call i32 @cudaGraphCreate(%struct.CUgraph_st** %52, i32 0)
  store i32 1, i32* %5, align 4
  %54 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 0
  %55 = bitcast i32* %5 to i8*
  store i8* %55, i8** %54, align 8
  %56 = getelementptr inbounds i8*, i8** %54, i64 1
  %57 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 4
  %58 = bitcast float** %57 to i8*
  store i8* %58, i8** %56, align 8
  %59 = getelementptr inbounds i8*, i8** %56, i64 1
  %60 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 3
  %61 = bitcast i32** %60 to i8*
  store i8* %61, i8** %59, align 8
  %62 = getelementptr inbounds i8*, i8** %59, i64 1
  %63 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %64 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %63, i32 0, i32 3
  %65 = bitcast i32* %64 to i8*
  store i8* %65, i8** %62, align 8
  %66 = getelementptr inbounds i8*, i8** %62, i64 1
  %67 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 1
  %68 = bitcast i32* %67 to i8*
  store i8* %68, i8** %66, align 8
  %69 = getelementptr inbounds [7 x i8*], [7 x i8*]* %7, i64 0, i64 0
  %70 = bitcast i32* %5 to i8*
  store i8* %70, i8** %69, align 8
  %71 = getelementptr inbounds i8*, i8** %69, i64 1
  %72 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %73 = bitcast float** %72 to i8*
  store i8* %73, i8** %71, align 8
  %74 = getelementptr inbounds i8*, i8** %71, i64 1
  %75 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 3
  %76 = bitcast i32** %75 to i8*
  store i8* %76, i8** %74, align 8
  %77 = getelementptr inbounds i8*, i8** %74, i64 1
  %78 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 5
  %79 = bitcast float** %78 to i8*
  store i8* %79, i8** %77, align 8
  %80 = getelementptr inbounds i8*, i8** %77, i64 1
  %81 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %82 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %81, i32 0, i32 3
  %83 = bitcast i32* %82 to i8*
  store i8* %83, i8** %80, align 8
  %84 = getelementptr inbounds i8*, i8** %80, i64 1
  %85 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 1
  %86 = bitcast i32* %85 to i8*
  store i8* %86, i8** %84, align 8
  %87 = getelementptr inbounds i8*, i8** %84, i64 1
  %88 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %89 = bitcast i32* %88 to i8*
  store i8* %89, i8** %87, align 8
  %90 = getelementptr inbounds [7 x i8*], [7 x i8*]* %8, i64 0, i64 0
  %91 = bitcast i32* %5 to i8*
  store i8* %91, i8** %90, align 8
  %92 = getelementptr inbounds i8*, i8** %90, i64 1
  %93 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 12
  %94 = bitcast float** %93 to i8*
  store i8* %94, i8** %92, align 8
  %95 = getelementptr inbounds i8*, i8** %92, i64 1
  %96 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 4
  %97 = bitcast float** %96 to i8*
  store i8* %97, i8** %95, align 8
  %98 = getelementptr inbounds i8*, i8** %95, i64 1
  %99 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 7
  %100 = bitcast float** %99 to i8*
  store i8* %100, i8** %98, align 8
  %101 = getelementptr inbounds i8*, i8** %98, i64 1
  %102 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %103 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %102, i32 0, i32 3
  %104 = bitcast i32* %103 to i8*
  store i8* %104, i8** %101, align 8
  %105 = getelementptr inbounds i8*, i8** %101, i64 1
  %106 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 1
  %107 = bitcast i32* %106 to i8*
  store i8* %107, i8** %105, align 8
  %108 = getelementptr inbounds i8*, i8** %105, i64 1
  %109 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %110 = bitcast i32* %109 to i8*
  store i8* %110, i8** %108, align 8
  %111 = getelementptr inbounds [5 x i8*], [5 x i8*]* %9, i64 0, i64 0
  %112 = bitcast i32* %5 to i8*
  store i8* %112, i8** %111, align 8
  %113 = getelementptr inbounds i8*, i8** %111, i64 1
  %114 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 9
  %115 = bitcast float** %114 to i8*
  store i8* %115, i8** %113, align 8
  %116 = getelementptr inbounds i8*, i8** %113, i64 1
  %117 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %118 = bitcast float** %117 to i8*
  store i8* %118, i8** %116, align 8
  %119 = getelementptr inbounds i8*, i8** %116, i64 1
  %120 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %121 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %120, i32 0, i32 3
  %122 = bitcast i32* %121 to i8*
  store i8* %122, i8** %119, align 8
  %123 = getelementptr inbounds i8*, i8** %119, i64 1
  %124 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %125 = bitcast i32* %124 to i8*
  store i8* %125, i8** %123, align 8
  %126 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %127 = bitcast i32* %5 to i8*
  store i8* %127, i8** %126, align 8
  %128 = getelementptr inbounds i8*, i8** %126, i64 1
  %129 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 10
  %130 = bitcast float** %129 to i8*
  store i8* %130, i8** %128, align 8
  %131 = getelementptr inbounds i8*, i8** %128, i64 1
  %132 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %133 = bitcast float** %132 to i8*
  store i8* %133, i8** %131, align 8
  %134 = getelementptr inbounds i8*, i8** %131, i64 1
  %135 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 9
  %136 = bitcast float** %135 to i8*
  store i8* %136, i8** %134, align 8
  %137 = getelementptr inbounds i8*, i8** %134, i64 1
  %138 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %139 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %138, i32 0, i32 3
  %140 = bitcast i32* %139 to i8*
  store i8* %140, i8** %137, align 8
  %141 = getelementptr inbounds i8*, i8** %137, i64 1
  %142 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %143 = bitcast i32* %142 to i8*
  store i8* %143, i8** %141, align 8
  %144 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %145 = bitcast i32* %5 to i8*
  store i8* %145, i8** %144, align 8
  %146 = getelementptr inbounds i8*, i8** %144, i64 1
  %147 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 12
  %148 = bitcast float** %147 to i8*
  store i8* %148, i8** %146, align 8
  %149 = getelementptr inbounds i8*, i8** %146, i64 1
  %150 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 8
  %151 = bitcast float** %150 to i8*
  store i8* %151, i8** %149, align 8
  %152 = getelementptr inbounds i8*, i8** %149, i64 1
  %153 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %154 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %153, i32 0, i32 3
  %155 = bitcast i32* %154 to i8*
  store i8* %155, i8** %152, align 8
  %156 = getelementptr inbounds i8*, i8** %152, i64 1
  %157 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %158 = bitcast i32* %157 to i8*
  store i8* %158, i8** %156, align 8
  %159 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %160 = bitcast i32* %5 to i8*
  store i8* %160, i8** %159, align 8
  %161 = getelementptr inbounds i8*, i8** %159, i64 1
  %162 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %163 = bitcast float** %162 to i8*
  store i8* %163, i8** %161, align 8
  %164 = getelementptr inbounds i8*, i8** %161, i64 1
  %165 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 10
  %166 = bitcast float** %165 to i8*
  store i8* %166, i8** %164, align 8
  %167 = getelementptr inbounds i8*, i8** %164, i64 1
  %168 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %169 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %168, i32 0, i32 3
  %170 = bitcast i32* %169 to i8*
  store i8* %170, i8** %167, align 8
  %171 = getelementptr inbounds i8*, i8** %167, i64 1
  %172 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %173 = bitcast i32* %172 to i8*
  store i8* %173, i8** %171, align 8
  %174 = getelementptr inbounds [4 x i8*], [4 x i8*]* %13, i64 0, i64 0
  %175 = bitcast i32* %5 to i8*
  store i8* %175, i8** %174, align 8
  %176 = getelementptr inbounds i8*, i8** %174, i64 1
  %177 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %178 = bitcast float** %177 to i8*
  store i8* %178, i8** %176, align 8
  %179 = getelementptr inbounds i8*, i8** %176, i64 1
  %180 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %181 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %180, i32 0, i32 3
  %182 = bitcast i32* %181 to i8*
  store i8* %182, i8** %179, align 8
  %183 = getelementptr inbounds i8*, i8** %179, i64 1
  %184 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %185 = bitcast i32* %184 to i8*
  store i8* %185, i8** %183, align 8
  %186 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 0
  %187 = bitcast i32* %5 to i8*
  store i8* %187, i8** %186, align 8
  %188 = getelementptr inbounds i8*, i8** %186, i64 1
  %189 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 12
  %190 = bitcast float** %189 to i8*
  store i8* %190, i8** %188, align 8
  %191 = getelementptr inbounds i8*, i8** %188, i64 1
  %192 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %193 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %192, i32 0, i32 3
  %194 = bitcast i32* %193 to i8*
  store i8* %194, i8** %191, align 8
  %195 = getelementptr inbounds i8*, i8** %191, i64 1
  %196 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %197 = bitcast i32* %196 to i8*
  store i8* %197, i8** %195, align 8
  %198 = getelementptr inbounds [6 x i8*], [6 x i8*]* %15, i64 0, i64 0
  %199 = bitcast i32* %5 to i8*
  store i8* %199, i8** %198, align 8
  %200 = getelementptr inbounds i8*, i8** %198, i64 1
  %201 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 13
  %202 = bitcast i32** %201 to i8*
  store i8* %202, i8** %200, align 8
  %203 = getelementptr inbounds i8*, i8** %200, i64 1
  %204 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 11
  %205 = bitcast float** %204 to i8*
  store i8* %205, i8** %203, align 8
  %206 = getelementptr inbounds i8*, i8** %203, i64 1
  %207 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 12
  %208 = bitcast float** %207 to i8*
  store i8* %208, i8** %206, align 8
  %209 = getelementptr inbounds i8*, i8** %206, i64 1
  %210 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %211 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %210, i32 0, i32 3
  %212 = bitcast i32* %211 to i8*
  store i8* %212, i8** %209, align 8
  %213 = getelementptr inbounds i8*, i8** %209, i64 1
  %214 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 2
  %215 = bitcast i32* %214 to i8*
  store i8* %215, i8** %213, align 8
  %216 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %217 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %216, i32 0, i32 4
  %218 = load i32, i32* %217, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %16, i32 %218, i32 1, i32 1)
  %219 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %220 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %219, i32 0, i32 6
  %221 = load i32, i32* %220, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %221, i32 1, i32 1)
  %222 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %223 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 0
  %224 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 29
  %225 = bitcast %struct.dim3* %18 to i8*
  %226 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 12, i1 false)
  %227 = bitcast %struct.dim3* %19 to i8*
  %228 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %227, i8* align 4 %228, i64 12, i1 false)
  %229 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %230 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 19
  %231 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %232 = bitcast { i64, i32 }* %20 to i8*
  %233 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 12, i1 false)
  %234 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %235 = load i64, i64* %234, align 4
  %236 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %222, i8** %223, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %224, i8* bitcast (void (i32, float*, i32*, i32, i32)* @_Z19__device_stub__rr_1iPfPiii to i8*), i64 %235, i32 %237, %struct.dim3* byval(%struct.dim3) align 8 %19, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %229, %struct.CUgraphNode_st** %230, %"class.std::vector"* nonnull align 8 dereferenceable(24) %231, i32 0)
  %239 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %240 = getelementptr inbounds [7 x i8*], [7 x i8*]* %7, i64 0, i64 0
  %241 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 30
  %242 = bitcast %struct.dim3* %21 to i8*
  %243 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %242, i8* align 4 %243, i64 12, i1 false)
  %244 = bitcast %struct.dim3* %22 to i8*
  %245 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 12, i1 false)
  %246 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %247 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 20
  %248 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %249 = bitcast { i64, i32 }* %23 to i8*
  %250 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %250, i64 12, i1 false)
  %251 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0
  %252 = load i64, i64* %251, align 4
  %253 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %239, i8** %240, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %241, i8* bitcast (void (i32, float*, i32*, float*, i32, i32, i32)* @_Z19__device_stub__nb_1iPfPiS_iii to i8*), i64 %252, i32 %254, %struct.dim3* byval(%struct.dim3) align 8 %22, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %246, %struct.CUgraphNode_st** %247, %"class.std::vector"* nonnull align 8 dereferenceable(24) %248, i32 0)
  %256 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %256) #3
  %257 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %258 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 19
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %257, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %258)
  %259 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %260 = getelementptr inbounds [7 x i8*], [7 x i8*]* %8, i64 0, i64 0
  %261 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 31
  %262 = bitcast %struct.dim3* %24 to i8*
  %263 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %262, i8* align 4 %263, i64 12, i1 false)
  %264 = bitcast %struct.dim3* %25 to i8*
  %265 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %264, i8* align 4 %265, i64 12, i1 false)
  %266 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %267 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 21
  %268 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %269 = bitcast { i64, i32 }* %26 to i8*
  %270 = bitcast %struct.dim3* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %269, i8* align 4 %270, i64 12, i1 false)
  %271 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0
  %272 = load i64, i64* %271, align 4
  %273 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %259, i8** %260, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %261, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32)* @_Z19__device_stub__rr_2iPfS_S_iii to i8*), i64 %272, i32 %274, %struct.dim3* byval(%struct.dim3) align 8 %25, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %266, %struct.CUgraphNode_st** %267, %"class.std::vector"* nonnull align 8 dereferenceable(24) %268, i32 0)
  %276 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %276) #3
  %277 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %278 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 20
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %277, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %278)
  %279 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %280 = getelementptr inbounds [5 x i8*], [5 x i8*]* %9, i64 0, i64 0
  %281 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 32
  %282 = bitcast %struct.dim3* %27 to i8*
  %283 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %283, i64 12, i1 false)
  %284 = bitcast %struct.dim3* %28 to i8*
  %285 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 12, i1 false)
  %286 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %287 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 22
  %288 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %289 = bitcast { i64, i32 }* %29 to i8*
  %290 = bitcast %struct.dim3* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %289, i8* align 4 %290, i64 12, i1 false)
  %291 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 0
  %292 = load i64, i64* %291, align 4
  %293 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %29, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %279, i8** %280, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %281, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_2iPfS_ii to i8*), i64 %292, i32 %294, %struct.dim3* byval(%struct.dim3) align 8 %28, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %286, %struct.CUgraphNode_st** %287, %"class.std::vector"* nonnull align 8 dereferenceable(24) %288, i32 0)
  %296 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %296) #3
  %297 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %298 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 22
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %297, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %298)
  %299 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %300 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %301 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 33
  %302 = bitcast %struct.dim3* %30 to i8*
  %303 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 12, i1 false)
  %304 = bitcast %struct.dim3* %31 to i8*
  %305 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %304, i8* align 4 %305, i64 12, i1 false)
  %306 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %307 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 23
  %308 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %309 = bitcast { i64, i32 }* %32 to i8*
  %310 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %310, i64 12, i1 false)
  %311 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %312 = load i64, i64* %311, align 4
  %313 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %299, i8** %300, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %301, i8* bitcast (void (i32, float*, float*, float*, i32, i32)* @_Z19__device_stub__nb_3iPfS_S_ii to i8*), i64 %312, i32 %314, %struct.dim3* byval(%struct.dim3) align 8 %31, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %306, %struct.CUgraphNode_st** %307, %"class.std::vector"* nonnull align 8 dereferenceable(24) %308, i32 0)
  %316 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %316) #3
  %317 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %318 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 21
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %317, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %318)
  %319 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %320 = getelementptr inbounds [5 x i8*], [5 x i8*]* %11, i64 0, i64 0
  %321 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 34
  %322 = bitcast %struct.dim3* %33 to i8*
  %323 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %323, i64 12, i1 false)
  %324 = bitcast %struct.dim3* %34 to i8*
  %325 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %324, i8* align 4 %325, i64 12, i1 false)
  %326 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %327 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 24
  %328 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %329 = bitcast { i64, i32 }* %35 to i8*
  %330 = bitcast %struct.dim3* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %329, i8* align 4 %330, i64 12, i1 false)
  %331 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 0
  %332 = load i64, i64* %331, align 4
  %333 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %319, i8** %320, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %321, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__rr_3iPfS_ii to i8*), i64 %332, i32 %334, %struct.dim3* byval(%struct.dim3) align 8 %34, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %326, %struct.CUgraphNode_st** %327, %"class.std::vector"* nonnull align 8 dereferenceable(24) %328, i32 0)
  %336 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %336) #3
  %337 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %338 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 23
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %337, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %338)
  %339 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %340 = getelementptr inbounds [5 x i8*], [5 x i8*]* %12, i64 0, i64 0
  %341 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 35
  %342 = bitcast %struct.dim3* %36 to i8*
  %343 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %342, i8* align 4 %343, i64 12, i1 false)
  %344 = bitcast %struct.dim3* %37 to i8*
  %345 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* align 4 %345, i64 12, i1 false)
  %346 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %347 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 25
  %348 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %349 = bitcast { i64, i32 }* %38 to i8*
  %350 = bitcast %struct.dim3* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %350, i64 12, i1 false)
  %351 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 0
  %352 = load i64, i64* %351, align 4
  %353 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %38, i32 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %339, i8** %340, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %341, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_4iPfS_ii to i8*), i64 %352, i32 %354, %struct.dim3* byval(%struct.dim3) align 8 %37, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %346, %struct.CUgraphNode_st** %347, %"class.std::vector"* nonnull align 8 dereferenceable(24) %348, i32 0)
  %356 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %356) #3
  %357 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %358 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 25
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %357, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %358)
  %359 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %360 = getelementptr inbounds [4 x i8*], [4 x i8*]* %13, i64 0, i64 0
  %361 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 36
  %362 = bitcast %struct.dim3* %39 to i8*
  %363 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %362, i8* align 4 %363, i64 12, i1 false)
  %364 = bitcast %struct.dim3* %40 to i8*
  %365 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %364, i8* align 4 %365, i64 12, i1 false)
  %366 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %367 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 26
  %368 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %369 = bitcast { i64, i32 }* %41 to i8*
  %370 = bitcast %struct.dim3* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %369, i8* align 4 %370, i64 12, i1 false)
  %371 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 0
  %372 = load i64, i64* %371, align 4
  %373 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %41, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %359, i8** %360, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %361, i8* bitcast (void (i32, float*, i32, i32)* @_Z22__device_stub__softmaxiPfii to i8*), i64 %372, i32 %374, %struct.dim3* byval(%struct.dim3) align 8 %40, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %366, %struct.CUgraphNode_st** %367, %"class.std::vector"* nonnull align 8 dereferenceable(24) %368, i32 0)
  %376 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %376) #3
  %377 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %378 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 24
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %377, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %378)
  %379 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %380 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 0
  %381 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 37
  %382 = bitcast %struct.dim3* %42 to i8*
  %383 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %382, i8* align 4 %383, i64 12, i1 false)
  %384 = bitcast %struct.dim3* %43 to i8*
  %385 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %384, i8* align 4 %385, i64 12, i1 false)
  %386 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %387 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 27
  %388 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %389 = bitcast { i64, i32 }* %44 to i8*
  %390 = bitcast %struct.dim3* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %389, i8* align 4 %390, i64 12, i1 false)
  %391 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 0
  %392 = load i64, i64* %391, align 4
  %393 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %379, i8** %380, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %381, i8* bitcast (void (i32, float*, i32, i32)* @_Z22__device_stub__softmaxiPfii to i8*), i64 %392, i32 %394, %struct.dim3* byval(%struct.dim3) align 8 %43, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %386, %struct.CUgraphNode_st** %387, %"class.std::vector"* nonnull align 8 dereferenceable(24) %388, i32 0)
  %396 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %396) #3
  %397 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %398 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 26
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %397, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %398)
  %399 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %400 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 27
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %399, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %400)
  %401 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %402 = getelementptr inbounds [6 x i8*], [6 x i8*]* %15, i64 0, i64 0
  %403 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 38
  %404 = bitcast %struct.dim3* %45 to i8*
  %405 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %404, i8* align 4 %405, i64 12, i1 false)
  %406 = bitcast %struct.dim3* %46 to i8*
  %407 = bitcast %struct.dim3* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 12, i1 false)
  %408 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %409 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 28
  %410 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 18
  %411 = bitcast { i64, i32 }* %47 to i8*
  %412 = bitcast %struct.dim3* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %411, i8* align 4 %412, i64 12, i1 false)
  %413 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %47, i32 0, i32 0
  %414 = load i64, i64* %413, align 4
  %415 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %47, i32 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = call i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60) %401, i8** %402, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56) %403, i8* bitcast (void (i32, i32*, float*, float*, i32, i32)* @_Z21__device_stub__argmaxiPiPfS0_ii to i8*), i64 %414, i32 %416, %struct.dim3* byval(%struct.dim3) align 8 %46, %struct.CUgraph_st** nonnull align 8 dereferenceable(8) %408, %struct.CUgraphNode_st** %409, %"class.std::vector"* nonnull align 8 dereferenceable(24) %410, i32 0)
  %418 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 17
  %419 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 16
  %420 = load %struct.CUgraph_st*, %struct.CUgraph_st** %419, align 8
  %421 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %418, %struct.CUgraph_st* %420, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %422

422:                                              ; preds = %51, %2
  %423 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 17
  %424 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %423, align 8
  %425 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 14
  %426 = load %struct.CUstream_st*, %struct.CUstream_st** %425, align 8
  %427 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %424, %struct.CUstream_st* %426)
  %428 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %48, i32 0, i32 14
  %429 = load %struct.CUstream_st*, %struct.CUstream_st** %428, align 8
  %430 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %429)
  %431 = bitcast %class.Benchmark6* %48 to %struct.Benchmark*
  %432 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %431, i32 0, i32 14
  store i32 %430, i32* %432, align 4
  ret void
}

declare dso_local i32 @cudaGraphCreate(%struct.CUgraph_st**, i32) #1

declare dso_local i32 @_ZN9Benchmark8add_nodeEPPvR20cudaKernelNodeParamsS0_4dim3S4_RP10CUgraph_stPP14CUgraphNode_stRSt6vectorIS9_SaIS9_EEi(%struct.Benchmark* nonnull align 8 dereferenceable(60), i8**, %struct.cudaKernelNodeParams* nonnull align 8 dereferenceable(56), i8*, i64, i32, %struct.dim3* byval(%struct.dim3) align 8, %struct.CUgraph_st** nonnull align 8 dereferenceable(8), %struct.CUgraphNode_st**, %"class.std::vector"* nonnull align 8 dereferenceable(24), i32) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5clearEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %3, %struct.CUgraphNode_st** %7) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE9push_backERKS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %1) #6 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 2
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = icmp ne %struct.CUgraphNode_st** %10, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %2
  %17 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %18 to %"class.std::allocator"*
  %20 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %21, i32 0, i32 1
  %23 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %22, align 8
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %19, %struct.CUgraphNode_st** %23, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %24)
  %25 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %27, align 8
  %29 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %28, i32 1
  store %struct.CUgraphNode_st** %29, %struct.CUgraphNode_st*** %27, align 8
  br label %36

30:                                               ; preds = %2
  %31 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6) #3
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %31, %struct.CUgraphNode_st*** %32, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %35 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %34, align 8
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %6, %struct.CUgraphNode_st** %35, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %33)
  br label %36

36:                                               ; preds = %30, %16
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark624execute_cudagraph_singleEi(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0, i32 %1) unnamed_addr #6 align 2 {
  %3 = alloca %class.Benchmark6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.dim3, align 4
  %6 = alloca %struct.dim3, align 4
  %7 = alloca { i64, i32 }, align 4
  %8 = alloca { i64, i32 }, align 4
  %9 = alloca %struct.dim3, align 4
  %10 = alloca %struct.dim3, align 4
  %11 = alloca { i64, i32 }, align 4
  %12 = alloca { i64, i32 }, align 4
  %13 = alloca %struct.dim3, align 4
  %14 = alloca %struct.dim3, align 4
  %15 = alloca { i64, i32 }, align 4
  %16 = alloca { i64, i32 }, align 4
  %17 = alloca %struct.dim3, align 4
  %18 = alloca %struct.dim3, align 4
  %19 = alloca { i64, i32 }, align 4
  %20 = alloca { i64, i32 }, align 4
  %21 = alloca %struct.dim3, align 4
  %22 = alloca %struct.dim3, align 4
  %23 = alloca { i64, i32 }, align 4
  %24 = alloca { i64, i32 }, align 4
  %25 = alloca %struct.dim3, align 4
  %26 = alloca %struct.dim3, align 4
  %27 = alloca { i64, i32 }, align 4
  %28 = alloca { i64, i32 }, align 4
  %29 = alloca %struct.dim3, align 4
  %30 = alloca %struct.dim3, align 4
  %31 = alloca { i64, i32 }, align 4
  %32 = alloca { i64, i32 }, align 4
  %33 = alloca %struct.dim3, align 4
  %34 = alloca %struct.dim3, align 4
  %35 = alloca { i64, i32 }, align 4
  %36 = alloca { i64, i32 }, align 4
  %37 = alloca %struct.dim3, align 4
  %38 = alloca %struct.dim3, align 4
  %39 = alloca { i64, i32 }, align 4
  %40 = alloca { i64, i32 }, align 4
  %41 = alloca %struct.dim3, align 4
  %42 = alloca %struct.dim3, align 4
  %43 = alloca { i64, i32 }, align 4
  %44 = alloca { i64, i32 }, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %3, align 8
  store i32 %1, i32* %4, align 4
  %45 = load %class.Benchmark6*, %class.Benchmark6** %3, align 8
  %46 = load i32, i32* %4, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %408

48:                                               ; preds = %2
  %49 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %50 = load %struct.CUstream_st*, %struct.CUstream_st** %49, align 8
  %51 = call i32 @cudaStreamBeginCapture(%struct.CUstream_st* %50, i32 0)
  %52 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %53 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %52, i32 0, i32 6
  %54 = load i32, i32* %53, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %5, i32 %54, i32 1, i32 1)
  %55 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %56 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %55, i32 0, i32 4
  %57 = load i32, i32* %56, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %6, i32 %57, i32 1, i32 1)
  %58 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %59 = load %struct.CUstream_st*, %struct.CUstream_st** %58, align 8
  %60 = bitcast %struct.CUstream_st* %59 to i8*
  %61 = bitcast { i64, i32 }* %7 to i8*
  %62 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 12, i1 false)
  %63 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 0
  %64 = load i64, i64* %63, align 4
  %65 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %7, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = bitcast { i64, i32 }* %8 to i8*
  %68 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 12, i1 false)
  %69 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0
  %70 = load i64, i64* %69, align 4
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = call i32 @__cudaPushCallConfiguration(i64 %64, i32 %66, i64 %70, i32 %72, i64 0, i8* %60)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %48
  %76 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 4
  %77 = load float*, float** %76, align 8
  %78 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 3
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %81 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  call void @_Z19__device_stub__rr_1iPfPiii(i32 1, float* %77, i32* %79, i32 %82, i32 %84)
  br label %85

85:                                               ; preds = %75, %48
  %86 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %87 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %86, i32 0, i32 6
  %88 = load i32, i32* %87, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %9, i32 %88, i32 1, i32 1)
  %89 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %90 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %89, i32 0, i32 4
  %91 = load i32, i32* %90, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %10, i32 %91, i32 1, i32 1)
  %92 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %93 = load %struct.CUstream_st*, %struct.CUstream_st** %92, align 8
  %94 = bitcast %struct.CUstream_st* %93 to i8*
  %95 = bitcast { i64, i32 }* %11 to i8*
  %96 = bitcast %struct.dim3* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 12, i1 false)
  %97 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 0
  %98 = load i64, i64* %97, align 4
  %99 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %11, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = bitcast { i64, i32 }* %12 to i8*
  %102 = bitcast %struct.dim3* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 12, i1 false)
  %103 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 0
  %104 = load i64, i64* %103, align 4
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %12, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = call i32 @__cudaPushCallConfiguration(i64 %98, i32 %100, i64 %104, i32 %106, i64 0, i8* %94)
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %123, label %109

109:                                              ; preds = %85
  %110 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %111 = load float*, float** %110, align 8
  %112 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 3
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 5
  %115 = load float*, float** %114, align 8
  %116 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %117 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %116, i32 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %122 = load i32, i32* %121, align 8
  call void @_Z19__device_stub__nb_1iPfPiS_iii(i32 1, float* %111, i32* %113, float* %115, i32 %118, i32 %120, i32 %122)
  br label %123

123:                                              ; preds = %109, %85
  %124 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %125 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %124, i32 0, i32 6
  %126 = load i32, i32* %125, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %13, i32 %126, i32 1, i32 1)
  %127 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %128 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %127, i32 0, i32 4
  %129 = load i32, i32* %128, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %14, i32 %129, i32 1, i32 1)
  %130 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %131 = load %struct.CUstream_st*, %struct.CUstream_st** %130, align 8
  %132 = bitcast %struct.CUstream_st* %131 to i8*
  %133 = bitcast { i64, i32 }* %15 to i8*
  %134 = bitcast %struct.dim3* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 12, i1 false)
  %135 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 0
  %136 = load i64, i64* %135, align 4
  %137 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %15, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = bitcast { i64, i32 }* %16 to i8*
  %140 = bitcast %struct.dim3* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 12, i1 false)
  %141 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 0
  %142 = load i64, i64* %141, align 4
  %143 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %16, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = call i32 @__cudaPushCallConfiguration(i64 %136, i32 %138, i64 %142, i32 %144, i64 0, i8* %132)
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %123
  %148 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %149 = load float*, float** %148, align 8
  %150 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 4
  %151 = load float*, float** %150, align 8
  %152 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 7
  %153 = load float*, float** %152, align 8
  %154 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %155 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %154, i32 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %160 = load i32, i32* %159, align 8
  call void @_Z19__device_stub__rr_2iPfS_S_iii(i32 1, float* %149, float* %151, float* %153, i32 %156, i32 %158, i32 %160)
  br label %161

161:                                              ; preds = %147, %123
  %162 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %163 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %162, i32 0, i32 6
  %164 = load i32, i32* %163, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %17, i32 %164, i32 1, i32 1)
  %165 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %166 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %165, i32 0, i32 4
  %167 = load i32, i32* %166, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %18, i32 %167, i32 1, i32 1)
  %168 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %169 = load %struct.CUstream_st*, %struct.CUstream_st** %168, align 8
  %170 = bitcast %struct.CUstream_st* %169 to i8*
  %171 = bitcast { i64, i32 }* %19 to i8*
  %172 = bitcast %struct.dim3* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 12, i1 false)
  %173 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 0
  %174 = load i64, i64* %173, align 4
  %175 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %19, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = bitcast { i64, i32 }* %20 to i8*
  %178 = bitcast %struct.dim3* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 12, i1 false)
  %179 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 0
  %180 = load i64, i64* %179, align 4
  %181 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %20, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = call i32 @__cudaPushCallConfiguration(i64 %174, i32 %176, i64 %180, i32 %182, i64 0, i8* %170)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %161
  %186 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 9
  %187 = load float*, float** %186, align 8
  %188 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %189 = load float*, float** %188, align 8
  %190 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %191 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %190, i32 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %194 = load i32, i32* %193, align 8
  call void @_Z19__device_stub__nb_2iPfS_ii(i32 1, float* %187, float* %189, i32 %192, i32 %194)
  br label %195

195:                                              ; preds = %185, %161
  %196 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %197 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %196, i32 0, i32 6
  %198 = load i32, i32* %197, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %21, i32 %198, i32 1, i32 1)
  %199 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %200 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %199, i32 0, i32 4
  %201 = load i32, i32* %200, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %22, i32 %201, i32 1, i32 1)
  %202 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %203 = load %struct.CUstream_st*, %struct.CUstream_st** %202, align 8
  %204 = bitcast %struct.CUstream_st* %203 to i8*
  %205 = bitcast { i64, i32 }* %23 to i8*
  %206 = bitcast %struct.dim3* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 12, i1 false)
  %207 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 0
  %208 = load i64, i64* %207, align 4
  %209 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %23, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = bitcast { i64, i32 }* %24 to i8*
  %212 = bitcast %struct.dim3* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 12, i1 false)
  %213 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 0
  %214 = load i64, i64* %213, align 4
  %215 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %24, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = call i32 @__cudaPushCallConfiguration(i64 %208, i32 %210, i64 %214, i32 %216, i64 0, i8* %204)
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %231, label %219

219:                                              ; preds = %195
  %220 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 10
  %221 = load float*, float** %220, align 8
  %222 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %223 = load float*, float** %222, align 8
  %224 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 9
  %225 = load float*, float** %224, align 8
  %226 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %227 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %230 = load i32, i32* %229, align 8
  call void @_Z19__device_stub__nb_3iPfS_S_ii(i32 1, float* %221, float* %223, float* %225, i32 %228, i32 %230)
  br label %231

231:                                              ; preds = %219, %195
  %232 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %233 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %232, i32 0, i32 6
  %234 = load i32, i32* %233, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %25, i32 %234, i32 1, i32 1)
  %235 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %236 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %235, i32 0, i32 4
  %237 = load i32, i32* %236, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %26, i32 %237, i32 1, i32 1)
  %238 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %239 = load %struct.CUstream_st*, %struct.CUstream_st** %238, align 8
  %240 = bitcast %struct.CUstream_st* %239 to i8*
  %241 = bitcast { i64, i32 }* %27 to i8*
  %242 = bitcast %struct.dim3* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %242, i64 12, i1 false)
  %243 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  %244 = load i64, i64* %243, align 4
  %245 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = bitcast { i64, i32 }* %28 to i8*
  %248 = bitcast %struct.dim3* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %248, i64 12, i1 false)
  %249 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 0
  %250 = load i64, i64* %249, align 4
  %251 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %28, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = call i32 @__cudaPushCallConfiguration(i64 %244, i32 %246, i64 %250, i32 %252, i64 0, i8* %240)
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %265, label %255

255:                                              ; preds = %231
  %256 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %257 = load float*, float** %256, align 8
  %258 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 8
  %259 = load float*, float** %258, align 8
  %260 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %261 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %260, i32 0, i32 3
  %262 = load i32, i32* %261, align 8
  %263 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %264 = load i32, i32* %263, align 8
  call void @_Z19__device_stub__rr_3iPfS_ii(i32 1, float* %257, float* %259, i32 %262, i32 %264)
  br label %265

265:                                              ; preds = %255, %231
  %266 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %267 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %266, i32 0, i32 6
  %268 = load i32, i32* %267, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %29, i32 %268, i32 1, i32 1)
  %269 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %270 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %269, i32 0, i32 4
  %271 = load i32, i32* %270, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %30, i32 %271, i32 1, i32 1)
  %272 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %273 = load %struct.CUstream_st*, %struct.CUstream_st** %272, align 8
  %274 = bitcast %struct.CUstream_st* %273 to i8*
  %275 = bitcast { i64, i32 }* %31 to i8*
  %276 = bitcast %struct.dim3* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* align 4 %276, i64 12, i1 false)
  %277 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 0
  %278 = load i64, i64* %277, align 4
  %279 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %31, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = bitcast { i64, i32 }* %32 to i8*
  %282 = bitcast %struct.dim3* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %282, i64 12, i1 false)
  %283 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 0
  %284 = load i64, i64* %283, align 4
  %285 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %32, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = call i32 @__cudaPushCallConfiguration(i64 %278, i32 %280, i64 %284, i32 %286, i64 0, i8* %274)
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %299, label %289

289:                                              ; preds = %265
  %290 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %291 = load float*, float** %290, align 8
  %292 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 10
  %293 = load float*, float** %292, align 8
  %294 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %295 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %294, i32 0, i32 3
  %296 = load i32, i32* %295, align 8
  %297 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %298 = load i32, i32* %297, align 8
  call void @_Z19__device_stub__nb_4iPfS_ii(i32 1, float* %291, float* %293, i32 %296, i32 %298)
  br label %299

299:                                              ; preds = %289, %265
  %300 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %301 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %300, i32 0, i32 6
  %302 = load i32, i32* %301, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %33, i32 %302, i32 1, i32 1)
  %303 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %304 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %303, i32 0, i32 4
  %305 = load i32, i32* %304, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %34, i32 %305, i32 1, i32 1)
  %306 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %307 = load %struct.CUstream_st*, %struct.CUstream_st** %306, align 8
  %308 = bitcast %struct.CUstream_st* %307 to i8*
  %309 = bitcast { i64, i32 }* %35 to i8*
  %310 = bitcast %struct.dim3* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %309, i8* align 4 %310, i64 12, i1 false)
  %311 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 0
  %312 = load i64, i64* %311, align 4
  %313 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %35, i32 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = bitcast { i64, i32 }* %36 to i8*
  %316 = bitcast %struct.dim3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %315, i8* align 4 %316, i64 12, i1 false)
  %317 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 0
  %318 = load i64, i64* %317, align 4
  %319 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %36, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = call i32 @__cudaPushCallConfiguration(i64 %312, i32 %314, i64 %318, i32 %320, i64 0, i8* %308)
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %331, label %323

323:                                              ; preds = %299
  %324 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %325 = load float*, float** %324, align 8
  %326 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %327 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %326, i32 0, i32 3
  %328 = load i32, i32* %327, align 8
  %329 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %330 = load i32, i32* %329, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %325, i32 %328, i32 %330)
  br label %331

331:                                              ; preds = %323, %299
  %332 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %333 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %332, i32 0, i32 6
  %334 = load i32, i32* %333, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %37, i32 %334, i32 1, i32 1)
  %335 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %336 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %335, i32 0, i32 4
  %337 = load i32, i32* %336, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %38, i32 %337, i32 1, i32 1)
  %338 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %339 = load %struct.CUstream_st*, %struct.CUstream_st** %338, align 8
  %340 = bitcast %struct.CUstream_st* %339 to i8*
  %341 = bitcast { i64, i32 }* %39 to i8*
  %342 = bitcast %struct.dim3* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 12, i1 false)
  %343 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 0
  %344 = load i64, i64* %343, align 4
  %345 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = bitcast { i64, i32 }* %40 to i8*
  %348 = bitcast %struct.dim3* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %347, i8* align 4 %348, i64 12, i1 false)
  %349 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %350 = load i64, i64* %349, align 4
  %351 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = call i32 @__cudaPushCallConfiguration(i64 %344, i32 %346, i64 %350, i32 %352, i64 0, i8* %340)
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %363, label %355

355:                                              ; preds = %331
  %356 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %357 = load float*, float** %356, align 8
  %358 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %359 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %358, i32 0, i32 3
  %360 = load i32, i32* %359, align 8
  %361 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %362 = load i32, i32* %361, align 8
  call void @_Z22__device_stub__softmaxiPfii(i32 1, float* %357, i32 %360, i32 %362)
  br label %363

363:                                              ; preds = %355, %331
  %364 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %365 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %364, i32 0, i32 6
  %366 = load i32, i32* %365, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %41, i32 %366, i32 1, i32 1)
  %367 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %368 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %367, i32 0, i32 4
  %369 = load i32, i32* %368, align 4
  call void @_ZN4dim3C2Ejjj(%struct.dim3* nonnull align 4 dereferenceable(12) %42, i32 %369, i32 1, i32 1)
  %370 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %371 = load %struct.CUstream_st*, %struct.CUstream_st** %370, align 8
  %372 = bitcast %struct.CUstream_st* %371 to i8*
  %373 = bitcast { i64, i32 }* %43 to i8*
  %374 = bitcast %struct.dim3* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %373, i8* align 4 %374, i64 12, i1 false)
  %375 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 0
  %376 = load i64, i64* %375, align 4
  %377 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %43, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = bitcast { i64, i32 }* %44 to i8*
  %380 = bitcast %struct.dim3* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %379, i8* align 4 %380, i64 12, i1 false)
  %381 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 0
  %382 = load i64, i64* %381, align 4
  %383 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %44, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = call i32 @__cudaPushCallConfiguration(i64 %376, i32 %378, i64 %382, i32 %384, i64 0, i8* %372)
  %386 = icmp ne i32 %385, 0
  br i1 %386, label %399, label %387

387:                                              ; preds = %363
  %388 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 13
  %389 = load i32*, i32** %388, align 8
  %390 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 11
  %391 = load float*, float** %390, align 8
  %392 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 12
  %393 = load float*, float** %392, align 8
  %394 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %395 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %394, i32 0, i32 3
  %396 = load i32, i32* %395, align 8
  %397 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 2
  %398 = load i32, i32* %397, align 8
  call void @_Z21__device_stub__argmaxiPiPfS0_ii(i32 1, i32* %389, float* %391, float* %393, i32 %396, i32 %398)
  br label %399

399:                                              ; preds = %387, %363
  %400 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %401 = load %struct.CUstream_st*, %struct.CUstream_st** %400, align 8
  %402 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 16
  %403 = call i32 @cudaStreamEndCapture(%struct.CUstream_st* %401, %struct.CUgraph_st** %402)
  %404 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 17
  %405 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 16
  %406 = load %struct.CUgraph_st*, %struct.CUgraph_st** %405, align 8
  %407 = call i32 @cudaGraphInstantiate(%struct.CUgraphExec_st** %404, %struct.CUgraph_st* %406, %struct.CUgraphNode_st** null, i8* null, i64 0)
  br label %408

408:                                              ; preds = %399, %2
  %409 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 17
  %410 = load %struct.CUgraphExec_st*, %struct.CUgraphExec_st** %409, align 8
  %411 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %412 = load %struct.CUstream_st*, %struct.CUstream_st** %411, align 8
  %413 = call i32 @cudaGraphLaunch(%struct.CUgraphExec_st* %410, %struct.CUstream_st* %412)
  %414 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %45, i32 0, i32 14
  %415 = load %struct.CUstream_st*, %struct.CUstream_st** %414, align 8
  %416 = call i32 @cudaStreamSynchronize(%struct.CUstream_st* %415)
  %417 = bitcast %class.Benchmark6* %45 to %struct.Benchmark*
  %418 = getelementptr inbounds %struct.Benchmark, %struct.Benchmark* %417, i32 0, i32 14
  store i32 %416, i32* %418, align 4
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define dso_local void @_ZN10Benchmark612print_resultB5cxx11Eb(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %class.Benchmark6* nonnull align 8 dereferenceable(856) %1, i1 zeroext %2) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca %class.Benchmark6*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::allocator.0", align 1
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.std::__cxx11::basic_string", align 8
  %14 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %14, i8** %4, align 8
  store %class.Benchmark6* %1, %class.Benchmark6** %5, align 8
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %6, align 1
  %16 = load %class.Benchmark6*, %class.Benchmark6** %5, align 8
  %17 = load i8, i8* %6, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %19, label %24

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %16, i32 0, i32 13
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  call void @_ZNSt7__cxx119to_stringEi(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %23)
  br label %63

24:                                               ; preds = %3
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %8) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %8)
          to label %25 unwind label %43

25:                                               ; preds = %24
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %8) #3
  store i32 0, i32* %11, align 4
  br label %26

26:                                               ; preds = %40, %25
  %27 = load i32, i32* %11, align 4
  %28 = icmp slt i32 %27, 10
  br i1 %28, label %29, label %60

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %16, i32 0, i32 13
  %31 = load i32*, i32** %30, align 8
  %32 = load i32, i32* %11, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  %35 = load i32, i32* %34, align 4
  invoke void @_ZNSt7__cxx119to_stringEi(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %13, i32 %35)
          to label %36 unwind label %47

36:                                               ; preds = %29
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %12, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
          to label %37 unwind label %51

37:                                               ; preds = %36
  %38 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %12)
          to label %39 unwind label %55

39:                                               ; preds = %37
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %12) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13) #3
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %11, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %11, align 4
  br label %26, !llvm.loop !13

43:                                               ; preds = %24
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %9, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %10, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %8) #3
  br label %64

47:                                               ; preds = %60, %29
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %9, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %10, align 4
  br label %62

51:                                               ; preds = %36
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %9, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %10, align 4
  br label %59

55:                                               ; preds = %37
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %9, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %10, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %12) #3
  br label %59

59:                                               ; preds = %55, %51
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %13) #3
  br label %62

60:                                               ; preds = %26
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
          to label %61 unwind label %47

61:                                               ; preds = %60
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7) #3
  br label %63

62:                                               ; preds = %59, %47
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7) #3
  br label %64

63:                                               ; preds = %61, %19
  ret void

64:                                               ; preds = %62, %43
  %65 = load i8*, i8** %9, align 8
  %66 = load i32, i32* %10, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx119to_stringEi(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %5, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  call void (%"class.std::__cxx11::basic_string"*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i64, i8*, ...) @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* @vsnprintf, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %6)
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, i8* %2) #6 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %7, i8** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %9)
  %11 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11) #3
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) unnamed_addr #2

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1, i8* %2) #6 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i1, align 1
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %10, i8** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %2, i8** %6, align 8
  store i1 false, i1* %7, align 1
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
  %12 = load i8*, i8** %6, align 8
  %13 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %12)
          to label %14 unwind label %16

14:                                               ; preds = %3
  store i1 true, i1* %7, align 1
  %15 = load i1, i1* %7, align 1
  br i1 %15, label %21, label %20

16:                                               ; preds = %3
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %8, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %9, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0) #3
  br label %22

20:                                               ; preds = %14
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0) #3
  br label %21

21:                                               ; preds = %20, %14
  ret void

22:                                               ; preds = %16
  %23 = load i8*, i8** %8, align 8
  %24 = load i32, i32* %9, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark6D2Ev(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0) unnamed_addr #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Benchmark6*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %class.Benchmark6* %0, %class.Benchmark6** %2, align 8
  %5 = load %class.Benchmark6*, %class.Benchmark6** %2, align 8
  %6 = bitcast %class.Benchmark6* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV10Benchmark6, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 3
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = invoke i32 @cudaFree(i8* %9)
          to label %11 unwind label %72

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 4
  %13 = load float*, float** %12, align 8
  %14 = bitcast float* %13 to i8*
  %15 = invoke i32 @cudaFree(i8* %14)
          to label %16 unwind label %72

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 5
  %18 = load float*, float** %17, align 8
  %19 = bitcast float* %18 to i8*
  %20 = invoke i32 @cudaFree(i8* %19)
          to label %21 unwind label %72

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 6
  %23 = load float*, float** %22, align 8
  %24 = bitcast float* %23 to i8*
  %25 = invoke i32 @cudaFree(i8* %24)
          to label %26 unwind label %72

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 7
  %28 = load float*, float** %27, align 8
  %29 = bitcast float* %28 to i8*
  %30 = invoke i32 @cudaFree(i8* %29)
          to label %31 unwind label %72

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 8
  %33 = load float*, float** %32, align 8
  %34 = bitcast float* %33 to i8*
  %35 = invoke i32 @cudaFree(i8* %34)
          to label %36 unwind label %72

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 9
  %38 = load float*, float** %37, align 8
  %39 = bitcast float* %38 to i8*
  %40 = invoke i32 @cudaFree(i8* %39)
          to label %41 unwind label %72

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 10
  %43 = load float*, float** %42, align 8
  %44 = bitcast float* %43 to i8*
  %45 = invoke i32 @cudaFree(i8* %44)
          to label %46 unwind label %72

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 11
  %48 = load float*, float** %47, align 8
  %49 = bitcast float* %48 to i8*
  %50 = invoke i32 @cudaFree(i8* %49)
          to label %51 unwind label %72

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 12
  %53 = load float*, float** %52, align 8
  %54 = bitcast float* %53 to i8*
  %55 = invoke i32 @cudaFree(i8* %54)
          to label %56 unwind label %72

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 13
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast i32* %58 to i8*
  %60 = invoke i32 @cudaFree(i8* %59)
          to label %61 unwind label %72

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 14
  %63 = load %struct.CUstream_st*, %struct.CUstream_st** %62, align 8
  %64 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %63)
          to label %65 unwind label %72

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 15
  %67 = load %struct.CUstream_st*, %struct.CUstream_st** %66, align 8
  %68 = invoke i32 @cudaStreamDestroy(%struct.CUstream_st* %67)
          to label %69 unwind label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %70) #3
  %71 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %71) #3
  ret void

72:                                               ; preds = %65, %61, %56, %51, %46, %41, %36, %31, %26, %21, %16, %11, %1
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %class.Benchmark6, %class.Benchmark6* %5, i32 0, i32 18
  call void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %76) #3
  %77 = bitcast %class.Benchmark6* %5 to %struct.Benchmark*
  call void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %77) #3
  br label %78

78:                                               ; preds = %72
  %79 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %79) #15
  unreachable
}

declare dso_local i32 @cudaFree(i8*) #1

declare dso_local i32 @cudaStreamDestroy(%struct.CUstream_st*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EED2Ev(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %14) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %13, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %15)
          to label %16 unwind label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %17) #3
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %22) #3
  br label %23

23:                                               ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #15
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9BenchmarkD2Ev(%struct.Benchmark* nonnull align 8 dereferenceable(60) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %struct.Benchmark*, align 8
  store %struct.Benchmark* %0, %struct.Benchmark** %2, align 8
  %3 = load %struct.Benchmark*, %struct.Benchmark** %2, align 8
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #9 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN10Benchmark6D0Ev(%class.Benchmark6* nonnull align 8 dereferenceable(856) %0) unnamed_addr #8 align 2 {
  %2 = alloca %class.Benchmark6*, align 8
  store %class.Benchmark6* %0, %class.Benchmark6** %2, align 8
  %3 = load %class.Benchmark6*, %class.Benchmark6** %2, align 8
  call void @_ZN10Benchmark6D1Ev(%class.Benchmark6* nonnull align 8 dereferenceable(856) %3) #3
  %4 = bitcast %class.Benchmark6* %3 to i8*
  call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #10

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %0, i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i64 %2, i8* %3, ...) #6 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i8*, align 8
  %6 = alloca i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [1 x %struct.__va_list_tag], align 16
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::allocator.0", align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  store i8* %15, i8** %5, align 8
  store i32 (i8*, i64, i8*, %struct.__va_list_tag*)* %1, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %16 = load i64, i64* %7, align 8
  %17 = mul i64 1, %16
  %18 = alloca i8, i64 %17, align 16
  store i8* %18, i8** %9, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %20 = bitcast %struct.__va_list_tag* %19 to i8*
  call void @llvm.va_start(i8* %20)
  %21 = load i32 (i8*, i64, i8*, %struct.__va_list_tag*)*, i32 (i8*, i64, i8*, %struct.__va_list_tag*)** %6, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %26 = call i32 %21(i8* %22, i64 %23, i8* %24, %struct.__va_list_tag* %25)
  store i32 %26, i32* %11, align 4
  %27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %10, i64 0, i64 0
  %28 = bitcast %struct.__va_list_tag* %27 to i8*
  call void @llvm.va_end(i8* %28)
  %29 = load i8*, i8** %9, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = load i32, i32* %11, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %29, i8* %33, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12)
          to label %34 unwind label %35

34:                                               ; preds = %4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  ret void

35:                                               ; preds = %4
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %13, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %14, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %12) #3
  br label %39

39:                                               ; preds = %35
  %40 = load i8*, i8** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43
}

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IPcvEET_S7_RKS3_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %3) unnamed_addr #12 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %11, i32 0, i32 0
  %13 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12, i8* %13, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %14)
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %15, i8* %16)
          to label %17 unwind label %18

17:                                               ; preds = %4
  ret void

18:                                               ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %12) #3
  br label %22

22:                                               ; preds = %18
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* %10, align 4
  %25 = insertvalue { i8*, i32 } undef, i8* %23, 0
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1
  resume { i8*, i32 } %26
}

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8), i8*, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %8, i8* %9, i8* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, align 8
  store %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %0, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %3 = load %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %2, align 8
  %4 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::__false_type", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %10, i8* %11, i8* %12)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0, i8* %1, i8* %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %12)
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = icmp ne i8* %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

19:                                               ; preds = %14, %3
  %20 = load i8*, i8** %6, align 8
  %21 = load i8*, i8** %7, align 8
  %22 = call i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %20, i8* %21)
  store i64 %22, i64* %8, align 8
  %23 = load i64, i64* %8, align 8
  %24 = icmp ugt i64 %23, 15
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64* nonnull align 8 dereferenceable(8) %8, i64 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i8* %26)
  %27 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %27)
  br label %28

28:                                               ; preds = %25, %19
  %29 = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %30 unwind label %33

30:                                               ; preds = %28
  %31 = load i8*, i8** %6, align 8
  %32 = load i8*, i8** %7, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8* %29, i8* %31, i8* %32) #3
  br label %46

33:                                               ; preds = %28
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  br label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %9, align 8
  %39 = call i8* @__cxa_begin_catch(i8* %38) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11)
          to label %40 unwind label %41

40:                                               ; preds = %37
  invoke void @__cxa_rethrow() #17
          to label %56 unwind label %41

41:                                               ; preds = %40, %37
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %9, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %45 unwind label %53

45:                                               ; preds = %41
  br label %48

46:                                               ; preds = %30
  %47 = load i64, i64* %8, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11, i64 %47)
  ret void

48:                                               ; preds = %45
  %49 = load i8*, i8** %9, align 8
  %50 = load i32, i32* %10, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

53:                                               ; preds = %41
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #15
  unreachable

56:                                               ; preds = %40
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %0) #7 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  ret i1 %4
}

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %0, i8* %1) #6 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i8*, i8** %4, align 8
  call void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %7, i8* %8)
  ret i64 %9
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) #1

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8*, i8*, i8*) #2

declare dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #1

declare dso_local void @__cxa_rethrow()

declare dso_local void @__cxa_end_catch()

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i64) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %0, i8* %1) #7 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = ptrtoint i8* %6 to i64
  %9 = ptrtoint i8* %7 to i64
  %10 = sub i64 %8, %9
  ret i64 %10
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1)) unnamed_addr #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) unnamed_addr #1

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), i8*) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  call void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %7, %struct.CUgraphNode_st** %8)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EED2Ev(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %16 = ptrtoint %struct.CUgraphNode_st** %14 to i64
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %5, %struct.CUgraphNode_st** %8, i64 %18)
          to label %19 unwind label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %20) #3
  ret void

21:                                               ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %3, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %4, align 4
  %25 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %25) #3
  br label %26

26:                                               ; preds = %21
  %27 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %27) #15
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP14CUgraphNode_stEvT_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #6 comdat {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %5, %struct.CUgraphNode_st** %6)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP14CUgraphNode_stEEvT_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %struct.CUgraphNode_st**, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = icmp ne %struct.CUgraphNode_st** %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %11 to %"class.std::allocator"*
  %13 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %12, %struct.CUgraphNode_st** %13, i64 %14)
  br label %15

15:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* nonnull align 8 dereferenceable(24) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %0, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"*, %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE10deallocateERS2_PS1_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, i64 %10)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, i64 %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIP14CUgraphNode_stED2Ev(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

declare dso_local i32 @cudaMallocManaged(i8**, i64, i32) #1

declare dso_local i32 @cudaStreamAttachMemAsync(%struct.CUstream_st*, i8*, i64, i32) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %12 = ptrtoint %struct.CUgraphNode_st** %10 to i64
  %13 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  store i64 %15, i64* %5, align 8
  %16 = load i64, i64* %5, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %2
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %20 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %21, i32 0, i32 1
  %23 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %22, align 8
  %24 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %25 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %24) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %23, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %25)
          to label %26 unwind label %32

26:                                               ; preds = %18
  %27 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %28 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %29, i32 0, i32 1
  store %struct.CUgraphNode_st** %27, %struct.CUgraphNode_st*** %30, align 8
  br label %31

31:                                               ; preds = %26, %2
  ret void

32:                                               ; preds = %18
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #15
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.CUgraphNode_st**, align 8
  %9 = alloca %struct.CUgraphNode_st**, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %struct.CUgraphNode_st**, align 8
  %13 = alloca %struct.CUgraphNode_st**, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %16, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %17 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0))
  store i64 %18, i64* %7, align 8
  %19 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  store %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st*** %8, align 8
  %23 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %24, i32 0, i32 1
  %26 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %25, align 8
  store %struct.CUgraphNode_st** %26, %struct.CUgraphNode_st*** %9, align 8
  %27 = call %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %17) #3
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.CUgraphNode_st** %27, %struct.CUgraphNode_st*** %28, align 8
  %29 = call i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %11) #3
  store i64 %29, i64* %10, align 8
  %30 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %31 = load i64, i64* %7, align 8
  %32 = call %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %30, i64 %31)
  store %struct.CUgraphNode_st** %32, %struct.CUgraphNode_st*** %12, align 8
  %33 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %33, %struct.CUgraphNode_st*** %13, align 8
  %34 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %35 to %"class.std::allocator"*
  %37 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %37, i64 %38
  %40 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %41 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %40) #3
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %36, %struct.CUgraphNode_st** %39, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %41)
          to label %42 unwind label %61

42:                                               ; preds = %3
  store %struct.CUgraphNode_st** null, %struct.CUgraphNode_st*** %13, align 8
  %43 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %44 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %45 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %44, align 8
  %46 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %47 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %48 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %47) #3
  %49 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %43, %struct.CUgraphNode_st** %45, %struct.CUgraphNode_st** %46, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %48)
          to label %50 unwind label %61

50:                                               ; preds = %42
  store %struct.CUgraphNode_st** %49, %struct.CUgraphNode_st*** %13, align 8
  %51 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %52 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %51, i32 1
  store %struct.CUgraphNode_st** %52, %struct.CUgraphNode_st*** %13, align 8
  %53 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %4) #3
  %54 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %53, align 8
  %55 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %56 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %57 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %58 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %57) #3
  %59 = invoke %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %54, %struct.CUgraphNode_st** %55, %struct.CUgraphNode_st** %56, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %58)
          to label %60 unwind label %61

60:                                               ; preds = %50
  store %struct.CUgraphNode_st** %59, %struct.CUgraphNode_st*** %13, align 8
  br label %94

61:                                               ; preds = %50, %42, %3
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %14, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %15, align 4
  br label %65

65:                                               ; preds = %61
  %66 = load i8*, i8** %14, align 8
  %67 = call i8* @__cxa_begin_catch(i8* %66) #3
  %68 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %69 = icmp ne %struct.CUgraphNode_st** %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %72 to %"class.std::allocator"*
  %74 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %75 = load i64, i64* %10, align 8
  %76 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %74, i64 %75
  invoke void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %73, %struct.CUgraphNode_st** %76)
          to label %77 unwind label %78

77:                                               ; preds = %70
  br label %88

78:                                               ; preds = %92, %88, %82, %70
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %14, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %93 unwind label %129

82:                                               ; preds = %65
  %83 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %84 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %85 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %86 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %85) #3
  invoke void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %83, %struct.CUgraphNode_st** %84, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %86)
          to label %87 unwind label %78

87:                                               ; preds = %82
  br label %88

88:                                               ; preds = %87, %77
  %89 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %90 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %91 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %89, %struct.CUgraphNode_st** %90, i64 %91)
          to label %92 unwind label %78

92:                                               ; preds = %88
  invoke void @__cxa_rethrow() #17
          to label %132 unwind label %78

93:                                               ; preds = %78
  br label %124

94:                                               ; preds = %60
  %95 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %96 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %97 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %98 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %97) #3
  call void @_ZSt8_DestroyIPP14CUgraphNode_stS1_EvT_S3_RSaIT0_E(%struct.CUgraphNode_st** %95, %struct.CUgraphNode_st** %96, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %98)
  %99 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %100 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %101 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %102, i32 0, i32 2
  %104 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %103, align 8
  %105 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  %106 = ptrtoint %struct.CUgraphNode_st** %104 to i64
  %107 = ptrtoint %struct.CUgraphNode_st** %105 to i64
  %108 = sub i64 %106, %107
  %109 = sdiv exact i64 %108, 8
  call void @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %99, %struct.CUgraphNode_st** %100, i64 %109)
  %110 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %111 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %112, i32 0, i32 0
  store %struct.CUgraphNode_st** %110, %struct.CUgraphNode_st*** %113, align 8
  %114 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %115 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %116, i32 0, i32 1
  store %struct.CUgraphNode_st** %114, %struct.CUgraphNode_st*** %117, align 8
  %118 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %12, align 8
  %119 = load i64, i64* %7, align 8
  %120 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %118, i64 %119
  %121 = bitcast %"class.std::vector"* %17 to %"struct.std::_Vector_base"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %122, i32 0, i32 2
  store %struct.CUgraphNode_st** %120, %struct.CUgraphNode_st*** %123, align 8
  ret void

124:                                              ; preds = %93
  %125 = load i8*, i8** %14, align 8
  %126 = load i32, i32* %15, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

129:                                              ; preds = %78
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #15
  unreachable

132:                                              ; preds = %92
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE3endEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %2) #7 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = bitcast %struct.CUgraphNode_st** %8 to i8*
  %10 = bitcast i8* %9 to %struct.CUgraphNode_st**
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %11) #3
  %13 = load %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %12, align 8
  store %struct.CUgraphNode_st* %13, %struct.CUgraphNode_st** %10, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st** @_ZSt7forwardIRKP14CUgraphNode_stEOT_RNSt16remove_referenceIS4_E4typeE(%struct.CUgraphNode_st** nonnull align 8 dereferenceable(8) %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %11 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #17
  unreachable

17:                                               ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %19 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  store i64 %19, i64* %8, align 8
  %20 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %8, i64* nonnull align 8 dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %9) #3
  br label %34

32:                                               ; preds = %26
  %33 = load i64, i64* %7, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %5) #3
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %8) #3
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %9, align 8
  %11 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %12 = ptrtoint %struct.CUgraphNode_st** %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt6vectorIP14CUgraphNode_stSaIS1_EE5beginEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %8, align 8
  ret %struct.CUgraphNode_st** %9
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9 to %"class.std::allocator"*
  %11 = load i64, i64* %4, align 8
  %12 = call %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %10, i64 %11)
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %8
  %15 = phi %struct.CUgraphNode_st** [ %12, %8 ], [ null, %13 ]
  ret %struct.CUgraphNode_st** %15
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt34__uninitialized_move_if_noexcept_aIPP14CUgraphNode_stS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %6, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %struct.CUgraphNode_st** %12, %struct.CUgraphNode_st*** %13, align 8
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %struct.CUgraphNode_st** %15, %struct.CUgraphNode_st*** %16, align 8
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %21, align 8
  %23 = call %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %22, %struct.CUgraphNode_st** %17, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %18)
  ret %struct.CUgraphNode_st** %23
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %struct.CUgraphNode_st*** @_ZNK9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.CUgraphNode_st*** %4
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, %struct.CUgraphNode_st** %7)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE8max_sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP14CUgraphNode_stSaIS1_EE4sizeEv(%"class.std::vector"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl", %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %10, align 8
  %12 = ptrtoint %struct.CUgraphNode_st** %7 to i64
  %13 = ptrtoint %struct.CUgraphNode_st** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  ret i64 %15
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #13

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %0, i64* nonnull align 8 dereferenceable(8) %1) #7 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8max_sizeERKS2_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %4) #3
  ret i64 %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP14CUgraphNode_stSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull align 8 dereferenceable(24) %0) #7 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<CUgraphNode_st *, std::allocator<CUgraphNode_st *>>::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) #7 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPP14CUgraphNode_stSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st*** nonnull align 8 dereferenceable(8) %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.CUgraphNode_st*** %1, %struct.CUgraphNode_st**** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st***, %struct.CUgraphNode_st**** %4, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  store %struct.CUgraphNode_st** %8, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt16allocator_traitsISaIP14CUgraphNode_stEE8allocateERS2_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1) #6 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %6, i64 %7, i8* null)
  ret %struct.CUgraphNode_st** %8
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, i64 %1, i8* %2) #6 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP14CUgraphNode_stE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %7) #3
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18
  %16 = bitcast i8* %15 to %struct.CUgraphNode_st**
  ret %struct.CUgraphNode_st** %16
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #13

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) #14

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPP14CUgraphNode_stES3_S2_ET0_T_S6_S5_RSaIT1_E(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #6 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %struct.CUgraphNode_st**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %12, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false)
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %20, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %21, %struct.CUgraphNode_st** %17)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt32__make_move_if_noexcept_iteratorIP14CUgraphNode_stSt13move_iteratorIPS1_EET0_PT_(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %3, align 8
  call void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2, %struct.CUgraphNode_st** %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  ret %struct.CUgraphNode_st** %6
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt18uninitialized_copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %11, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false)
  %16 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %19, align 8
  %21 = call %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %18, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %16)
  ret %struct.CUgraphNode_st** %21
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPP14CUgraphNode_stES5_EET0_T_S8_S7_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false)
  %15 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %17, %struct.CUgraphNode_st** %19, %struct.CUgraphNode_st** %15)
  ret %struct.CUgraphNode_st** %20
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt4copyISt13move_iteratorIPP14CUgraphNode_stES3_ET0_T_S6_S5_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %10, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %13, align 8
  %15 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %18, align 8
  %20 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %19)
  %21 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %22 = call %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %15, %struct.CUgraphNode_st** %20, %struct.CUgraphNode_st** %21)
  ret %struct.CUgraphNode_st** %22
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt14__copy_move_a2ILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %8 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %7)
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %9)
  %11 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %12 = call %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %11)
  %13 = call %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %10, %struct.CUgraphNode_st** %12)
  ret %struct.CUgraphNode_st** %13
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%struct.CUgraphNode_st** %0) #6 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %3, align 8
  %4 = call %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %2)
  %5 = call %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %4)
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt13__copy_move_aILb1EPP14CUgraphNode_stS2_ET1_T0_S4_S3_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #6 comdat {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i8, align 1
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %10 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %11 = call %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %8, %struct.CUgraphNode_st** %9, %struct.CUgraphNode_st** %10)
  ret %struct.CUgraphNode_st** %11
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__niter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP14CUgraphNode_stEEPT_PKS5_S8_S6_(%struct.CUgraphNode_st** %0, %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st** %2) #7 comdat align 2 {
  %4 = alloca %struct.CUgraphNode_st**, align 8
  %5 = alloca %struct.CUgraphNode_st**, align 8
  %6 = alloca %struct.CUgraphNode_st**, align 8
  %7 = alloca i64, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %5, align 8
  store %struct.CUgraphNode_st** %2, %struct.CUgraphNode_st*** %6, align 8
  %8 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %5, align 8
  %9 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %10 = ptrtoint %struct.CUgraphNode_st** %8 to i64
  %11 = ptrtoint %struct.CUgraphNode_st** %9 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 8
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %18 = bitcast %struct.CUgraphNode_st** %17 to i8*
  %19 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  %20 = bitcast %struct.CUgraphNode_st** %19 to i8*
  %21 = load i64, i64* %7, align 8
  %22 = mul i64 8, %21
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 %22, i1 false)
  br label %23

23:                                               ; preds = %16, %3
  %24 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds %struct.CUgraphNode_st*, %struct.CUgraphNode_st** %24, i64 %25
  ret %struct.CUgraphNode_st** %26
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZSt12__miter_baseIPP14CUgraphNode_stET_S3_(%struct.CUgraphNode_st** %0) #7 comdat {
  %2 = alloca %struct.CUgraphNode_st**, align 8
  store %struct.CUgraphNode_st** %0, %struct.CUgraphNode_st*** %2, align 8
  %3 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %2, align 8
  ret %struct.CUgraphNode_st** %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.CUgraphNode_st** @_ZNKSt13move_iteratorIPP14CUgraphNode_stE4baseEv(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0) #7 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret %struct.CUgraphNode_st** %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPP14CUgraphNode_stEC2ES2_(%"class.std::move_iterator"* nonnull align 8 dereferenceable(8) %0, %struct.CUgraphNode_st** %1) unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  store %struct.CUgraphNode_st** %7, %struct.CUgraphNode_st*** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP14CUgraphNode_stE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0, %struct.CUgraphNode_st** %1) #7 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %struct.CUgraphNode_st**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %struct.CUgraphNode_st** %1, %struct.CUgraphNode_st*** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %struct.CUgraphNode_st**, %struct.CUgraphNode_st*** %4, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0) #7 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_b6.cu() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

define internal void @__cuda_register_globals(i8** %0) {
  %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, i32*, float*, i32, i32, i32)* @_Z19__device_stub__nb_1iPfPiS_iii to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %3 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_2iPfS_ii to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %4 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32, i32)* @_Z19__device_stub__nb_3iPfS_S_ii to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @2, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %5 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__nb_4iPfS_ii to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @3, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %6 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, i32*, i32, i32)* @_Z19__device_stub__rr_1iPfPiii to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @4, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %7 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, float*, i32, i32, i32)* @_Z19__device_stub__rr_2iPfS_S_iii to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @5, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %8 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, float*, i32, i32)* @_Z19__device_stub__rr_3iPfS_ii to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @6, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @6, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %9 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, float*, i32, i32)* @_Z22__device_stub__softmaxiPfii to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @7, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %10 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void (i32, i32*, float*, float*, i32, i32)* @_Z21__device_stub__argmaxiPiPfS0_ii to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @8, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  ret void
}

declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*)

declare dso_local void @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i64, i32, i32)

declare dso_local void @__cudaRegisterManagedVar(i8**, i8*, i8*, i8*, i64, i32)

declare dso_local void @__cudaRegisterSurface(i8**, i8*, i8*, i8*, i32, i32)

declare dso_local void @__cudaRegisterTexture(i8**, i8*, i8*, i8*, i32, i32, i32)

declare dso_local i8** @__cudaRegisterFatBinary(i8*)

define internal void @__cuda_module_ctor(i8* %0) {
  %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*))
  store i8** %2, i8*** @__cuda_gpubin_handle, align 8
  call void @__cuda_register_globals(i8** %2)
  call void @__cudaRegisterFatBinaryEnd(i8** %2)
  %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor)
  ret void
}

declare dso_local void @__cudaRegisterFatBinaryEnd(i8**)

declare dso_local void @__cudaUnregisterFatBinary(i8**)

define internal void @__cuda_module_dtor(i8* %0) {
  %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8
  call void @__cudaUnregisterFatBinary(i8** %2)
  ret void
}

declare dso_local i32 @atexit(void (i8*)*)

attributes #0 = { noinline uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { mustprogress noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noinline noreturn nounwind }
attributes #10 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nobuiltin allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn }
attributes #18 = { allocsize(0) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 11, i32 2]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 2}
!4 = !{!"clang version 13.0.0"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
